{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingUserId, setEditingUserId] = useState(null);\n  const [editedUser, setEditedUser] = useState({});\n  const [departments, setDepartments] = useState([]);\n  const [positions, setPositions] = useState([]);\n  useEffect(() => {\n    getUsers();\n    fetchDepartments();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useEffect(() => {\n    if (editedUser.job_id) {\n      fetchPositions(editedUser.job_id);\n    }\n  }, [editedUser.job_id]);\n  useEffect(() => {\n    const selectedPosition = positions.find(pos => String(pos.id) === String(editedUser.salary_id));\n    setEditedUser(prev => ({ ...prev,\n      salary: selectedPosition ? selectedPosition.salary : \"\"\n    }));\n  }, [editedUser.salary_id, positions]);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setDepartments(response.data);\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error);\n    }\n  };\n\n  const fetchPositions = async dep_id => {\n    try {\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\n      setPositions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching positions:\", error);\n    }\n  };\n\n  const startEditing = user => {\n    setEditingUserId(user.id);\n    setEditedUser(user);\n    fetchPositions(user.job_id);\n  };\n\n  const cancelEditing = () => {\n    setEditingUserId(null);\n    setEditedUser({});\n  };\n\n  const saveUser = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/users/${id}`, editedUser);\n      setUsers(users.map(user => user.id === id ? { ...user,\n        ...editedUser\n      } : user));\n      setEditingUserId(null);\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between m-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Full Name, Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-striped is-fullwidth\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => {\n              var _editedUser$salary;\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"input\",\n                    value: editedUser.full_name || \"\",\n                    onChange: e => setEditedUser({ ...editedUser,\n                      full_name: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this) : user.full_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input\",\n                    value: editedUser.job_id || \"\",\n                    onChange: e => setEditedUser({ ...editedUser,\n                      job_id: e.target.value\n                    }),\n                    children: departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dep.id,\n                      children: dep.Job_Title\n                    }, dep.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this) : user.Job_Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input\",\n                    value: editedUser.salary_id || \"\",\n                    onChange: e => setEditedUser({ ...editedUser,\n                      salary_id: e.target.value\n                    }),\n                    children: positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: pos.id,\n                      children: pos.position\n                    }, pos.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 23\n                  }, this) : user.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B1\", ((_editedUser$salary = editedUser.salary) === null || _editedUser$salary === void 0 ? void 0 : _editedUser$salary.toLocaleString(\"en-PH\")) || \"-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button is-small is-success mr-2\",\n                      onClick: () => saveUser(user.id),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button is-small is-danger\",\n                      onClick: cancelEditing,\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button is-small is-info mr-2\",\n                    onClick: () => startEditing(user),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"YvtunPClcsepLZziiXy6a31Rm38=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","editingUserId","setEditingUserId","editedUser","setEditedUser","departments","setDepartments","positions","setPositions","getUsers","fetchDepartments","handleResize","addEventListener","removeEventListener","job_id","fetchPositions","selectedPosition","find","pos","String","id","salary_id","prev","salary","response","get","data","error","console","dep_id","startEditing","user","cancelEditing","saveUser","patch","map","position","zIndex","maxWidth","e","target","value","full_name","email","dep","Job_Title","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n  const [editedUser, setEditedUser] = useState({});\r\n  const [departments, setDepartments] = useState([]);\r\n  const [positions, setPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    fetchDepartments();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (editedUser.job_id) {\r\n      fetchPositions(editedUser.job_id);\r\n    }\r\n  }, [editedUser.job_id]);\r\n\r\n  useEffect(() => {\r\n    const selectedPosition = positions.find(pos => String(pos.id) === String(editedUser.salary_id));\r\n    setEditedUser(prev => ({ ...prev, salary: selectedPosition ? selectedPosition.salary : \"\" }));\r\n  }, [editedUser.salary_id, positions]);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchPositions = async (dep_id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\r\n      setPositions(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching positions:\", error);\r\n    }\r\n  };\r\n\r\n  const startEditing = (user) => {\r\n    setEditingUserId(user.id);\r\n    setEditedUser(user);\r\n    fetchPositions(user.job_id);\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingUserId(null);\r\n    setEditedUser({});\r\n  };\r\n\r\n  const saveUser = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, editedUser);\r\n      setUsers(users.map(user => (user.id === id ? { ...user, ...editedUser } : user)));\r\n      setEditingUserId(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div className=\"column container mt-5\" style={{ position: \"relative\", zIndex: 1 }}>\r\n        <div className=\"is-flex is-justify-content-space-between m-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Full Name, Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"table-container overflow-x-auto\">\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Employee ID</th>\r\n                <th>Full Name</th>\r\n                <th>Email</th>\r\n                <th>Job Title</th>\r\n                <th>Position</th>\r\n                <th>Salary</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={editedUser.full_name || \"\"}\r\n                        onChange={(e) => setEditedUser({ ...editedUser, full_name: e.target.value })}\r\n                      />\r\n                    ) : (\r\n                      user.full_name\r\n                    )}\r\n                  </td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <select\r\n                        className=\"input\"\r\n                        value={editedUser.job_id || \"\"}\r\n                        onChange={(e) => setEditedUser({ ...editedUser, job_id: e.target.value })}\r\n                      >\r\n                        {departments.map(dep => (\r\n                          <option key={dep.id} value={dep.id}>{dep.Job_Title}</option>\r\n                        ))}\r\n                      </select>\r\n                    ) : (\r\n                      user.Job_Title\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <select\r\n                        className=\"input\"\r\n                        value={editedUser.salary_id || \"\"}\r\n                        onChange={(e) => setEditedUser({ ...editedUser, salary_id: e.target.value })}\r\n                      >\r\n                        {positions.map(pos => (\r\n                          <option key={pos.id} value={pos.id}>{pos.position}</option>\r\n                        ))}\r\n                      </select>\r\n                    ) : (\r\n                      user.position\r\n                    )}\r\n                  </td>\r\n                  <td>₱{editedUser.salary?.toLocaleString(\"en-PH\") || \"-\"}</td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <>\r\n                        <button className=\"button is-small is-success mr-2\" onClick={() => saveUser(user.id)}>Save</button>\r\n                        <button className=\"button is-small is-danger\" onClick={cancelEditing}>Cancel</button>\r\n                      </>\r\n                    ) : (\r\n                      <button className=\"button is-small is-info mr-2\" onClick={() => startEditing(user)}>Edit</button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}