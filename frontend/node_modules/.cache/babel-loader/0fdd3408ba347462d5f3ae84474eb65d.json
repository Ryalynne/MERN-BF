{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\New folder\\\\MERN-BF\\\\frontend\\\\src\\\\components\\\\Printing\\\\EmployeePDF.js\";\nimport React from \"react\";\nimport { Page, Text, View, Document } from \"@react-pdf/renderer\";\nimport styles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeePDF = _ref => {\n  let {\n    users\n  } = _ref;\n  const currentDate = new Date().toLocaleDateString(\"en-PH\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      size: \"A4\",\n      style: styles.page,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.header,\n        children: \"Employee Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          style: styles.tableHeader,\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableHeaderCell,\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableHeaderCell,\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.emailHeaderCell,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableHeaderCell,\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: [styles.tableHeaderCell, {\n              borderRight: \"none\"\n            }],\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), users.map((user, index) => /*#__PURE__*/_jsxDEV(View, {\n          style: [styles.tableRow, index % 2 !== 0 ? styles.tableRowAlternate : null, index === users.length - 1 ? {\n            borderBottom: \"none\"\n          } : null // Remove bottom border from last row\n          ],\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.emailCell,\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.tableCell,\n            children: user.Job_Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            style: [styles.salaryCell, {\n              borderRight: \"none\"\n            }],\n            children: user.salary ? parseFloat(user.salary).toLocaleString(\"en-PH\", {\n              minimumFractionDigits: 2\n            }) : \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.datePrinted,\n        children: [\"Date Printed: \", currentDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EmployeePDF;\nexport default EmployeePDF;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeePDF\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/src/components/Printing/EmployeePDF.js"],"names":["React","Page","Text","View","Document","styles","EmployeePDF","users","currentDate","Date","toLocaleDateString","year","month","day","page","header","table","tableHeader","tableHeaderCell","emailHeaderCell","borderRight","map","user","index","tableRow","tableRowAlternate","length","borderBottom","tableCell","id","full_name","emailCell","email","Job_Title","salaryCell","salary","parseFloat","toLocaleString","minimumFractionDigits","datePrinted"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Page, Text, View, Document } from \"@react-pdf/renderer\";\r\nimport styles from \"./styles\";\r\n\r\nconst EmployeePDF = ({ users }) => {\r\n  const currentDate = new Date().toLocaleDateString(\"en-PH\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <Text style={styles.header}>Employee Table</Text>\r\n        <View style={styles.table}>\r\n          {/* Table Header */}\r\n          <View style={styles.tableHeader}>\r\n            <Text style={styles.tableHeaderCell}>Employee ID</Text>\r\n            <Text style={styles.tableHeaderCell}>Full Name</Text>\r\n            <Text style={styles.emailHeaderCell}>Email</Text>\r\n            <Text style={styles.tableHeaderCell}>Job Title</Text>\r\n            <Text style={[styles.tableHeaderCell, { borderRight: \"none\" }]}>\r\n              Salary\r\n            </Text> {/* Remove border from last header cell */}\r\n          </View>\r\n\r\n          {/* Table Data */}\r\n          {users.map((user, index) => (\r\n            <View\r\n              style={[\r\n                styles.tableRow,\r\n                index % 2 !== 0 ? styles.tableRowAlternate : null,\r\n                index === users.length - 1 ? { borderBottom: \"none\" } : null, // Remove bottom border from last row\r\n              ]}\r\n              key={user.id}\r\n            >\r\n              <Text style={styles.tableCell}>{user.id}</Text>\r\n              <Text style={styles.tableCell}>{user.full_name}</Text>\r\n              <Text style={styles.emailCell}>{user.email}</Text>\r\n              <Text style={styles.tableCell}>{user.Job_Title}</Text>\r\n              <Text style={[styles.salaryCell, { borderRight: \"none\" }]}>\r\n                {user.salary\r\n                  ? parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n                      minimumFractionDigits: 2,\r\n                    })\r\n                  : \"N/A\"}\r\n              </Text>\r\n            </View>\r\n          ))}\r\n        </View>\r\n\r\n        {/* Date Printed */}\r\n        <Text style={styles.datePrinted}>Date Printed: {currentDate}</Text>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default EmployeePDF;"]},"metadata":{},"sourceType":"module"}