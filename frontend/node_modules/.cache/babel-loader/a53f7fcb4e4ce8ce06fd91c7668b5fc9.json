{"ast":null,"code":"import { useState, useLayoutEffect } from 'react';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../../render/VisualElement.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nconst createObject = () => ({});\n\nclass StateVisualElement extends VisualElement {\n  constructor() {\n    super(...arguments);\n    this.measureInstanceViewportBox = createBox;\n  }\n\n  build() {}\n\n  resetTransform() {}\n\n  restoreTransform() {}\n\n  removeValueFromRenderState() {}\n\n  renderInstance() {}\n\n  scrapeMotionValuesFromProps() {\n    return createObject();\n  }\n\n  getBaseTargetFromProps() {\n    return undefined;\n  }\n\n  readValueFromInstance(_state, key, options) {\n    return options.initialState[key] || 0;\n  }\n\n  sortInstanceNodePosition() {\n    return 0;\n  }\n\n}\n\nconst useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\r\n * This is not an officially supported API and may be removed\r\n * on any version.\r\n */\n\nfunction useAnimatedState(initialState) {\n  const [animationState, setAnimationState] = useState(initialState);\n  const visualState = useVisualState({}, false);\n  const element = useConstant(() => {\n    return new StateVisualElement({\n      props: {\n        onUpdate: v => {\n          setAnimationState({ ...v\n          });\n        }\n      },\n      visualState,\n      presenceContext: null\n    }, {\n      initialState\n    });\n  });\n  useLayoutEffect(() => {\n    element.mount({});\n    return () => element.unmount();\n  }, [element]);\n  const startAnimation = useConstant(() => animationDefinition => {\n    return animateVisualElement(element, animationDefinition);\n  });\n  return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/framer-motion/dist/es/animation/hooks/use-animated-state.mjs"],"names":["useState","useLayoutEffect","useConstant","makeUseVisualState","createBox","VisualElement","animateVisualElement","createObject","StateVisualElement","constructor","arguments","measureInstanceViewportBox","build","resetTransform","restoreTransform","removeValueFromRenderState","renderInstance","scrapeMotionValuesFromProps","getBaseTargetFromProps","undefined","readValueFromInstance","_state","key","options","initialState","sortInstanceNodePosition","useVisualState","createRenderState","useAnimatedState","animationState","setAnimationState","visualState","element","props","onUpdate","v","presenceContext","mount","unmount","startAnimation","animationDefinition"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,oBAAT,QAAqC,kCAArC;;AAEA,MAAMC,YAAY,GAAG,OAAO,EAAP,CAArB;;AACA,MAAMC,kBAAN,SAAiCH,aAAjC,CAA+C;AAC3CI,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,0BAAL,GAAkCP,SAAlC;AACH;;AACDQ,EAAAA,KAAK,GAAG,CAAG;;AACXC,EAAAA,cAAc,GAAG,CAAG;;AACpBC,EAAAA,gBAAgB,GAAG,CAAG;;AACtBC,EAAAA,0BAA0B,GAAG,CAAG;;AAChCC,EAAAA,cAAc,GAAG,CAAG;;AACpBC,EAAAA,2BAA2B,GAAG;AAC1B,WAAOV,YAAY,EAAnB;AACH;;AACDW,EAAAA,sBAAsB,GAAG;AACrB,WAAOC,SAAP;AACH;;AACDC,EAAAA,qBAAqB,CAACC,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuB;AACxC,WAAOA,OAAO,CAACC,YAAR,CAAqBF,GAArB,KAA6B,CAApC;AACH;;AACDG,EAAAA,wBAAwB,GAAG;AACvB,WAAO,CAAP;AACH;;AArB0C;;AAuB/C,MAAMC,cAAc,GAAGvB,kBAAkB,CAAC;AACtCc,EAAAA,2BAA2B,EAAEV,YADS;AAEtCoB,EAAAA,iBAAiB,EAAEpB;AAFmB,CAAD,CAAzC;AAIA;AACA;AACA;AACA;;AACA,SAASqB,gBAAT,CAA0BJ,YAA1B,EAAwC;AACpC,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsC9B,QAAQ,CAACwB,YAAD,CAApD;AACA,QAAMO,WAAW,GAAGL,cAAc,CAAC,EAAD,EAAK,KAAL,CAAlC;AACA,QAAMM,OAAO,GAAG9B,WAAW,CAAC,MAAM;AAC9B,WAAO,IAAIM,kBAAJ,CAAuB;AAC1ByB,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAGC,CAAD,IAAO;AACbL,UAAAA,iBAAiB,CAAC,EAAE,GAAGK;AAAL,WAAD,CAAjB;AACH;AAHE,OADmB;AAM1BJ,MAAAA,WAN0B;AAO1BK,MAAAA,eAAe,EAAE;AAPS,KAAvB,EAQJ;AAAEZ,MAAAA;AAAF,KARI,CAAP;AASH,GAV0B,CAA3B;AAWAvB,EAAAA,eAAe,CAAC,MAAM;AAClB+B,IAAAA,OAAO,CAACK,KAAR,CAAc,EAAd;AACA,WAAO,MAAML,OAAO,CAACM,OAAR,EAAb;AACH,GAHc,EAGZ,CAACN,OAAD,CAHY,CAAf;AAIA,QAAMO,cAAc,GAAGrC,WAAW,CAAC,MAAOsC,mBAAD,IAAyB;AAC9D,WAAOlC,oBAAoB,CAAC0B,OAAD,EAAUQ,mBAAV,CAA3B;AACH,GAFiC,CAAlC;AAGA,SAAO,CAACX,cAAD,EAAiBU,cAAjB,CAAP;AACH;;AAED,SAASX,gBAAT","sourcesContent":["import { useState, useLayoutEffect } from 'react';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { createBox } from '../../projection/geometry/models.mjs';\r\nimport { VisualElement } from '../../render/VisualElement.mjs';\r\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\r\n\r\nconst createObject = () => ({});\r\nclass StateVisualElement extends VisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.measureInstanceViewportBox = createBox;\r\n    }\r\n    build() { }\r\n    resetTransform() { }\r\n    restoreTransform() { }\r\n    removeValueFromRenderState() { }\r\n    renderInstance() { }\r\n    scrapeMotionValuesFromProps() {\r\n        return createObject();\r\n    }\r\n    getBaseTargetFromProps() {\r\n        return undefined;\r\n    }\r\n    readValueFromInstance(_state, key, options) {\r\n        return options.initialState[key] || 0;\r\n    }\r\n    sortInstanceNodePosition() {\r\n        return 0;\r\n    }\r\n}\r\nconst useVisualState = makeUseVisualState({\r\n    scrapeMotionValuesFromProps: createObject,\r\n    createRenderState: createObject,\r\n});\r\n/**\r\n * This is not an officially supported API and may be removed\r\n * on any version.\r\n */\r\nfunction useAnimatedState(initialState) {\r\n    const [animationState, setAnimationState] = useState(initialState);\r\n    const visualState = useVisualState({}, false);\r\n    const element = useConstant(() => {\r\n        return new StateVisualElement({\r\n            props: {\r\n                onUpdate: (v) => {\r\n                    setAnimationState({ ...v });\r\n                },\r\n            },\r\n            visualState,\r\n            presenceContext: null,\r\n        }, { initialState });\r\n    });\r\n    useLayoutEffect(() => {\r\n        element.mount({});\r\n        return () => element.unmount();\r\n    }, [element]);\r\n    const startAnimation = useConstant(() => (animationDefinition) => {\r\n        return animateVisualElement(element, animationDefinition);\r\n    });\r\n    return [animationState, startAnimation];\r\n}\r\n\r\nexport { useAnimatedState };\r\n"]},"metadata":{},"sourceType":"module"}