{"ast":null,"code":"import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\n\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n  const viewportBox = measureViewportBox(element, transformPagePoint);\n  const {\n    scroll\n  } = rootProjectionNode;\n\n  if (scroll) {\n    translateAxis(viewportBox.x, scroll.offset.x);\n    translateAxis(viewportBox.y, scroll.offset.y);\n  }\n\n  return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/framer-motion/dist/es/projection/utils/measure.mjs"],"names":["convertBoundingBoxToBox","transformBoxPoints","translateAxis","measureViewportBox","instance","transformPoint","getBoundingClientRect","measurePageBox","element","rootProjectionNode","transformPagePoint","viewportBox","scroll","x","offset","y"],"mappings":"AAAA,SAASA,uBAAT,EAAkCC,kBAAlC,QAA4D,4BAA5D;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,cAAtC,EAAsD;AAClD,SAAOL,uBAAuB,CAACC,kBAAkB,CAACG,QAAQ,CAACE,qBAAT,EAAD,EAAmCD,cAAnC,CAAnB,CAA9B;AACH;;AACD,SAASE,cAAT,CAAwBC,OAAxB,EAAiCC,kBAAjC,EAAqDC,kBAArD,EAAyE;AACrE,QAAMC,WAAW,GAAGR,kBAAkB,CAACK,OAAD,EAAUE,kBAAV,CAAtC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAaH,kBAAnB;;AACA,MAAIG,MAAJ,EAAY;AACRV,IAAAA,aAAa,CAACS,WAAW,CAACE,CAAb,EAAgBD,MAAM,CAACE,MAAP,CAAcD,CAA9B,CAAb;AACAX,IAAAA,aAAa,CAACS,WAAW,CAACI,CAAb,EAAgBH,MAAM,CAACE,MAAP,CAAcC,CAA9B,CAAb;AACH;;AACD,SAAOJ,WAAP;AACH;;AAED,SAASJ,cAAT,EAAyBJ,kBAAzB","sourcesContent":["import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\r\nimport { translateAxis } from '../geometry/delta-apply.mjs';\r\n\r\nfunction measureViewportBox(instance, transformPoint) {\r\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\r\n}\r\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\r\n    const viewportBox = measureViewportBox(element, transformPagePoint);\r\n    const { scroll } = rootProjectionNode;\r\n    if (scroll) {\r\n        translateAxis(viewportBox.x, scroll.offset.x);\r\n        translateAxis(viewportBox.y, scroll.offset.y);\r\n    }\r\n    return viewportBox;\r\n}\r\n\r\nexport { measurePageBox, measureViewportBox };\r\n"]},"metadata":{},"sourceType":"module"}