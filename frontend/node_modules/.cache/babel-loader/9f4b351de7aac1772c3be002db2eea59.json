{"ast":null,"code":"import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n/**\r\n * Timeout defined in ms\r\n */\n\nfunction delay(callback, timeout) {\n  const start = time.now();\n\n  const checkElapsed = _ref => {\n    let {\n      timestamp\n    } = _ref;\n    const elapsed = timestamp - start;\n\n    if (elapsed >= timeout) {\n      cancelFrame(checkElapsed);\n      callback(elapsed - timeout);\n    }\n  };\n\n  frame.read(checkElapsed, true);\n  return () => cancelFrame(checkElapsed);\n}\n\nfunction delayInSeconds(callback, timeout) {\n  return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/framer-motion/dist/es/utils/delay.mjs"],"names":["time","frame","cancelFrame","secondsToMilliseconds","delay","callback","timeout","start","now","checkElapsed","timestamp","elapsed","read","delayInSeconds"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,WAAtB,QAAyC,YAAzC;AACA,SAASC,qBAAT,QAAsC,cAAtC;AAEA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,QAAf,EAAyBC,OAAzB,EAAkC;AAC9B,QAAMC,KAAK,GAAGP,IAAI,CAACQ,GAAL,EAAd;;AACA,QAAMC,YAAY,GAAG,QAAmB;AAAA,QAAlB;AAAEC,MAAAA;AAAF,KAAkB;AACpC,UAAMC,OAAO,GAAGD,SAAS,GAAGH,KAA5B;;AACA,QAAII,OAAO,IAAIL,OAAf,EAAwB;AACpBJ,MAAAA,WAAW,CAACO,YAAD,CAAX;AACAJ,MAAAA,QAAQ,CAACM,OAAO,GAAGL,OAAX,CAAR;AACH;AACJ,GAND;;AAOAL,EAAAA,KAAK,CAACW,IAAN,CAAWH,YAAX,EAAyB,IAAzB;AACA,SAAO,MAAMP,WAAW,CAACO,YAAD,CAAxB;AACH;;AACD,SAASI,cAAT,CAAwBR,QAAxB,EAAkCC,OAAlC,EAA2C;AACvC,SAAOF,KAAK,CAACC,QAAD,EAAWF,qBAAqB,CAACG,OAAD,CAAhC,CAAZ;AACH;;AAED,SAASF,KAAT,EAAgBS,cAAhB","sourcesContent":["import { time, frame, cancelFrame } from 'motion-dom';\r\nimport { secondsToMilliseconds } from 'motion-utils';\r\n\r\n/**\r\n * Timeout defined in ms\r\n */\r\nfunction delay(callback, timeout) {\r\n    const start = time.now();\r\n    const checkElapsed = ({ timestamp }) => {\r\n        const elapsed = timestamp - start;\r\n        if (elapsed >= timeout) {\r\n            cancelFrame(checkElapsed);\r\n            callback(elapsed - timeout);\r\n        }\r\n    };\r\n    frame.read(checkElapsed, true);\r\n    return () => cancelFrame(checkElapsed);\r\n}\r\nfunction delayInSeconds(callback, timeout) {\r\n    return delay(callback, secondsToMilliseconds(timeout));\r\n}\r\n\r\nexport { delay, delayInSeconds };\r\n"]},"metadata":{},"sourceType":"module"}