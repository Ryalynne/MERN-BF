{"ast":null,"code":"import { secondsToMilliseconds } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { createGeneratorEasing } from '../../generators/utils/create-generator-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { mapEasingToNativeEasing } from './easing.mjs';\nconst defaultEasing = \"easeOut\";\n\nfunction applyGeneratorOptions(options) {\n  var _a;\n\n  if (isGenerator(options.type)) {\n    const generatorOptions = createGeneratorEasing(options, 100, options.type);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : defaultEasing;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n  } else {\n    options.duration = secondsToMilliseconds((_a = options.duration) !== null && _a !== void 0 ? _a : 0.3);\n    options.ease = options.ease || defaultEasing;\n  }\n} // TODO: Reuse for NativeAnimation\n\n\nfunction convertMotionOptionsToNative(valueName, keyframes, options) {\n  var _a;\n\n  const nativeKeyframes = {};\n  const nativeOptions = {\n    fill: \"both\",\n    easing: \"linear\",\n    composite: \"replace\"\n  };\n  nativeOptions.delay = secondsToMilliseconds((_a = options.delay) !== null && _a !== void 0 ? _a : 0);\n  applyGeneratorOptions(options);\n  nativeOptions.duration = options.duration;\n  const {\n    ease,\n    times\n  } = options;\n  if (times) nativeKeyframes.offset = times;\n  nativeKeyframes[valueName] = keyframes;\n  const easing = mapEasingToNativeEasing(ease, options.duration);\n  /**\r\n   * If this is an easing array, apply to keyframes, not animation as a whole\r\n   */\n\n  if (Array.isArray(easing)) {\n    nativeKeyframes.easing = easing;\n  } else {\n    nativeOptions.easing = easing;\n  }\n\n  return {\n    keyframes: nativeKeyframes,\n    options: nativeOptions\n  };\n}\n\nexport { applyGeneratorOptions, convertMotionOptionsToNative };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/motion-dom/dist/es/animation/waapi/utils/convert-options.mjs"],"names":["secondsToMilliseconds","supportsLinearEasing","createGeneratorEasing","isGenerator","mapEasingToNativeEasing","defaultEasing","applyGeneratorOptions","options","_a","type","generatorOptions","ease","duration","convertMotionOptionsToNative","valueName","keyframes","nativeKeyframes","nativeOptions","fill","easing","composite","delay","times","offset","Array","isArray"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,cAAtC;AACA,SAASC,oBAAT,QAAqC,2CAArC;AACA,SAASC,qBAAT,QAAsC,oDAAtC;AACA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,uBAAT,QAAwC,cAAxC;AAEA,MAAMC,aAAa,GAAG,SAAtB;;AACA,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AACpC,MAAIC,EAAJ;;AACA,MAAIL,WAAW,CAACI,OAAO,CAACE,IAAT,CAAf,EAA+B;AAC3B,UAAMC,gBAAgB,GAAGR,qBAAqB,CAACK,OAAD,EAAU,GAAV,EAAeA,OAAO,CAACE,IAAvB,CAA9C;AACAF,IAAAA,OAAO,CAACI,IAAR,GAAeV,oBAAoB,KAC7BS,gBAAgB,CAACC,IADY,GAE7BN,aAFN;AAGAE,IAAAA,OAAO,CAACK,QAAR,GAAmBZ,qBAAqB,CAACU,gBAAgB,CAACE,QAAlB,CAAxC;AACAL,IAAAA,OAAO,CAACE,IAAR,GAAe,WAAf;AACH,GAPD,MAQK;AACDF,IAAAA,OAAO,CAACK,QAAR,GAAmBZ,qBAAqB,CAAC,CAACQ,EAAE,GAAGD,OAAO,CAACK,QAAd,MAA4B,IAA5B,IAAoCJ,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyD,GAA1D,CAAxC;AACAD,IAAAA,OAAO,CAACI,IAAR,GAAeJ,OAAO,CAACI,IAAR,IAAgBN,aAA/B;AACH;AACJ,C,CACD;;;AACA,SAASQ,4BAAT,CAAsCC,SAAtC,EAAiDC,SAAjD,EAA4DR,OAA5D,EAAqE;AACjE,MAAIC,EAAJ;;AACA,QAAMQ,eAAe,GAAG,EAAxB;AACA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,IAAI,EAAE,MADY;AAElBC,IAAAA,MAAM,EAAE,QAFU;AAGlBC,IAAAA,SAAS,EAAE;AAHO,GAAtB;AAKAH,EAAAA,aAAa,CAACI,KAAd,GAAsBrB,qBAAqB,CAAC,CAACQ,EAAE,GAAGD,OAAO,CAACc,KAAd,MAAyB,IAAzB,IAAiCb,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsD,CAAvD,CAA3C;AACAF,EAAAA,qBAAqB,CAACC,OAAD,CAArB;AACAU,EAAAA,aAAa,CAACL,QAAd,GAAyBL,OAAO,CAACK,QAAjC;AACA,QAAM;AAAED,IAAAA,IAAF;AAAQW,IAAAA;AAAR,MAAkBf,OAAxB;AACA,MAAIe,KAAJ,EACIN,eAAe,CAACO,MAAhB,GAAyBD,KAAzB;AACJN,EAAAA,eAAe,CAACF,SAAD,CAAf,GAA6BC,SAA7B;AACA,QAAMI,MAAM,GAAGf,uBAAuB,CAACO,IAAD,EAAOJ,OAAO,CAACK,QAAf,CAAtC;AACA;AACJ;AACA;;AACI,MAAIY,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAJ,EAA2B;AACvBH,IAAAA,eAAe,CAACG,MAAhB,GAAyBA,MAAzB;AACH,GAFD,MAGK;AACDF,IAAAA,aAAa,CAACE,MAAd,GAAuBA,MAAvB;AACH;;AACD,SAAO;AACHJ,IAAAA,SAAS,EAAEC,eADR;AAEHT,IAAAA,OAAO,EAAEU;AAFN,GAAP;AAIH;;AAED,SAASX,qBAAT,EAAgCO,4BAAhC","sourcesContent":["import { secondsToMilliseconds } from 'motion-utils';\r\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\r\nimport { createGeneratorEasing } from '../../generators/utils/create-generator-easing.mjs';\r\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\r\nimport { mapEasingToNativeEasing } from './easing.mjs';\r\n\r\nconst defaultEasing = \"easeOut\";\r\nfunction applyGeneratorOptions(options) {\r\n    var _a;\r\n    if (isGenerator(options.type)) {\r\n        const generatorOptions = createGeneratorEasing(options, 100, options.type);\r\n        options.ease = supportsLinearEasing()\r\n            ? generatorOptions.ease\r\n            : defaultEasing;\r\n        options.duration = secondsToMilliseconds(generatorOptions.duration);\r\n        options.type = \"keyframes\";\r\n    }\r\n    else {\r\n        options.duration = secondsToMilliseconds((_a = options.duration) !== null && _a !== void 0 ? _a : 0.3);\r\n        options.ease = options.ease || defaultEasing;\r\n    }\r\n}\r\n// TODO: Reuse for NativeAnimation\r\nfunction convertMotionOptionsToNative(valueName, keyframes, options) {\r\n    var _a;\r\n    const nativeKeyframes = {};\r\n    const nativeOptions = {\r\n        fill: \"both\",\r\n        easing: \"linear\",\r\n        composite: \"replace\",\r\n    };\r\n    nativeOptions.delay = secondsToMilliseconds((_a = options.delay) !== null && _a !== void 0 ? _a : 0);\r\n    applyGeneratorOptions(options);\r\n    nativeOptions.duration = options.duration;\r\n    const { ease, times } = options;\r\n    if (times)\r\n        nativeKeyframes.offset = times;\r\n    nativeKeyframes[valueName] = keyframes;\r\n    const easing = mapEasingToNativeEasing(ease, options.duration);\r\n    /**\r\n     * If this is an easing array, apply to keyframes, not animation as a whole\r\n     */\r\n    if (Array.isArray(easing)) {\r\n        nativeKeyframes.easing = easing;\r\n    }\r\n    else {\r\n        nativeOptions.easing = easing;\r\n    }\r\n    return {\r\n        keyframes: nativeKeyframes,\r\n        options: nativeOptions,\r\n    };\r\n}\r\n\r\nexport { applyGeneratorOptions, convertMotionOptionsToNative };\r\n"]},"metadata":{},"sourceType":"module"}