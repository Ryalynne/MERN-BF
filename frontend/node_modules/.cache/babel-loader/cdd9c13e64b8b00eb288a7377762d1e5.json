{"ast":null,"code":"import { Number as NumberT } from './Number.js';\nexport function resolveLength(length, stream, parent) {\n  let res;\n\n  if (typeof length === 'number') {\n    res = length;\n  } else if (typeof length === 'function') {\n    res = length.call(parent, parent);\n  } else if (parent && typeof length === 'string') {\n    res = parent[length];\n  } else if (stream && length instanceof NumberT) {\n    res = length.decode(stream);\n  }\n\n  if (isNaN(res)) {\n    throw new Error('Not a fixed size');\n  }\n\n  return res;\n}\n;\nexport class PropertyDescriptor {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.enumerable = true;\n    this.configurable = true;\n\n    for (let key in opts) {\n      const val = opts[key];\n      this[key] = val;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/restructure/src/utils.js"],"names":["Number","NumberT","resolveLength","length","stream","parent","res","call","decode","isNaN","Error","PropertyDescriptor","constructor","opts","enumerable","configurable","key","val"],"mappings":"AAAA,SAAQA,MAAM,IAAIC,OAAlB,QAAgC,aAAhC;AAEA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+C;AACpD,MAAIC,GAAJ;;AACA,MAAI,OAAOH,MAAP,KAAkB,QAAtB,EAAgC;AAC9BG,IAAAA,GAAG,GAAGH,MAAN;AAED,GAHD,MAGO,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AACvCG,IAAAA,GAAG,GAAGH,MAAM,CAACI,IAAP,CAAYF,MAAZ,EAAoBA,MAApB,CAAN;AAED,GAHM,MAGA,IAAIA,MAAM,IAAK,OAAOF,MAAP,KAAkB,QAAjC,EAA4C;AACjDG,IAAAA,GAAG,GAAGD,MAAM,CAACF,MAAD,CAAZ;AAED,GAHM,MAGA,IAAIC,MAAM,IAAID,MAAM,YAAYF,OAAhC,EAAyC;AAC9CK,IAAAA,GAAG,GAAGH,MAAM,CAACK,MAAP,CAAcJ,MAAd,CAAN;AACD;;AAED,MAAIK,KAAK,CAACH,GAAD,CAAT,EAAgB;AACd,UAAM,IAAII,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED,SAAOJ,GAAP;AACD;AAAA;AAED,OAAO,MAAMK,kBAAN,CAAyB;AAC9BC,EAAAA,WAAW,GAAY;AAAA,QAAXC,IAAW,uEAAJ,EAAI;AACrB,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,YAAL,GAAoB,IAApB;;AAEA,SAAK,IAAIC,GAAT,IAAgBH,IAAhB,EAAsB;AACpB,YAAMI,GAAG,GAAGJ,IAAI,CAACG,GAAD,CAAhB;AACA,WAAKA,GAAL,IAAYC,GAAZ;AACD;AACF;;AAT6B","sourcesContent":["import {Number as NumberT} from './Number.js';\r\n\r\nexport function resolveLength(length, stream, parent) {\r\n  let res;\r\n  if (typeof length === 'number') {\r\n    res = length;\r\n\r\n  } else if (typeof length === 'function') {\r\n    res = length.call(parent, parent);\r\n\r\n  } else if (parent && (typeof length === 'string')) {\r\n    res = parent[length];\r\n\r\n  } else if (stream && length instanceof NumberT) {\r\n    res = length.decode(stream);\r\n  }\r\n\r\n  if (isNaN(res)) {\r\n    throw new Error('Not a fixed size');\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport class PropertyDescriptor {\r\n  constructor(opts = {}) {\r\n    this.enumerable = true;\r\n    this.configurable = true;\r\n\r\n    for (let key in opts) {\r\n      const val = opts[key];\r\n      this[key] = val;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}