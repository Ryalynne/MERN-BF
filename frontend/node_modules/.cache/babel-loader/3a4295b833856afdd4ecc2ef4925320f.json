{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [isModalActive, setIsModalActive] = useState(false);\n  const [editRow, setEditRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  useEffect(() => {\n    getUsers();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const handleEdit = user => {\n    setEditRow(user.id);\n    setEditedData({ ...user\n    });\n  };\n\n  const handleInputChange = (e, field) => {\n    setEditedData({ ...editedData,\n      [field]: e.target.value\n    });\n  };\n\n  const handleSave = async id => {\n    try {\n      await axios.put(`http://localhost:5000/users/${id}`, editedData);\n      setEditRow(null);\n      getUsers();\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"is-flex is-justify-content-space-between m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        placeholder: \"Search...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-success\",\n        onClick: () => setIsModalActive(true),\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEmployeeModal, {\n      isOpen: isModalActive,\n      onClose: () => setIsModalActive(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 18\n          }, this), \" \", user.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Full Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedData.full_name,\n            onChange: e => handleInputChange(e, \"full_name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this) : user.full_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedData.email,\n            onChange: e => handleInputChange(e, \"email\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this) : user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-small is-info\",\n          onClick: () => editRow === user.id ? handleSave(user.id) : handleEdit(user),\n          children: editRow === user.id ? \"Save\" : \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.full_name,\n                onChange: e => handleInputChange(e, \"full_name\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this) : user.full_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.email,\n                onChange: e => handleInputChange(e, \"email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this) : user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-info\",\n                onClick: () => editRow === user.id ? handleSave(user.id) : handleEdit(user),\n                children: editRow === user.id ? \"Save\" : \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"jrt75lsIoZSQssFAFDlWcabT554=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","AddEmployeeModal","UserList","users","setUsers","searchTerm","setSearchTerm","isMobile","setIsMobile","window","innerWidth","isModalActive","setIsModalActive","editRow","setEditRow","editedData","setEditedData","getUsers","handleResize","addEventListener","removeEventListener","response","get","data","error","console","handleEdit","user","id","handleInputChange","e","field","target","value","handleSave","put","map","full_name","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [isModalActive, setIsModalActive] = useState(false);\r\n  const [editRow, setEditRow] = useState(null);\r\n  const [editedData, setEditedData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setEditRow(user.id);\r\n    setEditedData({ ...user });\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    setEditedData({ ...editedData, [field]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/users/${id}`, editedData);\r\n      setEditRow(null);\r\n      getUsers();\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"is-flex is-justify-content-space-between m-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button className=\"button is-success\" onClick={() => setIsModalActive(true)}>\r\n          Add Employee\r\n        </button>\r\n      </div>\r\n\r\n      <AddEmployeeModal isOpen={isModalActive} onClose={() => setIsModalActive(false)} />\r\n\r\n      {isMobile ? (\r\n        <div>\r\n          {users.map((user) => (\r\n            <div key={user.id} className=\"box mb-3\">\r\n              <p><strong>ID:</strong> {user.id}</p>\r\n              <p>\r\n                <strong>Full Name:</strong>\r\n                {editRow === user.id ? (\r\n                  <input type=\"text\" value={editedData.full_name} onChange={(e) => handleInputChange(e, \"full_name\")} />\r\n                ) : (\r\n                  user.full_name\r\n                )}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>\r\n                {editRow === user.id ? (\r\n                  <input type=\"text\" value={editedData.email} onChange={(e) => handleInputChange(e, \"email\")} />\r\n                ) : (\r\n                  user.email\r\n                )}\r\n              </p>\r\n              <button\r\n                className=\"button is-small is-info\"\r\n                onClick={() => (editRow === user.id ? handleSave(user.id) : handleEdit(user))}\r\n              >\r\n                {editRow === user.id ? \"Save\" : \"Edit\"}\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"table-container\">\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Full Name</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>\r\n                    {editRow === user.id ? (\r\n                      <input type=\"text\" value={editedData.full_name} onChange={(e) => handleInputChange(e, \"full_name\")} />\r\n                    ) : (\r\n                      user.full_name\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editRow === user.id ? (\r\n                      <input type=\"text\" value={editedData.email} onChange={(e) => handleInputChange(e, \"email\")} />\r\n                    ) : (\r\n                      user.email\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"button is-small is-info\"\r\n                      onClick={() => (editRow === user.id ? handleSave(user.id) : handleEdit(user))}\r\n                    >\r\n                      {editRow === user.id ? \"Save\" : \"Edit\"}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;"]},"metadata":{},"sourceType":"module"}