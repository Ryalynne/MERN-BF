{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\JobTitle\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DepartList() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingJobId, setEditingJobId] = useState(null);\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\n  const [newJobTitle, setNewJobTitle] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [addError, setAddError] = useState(false);\n  const [editError, setEditError] = useState(false); // Pagination States\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  useEffect(() => {\n    fetchJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      const data = Array.isArray(response.data) ? response.data : [];\n      const sanitizedJobs = data.filter(job => job !== null && typeof job === \"object\").map(job => {\n        const title = job.Job_Title || job.job_title || job.Department_Name || job.department_name || \"\";\n        const id = job.id || job.ID || Date.now() + Math.random();\n        return {\n          id,\n          Job_Title: title\n        };\n      });\n      setJobs(sanitizedJobs);\n    } catch (error) {\n      console.error(\"Error fetching job titles:\", error);\n      setJobs([]);\n    }\n  };\n\n  const startAdding = () => {\n    setIsAdding(true);\n    setNewJobTitle(\"\");\n    setAddError(false);\n  };\n\n  const cancelAdding = () => {\n    setIsAdding(false);\n    setNewJobTitle(\"\");\n    setAddError(false);\n  };\n\n  const saveNewJob = async () => {\n    if (!newJobTitle.trim()) {\n      setAddError(true);\n      return;\n    }\n\n    try {\n      const payload = {\n        Department_Name: newJobTitle\n      };\n      await axios.post(\"http://localhost:5000/job\", payload);\n      setNewJobTitle(\"\");\n      setAddError(false);\n      fetchJobs();\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      console.error(\"Error adding job title:\", error);\n      alert(\"Failed to add Job Title: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n\n  const startEditing = job => {\n    setEditingJobId(job.id);\n    setEditedJobTitle(job.Job_Title || \"\");\n    setEditError(false);\n  };\n\n  const cancelEditing = () => {\n    setEditingJobId(null);\n    setEditedJobTitle(\"\");\n    setEditError(false);\n  };\n\n  const saveJobTitle = async id => {\n    if (!editedJobTitle.trim()) {\n      setEditError(true);\n      return;\n    }\n\n    try {\n      const payload = {\n        job_title: editedJobTitle\n      };\n      await axios.patch(`http://localhost:5000/job/${id}`, payload);\n      setJobs(jobs.map(job => job.id === id ? { ...job,\n        Job_Title: editedJobTitle\n      } : job));\n      setEditingJobId(null);\n      setEditError(false);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n\n      console.error(\"Error updating job title:\", error);\n      alert(\"Failed to update job title: \" + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n    }\n  };\n\n  const handleNewJobChange = e => {\n    setNewJobTitle(e.target.value);\n    if (e.target.value.trim()) setAddError(false);\n  };\n\n  const handleEditJobChange = e => {\n    setEditedJobTitle(e.target.value);\n    if (e.target.value.trim()) setEditError(false);\n  }; // Filtering and Pagination Logic\n\n\n  const filteredJobs = jobs.filter(job => job && typeof job === \"object\").filter(job => (job.Job_Title || \"\").toLowerCase().includes(searchTerm.toLowerCase()));\n  const totalItems = filteredJobs.length;\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = Math.min(startIndex + itemsPerPage, totalItems);\n  const displayedJobs = filteredJobs.slice(startIndex, endIndex); // Pagination Handlers\n\n  const goToPage = page => {\n    setCurrentPage(Math.max(1, Math.min(page, totalPages)));\n  };\n\n  const handleItemsPerPageChange = e => {\n    const newItemsPerPage = Number(e.target.value);\n    setItemsPerPage(newItemsPerPage);\n    setCurrentPage(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: isMobile ? \"100%\" : \"300px\",\n            width: \"100%\"\n          },\n          placeholder: \"Search Job Title...\",\n          value: searchTerm,\n          onChange: e => {\n            setSearchTerm(e.target.value);\n            setCurrentPage(1); // Reset to page 1 on search\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), !isMobile && !isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-success ml-3\",\n          onClick: startAdding,\n          children: \"Add Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home/AddJob\",\n          className: \"button is-success ml-3\",\n          children: \"Add Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-striped is-fullwidth is-narrow\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [isAdding && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: newJobTitle,\n                  onChange: handleNewJobChange,\n                  placeholder: \"Enter new job title\",\n                  style: {\n                    borderColor: addError ? \"red\" : \"\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-success mr-2\",\n                  onClick: saveNewJob,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-danger\",\n                  onClick: cancelAdding,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.id || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: editedJobTitle,\n                  onChange: handleEditJobChange,\n                  style: {\n                    borderColor: editError ? \"red\" : \"\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 25\n                }, this) : job.Job_Title || \"Untitled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button is-small is-success mr-2\",\n                    onClick: () => saveJobTitle(job.id),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button is-small is-danger\",\n                    onClick: cancelEditing,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-info mr-2\",\n                  onClick: () => startEditing(job),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, job.id || Math.random(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: job.Job_Title || \"Untitled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subtitle is-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Job ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this), \" \", job.id || \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/editJobTitle/${job.id}`,\n                className: \"card-footer-item button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)\n        }, job.id || Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"pagination is-centered mt-4\",\n        role: \"navigation\",\n        \"aria-label\": \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"is-flex is-align-items-center is-flex-wrap-wrap is-justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"is-flex is-align-items-center mb-2 mr-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"has-text-white mr-2\",\n              children: \"Items per page:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: itemsPerPage,\n                onChange: handleItemsPerPageChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"5\",\n                  children: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"10\",\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"20\",\n                  children: \"20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"50\",\n                  children: \"50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"is-flex is-align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-small is-light mr-2\",\n              onClick: () => goToPage(currentPage - 1),\n              disabled: currentPage === 1,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"has-text-white mx-2\",\n              children: [\"Page \", currentPage, \" of \", totalPages]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-small is-light ml-2\",\n              onClick: () => goToPage(currentPage + 1),\n              disabled: currentPage === totalPages,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"has-text-white mt-2\",\n          children: [\"Showing \", startIndex + 1, \" to \", endIndex, \" of \", totalItems, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartList, \"iRBfmfgZXQGY8y3qmRWeFQaRO3A=\");\n\n_c = DepartList;\nexport default DepartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/JobTitle/JobList.js"],"names":["React","useState","useEffect","axios","Link","DepartList","jobs","setJobs","searchTerm","setSearchTerm","isMobile","setIsMobile","window","innerWidth","editingJobId","setEditingJobId","editedJobTitle","setEditedJobTitle","newJobTitle","setNewJobTitle","isAdding","setIsAdding","addError","setAddError","editError","setEditError","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","fetchJobs","handleResize","addEventListener","removeEventListener","response","get","data","Array","isArray","sanitizedJobs","filter","job","map","title","Job_Title","job_title","Department_Name","department_name","id","ID","Date","now","Math","random","error","console","startAdding","cancelAdding","saveNewJob","trim","payload","post","alert","message","startEditing","cancelEditing","saveJobTitle","patch","handleNewJobChange","e","target","value","handleEditJobChange","filteredJobs","toLowerCase","includes","totalItems","length","totalPages","ceil","startIndex","endIndex","min","displayedJobs","slice","goToPage","page","max","handleItemsPerPageChange","newItemsPerPage","Number","position","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DepartList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingJobId, setEditingJobId] = useState(null);\r\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\r\n  const [newJobTitle, setNewJobTitle] = useState(\"\");\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [addError, setAddError] = useState(false);\r\n  const [editError, setEditError] = useState(false);\r\n  \r\n  // Pagination States\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      const data = Array.isArray(response.data) ? response.data : [];\r\n      const sanitizedJobs = data\r\n        .filter((job) => job !== null && typeof job === \"object\")\r\n        .map((job) => {\r\n          const title =\r\n            job.Job_Title ||\r\n            job.job_title ||\r\n            job.Department_Name ||\r\n            job.department_name ||\r\n            \"\";\r\n          const id = job.id || job.ID || Date.now() + Math.random();\r\n          return { id, Job_Title: title };\r\n        });\r\n      setJobs(sanitizedJobs);\r\n    } catch (error) {\r\n      console.error(\"Error fetching job titles:\", error);\r\n      setJobs([]);\r\n    }\r\n  };\r\n\r\n  const startAdding = () => {\r\n    setIsAdding(true);\r\n    setNewJobTitle(\"\");\r\n    setAddError(false);\r\n  };\r\n\r\n  const cancelAdding = () => {\r\n    setIsAdding(false);\r\n    setNewJobTitle(\"\");\r\n    setAddError(false);\r\n  };\r\n\r\n  const saveNewJob = async () => {\r\n    if (!newJobTitle.trim()) {\r\n      setAddError(true);\r\n      return;\r\n    }\r\n    try {\r\n      const payload = { Department_Name: newJobTitle };\r\n      await axios.post(\"http://localhost:5000/job\", payload);\r\n      setNewJobTitle(\"\");\r\n      setAddError(false);\r\n      fetchJobs();\r\n    } catch (error) {\r\n      console.error(\"Error adding job title:\", error);\r\n      alert(\"Failed to add Job Title: \" + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  const startEditing = (job) => {\r\n    setEditingJobId(job.id);\r\n    setEditedJobTitle(job.Job_Title || \"\");\r\n    setEditError(false);\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingJobId(null);\r\n    setEditedJobTitle(\"\");\r\n    setEditError(false);\r\n  };\r\n\r\n  const saveJobTitle = async (id) => {\r\n    if (!editedJobTitle.trim()) {\r\n      setEditError(true);\r\n      return;\r\n    }\r\n    try {\r\n      const payload = { job_title: editedJobTitle };\r\n      await axios.patch(`http://localhost:5000/job/${id}`, payload);\r\n      setJobs(\r\n        jobs.map((job) =>\r\n          job.id === id ? { ...job, Job_Title: editedJobTitle } : job\r\n        )\r\n      );\r\n      setEditingJobId(null);\r\n      setEditError(false);\r\n    } catch (error) {\r\n      console.error(\"Error updating job title:\", error);\r\n      alert(\"Failed to update job title: \" + (error.response?.data?.message || error.message));\r\n    }\r\n  };\r\n\r\n  const handleNewJobChange = (e) => {\r\n    setNewJobTitle(e.target.value);\r\n    if (e.target.value.trim()) setAddError(false);\r\n  };\r\n\r\n  const handleEditJobChange = (e) => {\r\n    setEditedJobTitle(e.target.value);\r\n    if (e.target.value.trim()) setEditError(false);\r\n  };\r\n\r\n  // Filtering and Pagination Logic\r\n  const filteredJobs = jobs\r\n    .filter((job) => job && typeof job === \"object\")\r\n    .filter((job) =>\r\n      (job.Job_Title || \"\").toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n  const totalItems = filteredJobs.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = Math.min(startIndex + itemsPerPage, totalItems);\r\n  const displayedJobs = filteredJobs.slice(startIndex, endIndex);\r\n\r\n  // Pagination Handlers\r\n  const goToPage = (page) => {\r\n    setCurrentPage(Math.max(1, Math.min(page, totalPages)));\r\n  };\r\n\r\n  const handleItemsPerPageChange = (e) => {\r\n    const newItemsPerPage = Number(e.target.value);\r\n    setItemsPerPage(newItemsPerPage);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div\r\n        className=\"column container mt-5\"\r\n        style={{ position: \"relative\", zIndex: 1 }}\r\n      >\r\n        <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: isMobile ? \"100%\" : \"300px\", width: \"100%\" }}\r\n            placeholder=\"Search Job Title...\"\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value);\r\n              setCurrentPage(1); // Reset to page 1 on search\r\n            }}\r\n          />\r\n          {!isMobile && !isAdding && (\r\n            <button className=\"button is-success ml-3\" onClick={startAdding}>\r\n              Add Job Title\r\n            </button>\r\n          )}\r\n          {isMobile && (\r\n            <Link to=\"/home/AddJob\" className=\"button is-success ml-3\">\r\n              Add Job Title\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        {!isMobile ? (\r\n          <div className=\"table-container\">\r\n            <table className=\"table is-striped is-fullwidth is-narrow\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Job ID</th>\r\n                  <th>Job Title</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {isAdding && (\r\n                  <tr>\r\n                    <td>New</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={newJobTitle}\r\n                        onChange={handleNewJobChange}\r\n                        placeholder=\"Enter new job title\"\r\n                        style={{ borderColor: addError ? \"red\" : \"\" }}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"button is-small is-success mr-2\"\r\n                        onClick={saveNewJob}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                      <button\r\n                        className=\"button is-small is-danger\"\r\n                        onClick={cancelAdding}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n                {displayedJobs.map((job) => (\r\n                  <tr key={job.id || Math.random()}>\r\n                    <td>{job.id || \"N/A\"}</td>\r\n                    <td>\r\n                      {editingJobId === job.id ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"input\"\r\n                          value={editedJobTitle}\r\n                          onChange={handleEditJobChange}\r\n                          style={{ borderColor: editError ? \"red\" : \"\" }}\r\n                        />\r\n                      ) : (\r\n                        job.Job_Title || \"Untitled\"\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingJobId === job.id ? (\r\n                        <>\r\n                          <button\r\n                            className=\"button is-small is-success mr-2\"\r\n                            onClick={() => saveJobTitle(job.id)}\r\n                          >\r\n                            Save\r\n                          </button>\r\n                          <button\r\n                            className=\"button is-small is-danger\"\r\n                            onClick={cancelEditing}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <button\r\n                          className=\"button is-small is-info mr-2\"\r\n                          onClick={() => startEditing(job)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"columns is-multiline\">\r\n            {displayedJobs.map((job) => (\r\n              <div key={job.id || Math.random()} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                      {job.Job_Title || \"Untitled\"}\r\n                    </p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p className=\"subtitle is-6\">\r\n                      <strong>Job ID:</strong> {job.id || \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/editJobTitle/${job.id}`}\r\n                      className=\"card-footer-item button is-small is-info\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination Controls */}\r\n        <nav\r\n          className=\"pagination is-centered mt-4\"\r\n          role=\"navigation\"\r\n          aria-label=\"pagination\"\r\n        >\r\n          <div className=\"is-flex is-align-items-center is-flex-wrap-wrap is-justify-content-center\">\r\n            <div className=\"is-flex is-align-items-center mb-2 mr-4\">\r\n              <label className=\"has-text-white mr-2\">Items per page:</label>\r\n              <div className=\"select\">\r\n                <select\r\n                  value={itemsPerPage}\r\n                  onChange={handleItemsPerPageChange}\r\n                >\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"50\">50</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"is-flex is-align-items-center\">\r\n              <button\r\n                className=\"button is-small is-light mr-2\"\r\n                onClick={() => goToPage(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n              >\r\n                Previous\r\n              </button>\r\n              <span className=\"has-text-white mx-2\">\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n              <button\r\n                className=\"button is-small is-light ml-2\"\r\n                onClick={() => goToPage(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"has-text-white mt-2\">\r\n            Showing {startIndex + 1} to {endIndex} of {totalItems} entries\r\n          </p>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepartList;"]},"metadata":{},"sourceType":"module"}