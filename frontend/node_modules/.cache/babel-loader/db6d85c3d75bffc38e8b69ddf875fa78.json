{"ast":null,"code":"import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n/**\r\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\r\n * it doesn't exist.\r\n */\n\nfunction setMotionValue(visualElement, key, value) {\n  if (visualElement.hasValue(key)) {\n    visualElement.getValue(key).set(value);\n  } else {\n    visualElement.addValue(key, motionValue(value));\n  }\n}\n\nfunction setTarget(visualElement, definition) {\n  const resolved = resolveVariant(visualElement, definition);\n  let {\n    transitionEnd = {},\n    transition = {},\n    ...target\n  } = resolved || {};\n  target = { ...target,\n    ...transitionEnd\n  };\n\n  for (const key in target) {\n    const value = resolveFinalValueInKeyframes(target[key]);\n    setMotionValue(visualElement, key, value);\n  }\n}\n\nexport { setTarget };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/framer-motion/dist/es/render/utils/setters.mjs"],"names":["motionValue","resolveFinalValueInKeyframes","resolveVariant","setMotionValue","visualElement","key","value","hasValue","getValue","set","addValue","setTarget","definition","resolved","transitionEnd","transition","target"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,4BAAT,QAA6C,+BAA7C;AACA,SAASC,cAAT,QAA+B,gCAA/B;AAEA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,aAAxB,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmD;AAC/C,MAAIF,aAAa,CAACG,QAAd,CAAuBF,GAAvB,CAAJ,EAAiC;AAC7BD,IAAAA,aAAa,CAACI,QAAd,CAAuBH,GAAvB,EAA4BI,GAA5B,CAAgCH,KAAhC;AACH,GAFD,MAGK;AACDF,IAAAA,aAAa,CAACM,QAAd,CAAuBL,GAAvB,EAA4BL,WAAW,CAACM,KAAD,CAAvC;AACH;AACJ;;AACD,SAASK,SAAT,CAAmBP,aAAnB,EAAkCQ,UAAlC,EAA8C;AAC1C,QAAMC,QAAQ,GAAGX,cAAc,CAACE,aAAD,EAAgBQ,UAAhB,CAA/B;AACA,MAAI;AAAEE,IAAAA,aAAa,GAAG,EAAlB;AAAsBC,IAAAA,UAAU,GAAG,EAAnC;AAAuC,OAAGC;AAA1C,MAAqDH,QAAQ,IAAI,EAArE;AACAG,EAAAA,MAAM,GAAG,EAAE,GAAGA,MAAL;AAAa,OAAGF;AAAhB,GAAT;;AACA,OAAK,MAAMT,GAAX,IAAkBW,MAAlB,EAA0B;AACtB,UAAMV,KAAK,GAAGL,4BAA4B,CAACe,MAAM,CAACX,GAAD,CAAP,CAA1C;AACAF,IAAAA,cAAc,CAACC,aAAD,EAAgBC,GAAhB,EAAqBC,KAArB,CAAd;AACH;AACJ;;AAED,SAASK,SAAT","sourcesContent":["import { motionValue } from 'motion-dom';\r\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\n\r\n/**\r\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\r\n * it doesn't exist.\r\n */\r\nfunction setMotionValue(visualElement, key, value) {\r\n    if (visualElement.hasValue(key)) {\r\n        visualElement.getValue(key).set(value);\r\n    }\r\n    else {\r\n        visualElement.addValue(key, motionValue(value));\r\n    }\r\n}\r\nfunction setTarget(visualElement, definition) {\r\n    const resolved = resolveVariant(visualElement, definition);\r\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\r\n    target = { ...target, ...transitionEnd };\r\n    for (const key in target) {\r\n        const value = resolveFinalValueInKeyframes(target[key]);\r\n        setMotionValue(visualElement, key, value);\r\n    }\r\n}\r\n\r\nexport { setTarget };\r\n"]},"metadata":{},"sourceType":"module"}