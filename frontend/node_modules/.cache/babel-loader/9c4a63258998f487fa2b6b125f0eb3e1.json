{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editedUser, setEditedUser] = useState({});\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const filteredUsers = users.filter(user => `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\n\n  const openDelete = user => {\n    setDeleteData(user);\n    setOpen(true);\n  };\n\n  const deleteUser = async () => {\n    if (!deleteData) return;\n\n    try {\n      await axios.delete(`http://localhost:5000/users/${deleteData.id}`);\n      setDeleteData(null);\n      setOpen(false);\n      getUsers();\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  };\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(EmployePDF, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }, this)).toBlob();\n    const url = URL.createObjectURL(blob);\n    window.open(url);\n  }; // Enable editing for a row\n\n\n  const startEditing = user => {\n    setEditingId(user.id);\n    setEditedUser({ ...user\n    });\n  }; // Handle input changes in the row\n\n\n  const handleInputChange = (e, field) => {\n    setEditedUser({ ...editedUser,\n      [field]: e.target.value\n    });\n  }; // Save changes and update the database\n\n\n  const saveEdit = async () => {\n    try {\n      await axios.patch(`http://localhost:5000/users/${editingId}`, editedUser);\n      setEditingId(null);\n      getUsers(); // Refresh the user list\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Full Name, Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/AddEmployee\",\n            className: \"button is-success mr-1\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleViewPDF,\n            className: \"button is-info ml-1\",\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-striped is-fullwidth\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Annual Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: displayedUsers.length > 0 ? displayedUsers.map(user => {\n              var _user$salary, _user$anual_salary;\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: editedUser.full_name,\n                    onChange: e => handleInputChange(e, \"full_name\"),\n                    className: \"input is-small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 25\n                  }, this) : user.full_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    value: editedUser.email,\n                    onChange: e => handleInputChange(e, \"email\"),\n                    className: \"input is-small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this) : user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.Job_Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B1\", ((_user$salary = user.salary) === null || _user$salary === void 0 ? void 0 : _user$salary.toLocaleString(\"en-PH\")) || \"-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B1\", ((_user$anual_salary = user.anual_salary) === null || _user$anual_salary === void 0 ? void 0 : _user$anual_salary.toLocaleString(\"en-PH\")) || \"-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [editingId === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button is-small is-success mr-2\",\n                    onClick: saveEdit,\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button is-small is-warning mr-2\",\n                    onClick: () => startEditing(user),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => openDelete(user),\n                    className: \"button is-small is-danger\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"8\",\n                className: \"has-text-centered\",\n                children: \"No users found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmBox, {\n        open: open,\n        closeDialog: () => setOpen(false),\n        title: deleteData === null || deleteData === void 0 ? void 0 : deleteData.full_name,\n        empID: deleteData === null || deleteData === void 0 ? void 0 : deleteData.id,\n        deleteFunction: deleteUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"GjJDUpbjyi/SRZR7g5OtL1vdCEs=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","editingId","setEditingId","editedUser","setEditedUser","getUsers","response","get","data","error","console","filteredUsers","filter","user","full_name","email","Job_Title","position","id","toLowerCase","includes","displayedUsers","slice","openDelete","deleteUser","delete","handleViewPDF","blob","toBlob","url","URL","createObjectURL","window","startEditing","handleInputChange","e","field","target","value","saveEdit","patch","maxWidth","length","map","salary","toLocaleString","anual_salary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editedUser, setEditedUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n  const openDelete = (user) => {\r\n    setDeleteData(user);\r\n    setOpen(true);\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    if (!deleteData) return;\r\n    try {\r\n      await axios.delete(`http://localhost:5000/users/${deleteData.id}`);\r\n      setDeleteData(null);\r\n      setOpen(false);\r\n      getUsers();\r\n    } catch (error) {\r\n      console.error(\"Error deleting user:\", error);\r\n    }\r\n  };\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<EmployePDF users={users} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url);\r\n  };\r\n\r\n  // Enable editing for a row\r\n  const startEditing = (user) => {\r\n    setEditingId(user.id);\r\n    setEditedUser({ ...user });\r\n  };\r\n\r\n  // Handle input changes in the row\r\n  const handleInputChange = (e, field) => {\r\n    setEditedUser({ ...editedUser, [field]: e.target.value });\r\n  };\r\n\r\n  // Save changes and update the database\r\n  const saveEdit = async () => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${editingId}`, editedUser);\r\n      setEditingId(null);\r\n      getUsers(); // Refresh the user list\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"is-flex is-justify-content-space-between m-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Full Name, Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div>\r\n            <Link to=\"/home/AddEmployee\" className=\"button is-success mr-1\">\r\n              Add Employee\r\n            </Link>\r\n            <button onClick={handleViewPDF} className=\"button is-info ml-1\">\r\n              View PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"table-container overflow-x-auto\">\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Employee ID</th>\r\n                <th>Full Name</th>\r\n                <th>Email</th>\r\n                <th>Job Title</th>\r\n                <th>Position</th>\r\n                <th>Salary</th>\r\n                <th>Annual Salary</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedUsers.length > 0 ? (\r\n                displayedUsers.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>\r\n                      {editingId === user.id ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          value={editedUser.full_name}\r\n                          onChange={(e) => handleInputChange(e, \"full_name\")}\r\n                          className=\"input is-small\"\r\n                        />\r\n                      ) : (\r\n                        user.full_name\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingId === user.id ? (\r\n                        <input\r\n                          type=\"email\"\r\n                          value={editedUser.email}\r\n                          onChange={(e) => handleInputChange(e, \"email\")}\r\n                          className=\"input is-small\"\r\n                        />\r\n                      ) : (\r\n                        user.email\r\n                      )}\r\n                    </td>\r\n                    <td>{user.Job_Title}</td>\r\n                    <td>{user.position}</td>\r\n                    <td>₱{user.salary?.toLocaleString(\"en-PH\") || \"-\"}</td>\r\n                    <td>₱{user.anual_salary?.toLocaleString(\"en-PH\") || \"-\"}</td>\r\n                    <td>\r\n                      {editingId === user.id ? (\r\n                        <button\r\n                          className=\"button is-small is-success mr-2\"\r\n                          onClick={saveEdit}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"button is-small is-warning mr-2\"\r\n                          onClick={() => startEditing(user)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        onClick={() => openDelete(user)}\r\n                        className=\"button is-small is-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"8\" className=\"has-text-centered\">\r\n                    No users found.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <ConfirmBox\r\n          open={open}\r\n          closeDialog={() => setOpen(false)}\r\n          title={deleteData?.full_name}\r\n          empID={deleteData?.id}\r\n          deleteFunction={deleteUser}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}