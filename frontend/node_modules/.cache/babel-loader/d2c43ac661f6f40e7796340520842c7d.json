{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\JobTitle\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DepartList() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingJobId, setEditingJobId] = useState(null);\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\n  useEffect(() => {\n    fetchJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setJobs(response.data);\n    } catch (error) {\n      console.error(\"Error fetching job titles:\", error);\n    }\n  };\n\n  const startEditing = job => {\n    setEditingJobId(job.id);\n    setEditedJobTitle(job.Job_Title);\n  };\n\n  const saveJobTitle = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/job/${id}`, {\n        job_title: editedJobTitle\n      });\n      setJobs(jobs.map(job => job.id === id ? { ...job,\n        Job_Title: editedJobTitle\n      } : job));\n      setEditingJobId(null);\n    } catch (error) {\n      console.error(\"Error updating job title:\", error);\n    }\n  };\n\n  const filteredJobs = jobs.filter(job => job.Job_Title.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        style: {\n          maxWidth: \"300px\"\n        },\n        placeholder: \"Search Job Title...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home/AddJob\",\n        className: \"button is-success ml-3\",\n        children: \"Add Job Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: editedJobTitle,\n              onChange: e => setEditedJobTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this) : job.Job_Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-small is-success\",\n              onClick: () => saveJobTitle(job.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-small is-info mr-2\",\n              onClick: () => startEditing(job),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns is-multiline\",\n      children: displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-header-title\",\n              children: job.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle is-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Job ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 48\n              }, this), \" \", job.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/home/editJobTitle/${job.id}`,\n              className: \"card-footer-item button is-small is-info\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartList, \"6ZgoABgWASbZM81rKxjA1uGzfTo=\");\n\n_c = DepartList;\nexport default DepartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/JobTitle/JobList.js"],"names":["React","useState","useEffect","axios","Link","DepartList","jobs","setJobs","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingJobId","setEditingJobId","editedJobTitle","setEditedJobTitle","fetchJobs","handleResize","addEventListener","removeEventListener","response","get","data","error","console","startEditing","job","id","Job_Title","saveJobTitle","patch","job_title","map","filteredJobs","filter","toLowerCase","includes","displayedJobs","slice","maxWidth","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACa,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAxC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,SAAS;;AACT,UAAMC,YAAY,GAAG,MAAMR,WAAW,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAtC;;AACAD,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMP,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMD,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,2BAAV,CAAvB;AACAlB,MAAAA,OAAO,CAACiB,QAAQ,CAACE,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACD;AACF,GAPD;;AASA,QAAME,YAAY,GAAIC,GAAD,IAAS;AAC5Bb,IAAAA,eAAe,CAACa,GAAG,CAACC,EAAL,CAAf;AACAZ,IAAAA,iBAAiB,CAACW,GAAG,CAACE,SAAL,CAAjB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAOF,EAAP,IAAc;AACjC,QAAI;AACF,YAAM5B,KAAK,CAAC+B,KAAN,CAAa,6BAA4BH,EAAG,EAA5C,EAA+C;AACnDI,QAAAA,SAAS,EAAEjB;AADwC,OAA/C,CAAN;AAGAX,MAAAA,OAAO,CAACD,IAAI,CAAC8B,GAAL,CAASN,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWA,EAAX,GAAgB,EAAE,GAAGD,GAAL;AAAUE,QAAAA,SAAS,EAAEd;AAArB,OAAhB,GAAwDY,GAAxE,CAAD,CAAP;AACAb,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAND,CAME,OAAOU,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACD;AACF,GAVD;;AAYA,QAAMU,YAAY,GAAG/B,IAAI,CAACgC,MAAL,CAAaR,GAAD,IAC/BA,GAAG,CAACE,SAAJ,CAAcO,WAAd,GAA4BC,QAA5B,CAAqChC,UAAU,CAAC+B,WAAX,EAArC,CADmB,CAArB;AAIA,QAAME,aAAa,GAAGJ,YAAY,CAACK,KAAb,CAAmB,CAAnB,EAAsBhC,aAAtB,CAAtB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iEAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,KAAK,EAAE;AAAEiC,UAAAA,QAAQ,EAAE;AAAZ,SAHT;AAIE,QAAA,WAAW,EAAC,qBAJd;AAKE,QAAA,KAAK,EAAEnC,UALT;AAME,QAAA,QAAQ,EAAGoC,CAAD,IAAOnC,aAAa,CAACmC,CAAC,CAACC,MAAF,CAASC,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeG,CAAClC,QAAD,gBACC;AAAO,MAAA,SAAS,EAAC,+BAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACG6B,aAAa,CAACL,GAAd,CAAmBN,GAAD,iBACjB;AAAA,kCACE;AAAA,sBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBACGf,YAAY,KAAKc,GAAG,CAACC,EAArB,gBACC;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,SAAS,EAAC,OAFZ;AAGE,cAAA,KAAK,EAAEb,cAHT;AAIE,cAAA,QAAQ,EAAG0B,CAAD,IAAOzB,iBAAiB,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJpC;AAAA;AAAA;AAAA;AAAA,oBADD,GAQChB,GAAG,CAACE;AATR;AAAA;AAAA;AAAA;AAAA,kBAFF,eAcE;AAAA,sBACGhB,YAAY,KAAKc,GAAG,CAACC,EAArB,gBACC;AACE,cAAA,SAAS,EAAC,4BADZ;AAEE,cAAA,OAAO,EAAE,MAAME,YAAY,CAACH,GAAG,CAACC,EAAL,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAQC;AACE,cAAA,SAAS,EAAC,8BADZ;AAEE,cAAA,OAAO,EAAE,MAAMF,YAAY,CAACC,GAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA,WAASA,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBA+CC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGU,aAAa,CAACL,GAAd,CAAmBN,GAAD,iBACjB;AAAkB,QAAA,SAAS,EAAC,cAA5B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,mBAAb;AAAA,wBAAkCA,GAAG,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,eAAb;AAAA,sCAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA7B,OAAuDF,GAAG,CAACC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,EAAE,EAAG,sBAAqBD,GAAG,CAACC,EAAG,EADnC;AAEE,cAAA,SAAS,EAAC,0CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUD,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwFD;;GAvIQ1B,U;;KAAAA,U;AAyIT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DepartList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingJobId, setEditingJobId] = useState(null);\r\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching job titles:\", error);\r\n    }\r\n  };\r\n\r\n  const startEditing = (job) => {\r\n    setEditingJobId(job.id);\r\n    setEditedJobTitle(job.Job_Title);\r\n  };\r\n\r\n  const saveJobTitle = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/job/${id}`, {\r\n        job_title: editedJobTitle,\r\n      });\r\n      setJobs(jobs.map(job => job.id === id ? { ...job, Job_Title: editedJobTitle } : job));\r\n      setEditingJobId(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating job title:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredJobs = jobs.filter((job) =>\r\n    job.Job_Title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\r\n\r\n  return (\r\n    <div className=\"column container mt-5\">\r\n      <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          style={{ maxWidth: \"300px\" }}\r\n          placeholder=\"Search Job Title...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <Link to=\"/home/AddJob\" className=\"button is-success ml-3\">\r\n          Add Job Title\r\n        </Link>\r\n      </div>\r\n\r\n      {!isMobile ? (\r\n        <table className=\"table is-striped is-fullwidth\">\r\n          <thead>\r\n            <tr>\r\n              <th>Job ID</th>\r\n              <th>Job Title</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayedJobs.map((job) => (\r\n              <tr key={job.id}>\r\n                <td>{job.id}</td>\r\n                <td>\r\n                  {editingJobId === job.id ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"input\"\r\n                      value={editedJobTitle}\r\n                      onChange={(e) => setEditedJobTitle(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    job.Job_Title\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editingJobId === job.id ? (\r\n                    <button\r\n                      className=\"button is-small is-success\"\r\n                      onClick={() => saveJobTitle(job.id)}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      className=\"button is-small is-info mr-2\"\r\n                      onClick={() => startEditing(job)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div className=\"columns is-multiline\">\r\n          {displayedJobs.map((job) => (\r\n            <div key={job.id} className=\"column is-12\">\r\n              <div className=\"card\">\r\n                <header className=\"card-header\">\r\n                  <p className=\"card-header-title\">{job.Job_Title}</p>\r\n                </header>\r\n                <div className=\"card-content\">\r\n                  <p className=\"subtitle is-6\"><strong>Job ID:</strong> {job.id}</p>\r\n                </div>\r\n                <footer className=\"card-footer\">\r\n                  <Link\r\n                    to={`/home/editJobTitle/${job.id}`}\r\n                    className=\"card-footer-item button is-small is-info\"\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                </footer>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepartList;\r\n"]},"metadata":{},"sourceType":"module"}