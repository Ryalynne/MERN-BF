{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\JobTitle\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DepartList() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingJobId, setEditingJobId] = useState(null);\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\n  const [newJobTitle, setNewJobTitle] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  useEffect(() => {\n    fetchJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      console.log(\"Raw GET response:\", response); // Log full response\n\n      console.log(\"Fetched jobs data:\", response.data); // Handle null or invalid response\n\n      if (!response.data) {\n        console.error(\"API returned null or undefined\");\n        setJobs([]);\n        return;\n      } // Ensure data is an array\n\n\n      const data = Array.isArray(response.data) ? response.data : []; // Sanitize and normalize job data\n\n      const sanitizedJobs = data.filter(job => job !== null && typeof job === \"object\") // Remove null entries\n      .map(job => {\n        // Try different possible field names\n        const title = job.Job_Title || job.job_title || job.Department_Name || job.department_name || \"\";\n        const id = job.id || job.ID || Date.now() + Math.random(); // Fallback ID\n\n        return {\n          id,\n          Job_Title: title\n        };\n      });\n      console.log(\"Sanitized jobs:\", sanitizedJobs);\n      setJobs(sanitizedJobs);\n    } catch (error) {\n      console.error(\"Error fetching job titles:\", error);\n      setJobs([]);\n    }\n  };\n\n  const startAdding = () => {\n    setIsAdding(true);\n    setNewJobTitle(\"\");\n  };\n\n  const cancelAdding = () => {\n    setIsAdding(false);\n    setNewJobTitle(\"\");\n  };\n\n  const saveNewJob = async () => {\n    if (!newJobTitle.trim()) {\n      alert(\"Job Title is required\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/job\", {\n        Department_Name: newJobTitle,\n        newJobTitle: \"\" // Change to match expected field name\n\n      });\n      console.log(\"POST Response:\", response.data);\n\n      if (!response.data || typeof response.data !== \"object\") {\n        console.error(\"Invalid POST response:\", response.data);\n        fetchJobs();\n        return;\n      }\n\n      fetchJobs(); // Ensure fresh data is fetched after adding\n\n      alert(\"Job Title added successfully!\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      console.error(\"Error adding job title:\", error);\n      alert(\"Failed to add Job Title: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n\n  const startEditing = job => {\n    setEditingJobId(job.id);\n    setEditedJobTitle(job.Job_Title || \"\");\n  };\n\n  const cancelEditing = () => {\n    setEditingJobId(null);\n    setEditedJobTitle(\"\");\n  };\n\n  const saveJobTitle = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/job/${id}`, {\n        job_title: editedJobTitle // Match backend field name if needed\n\n      });\n      setJobs(jobs.map(job => job.id === id ? { ...job,\n        Job_Title: editedJobTitle\n      } : job));\n      setEditingJobId(null);\n      alert(\"Job title updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating job title:\", error);\n      alert(\"Failed to update job title\");\n    }\n  };\n\n  const filteredJobs = jobs.filter(job => job && typeof job === \"object\").filter(job => (job.Job_Title || \"\").toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search Job Title...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), !isMobile && !isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-success ml-3\",\n          onClick: startAdding,\n          children: \"Add Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home/AddJob\",\n          className: \"button is-success ml-3\",\n          children: \"Add Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [isAdding && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: newJobTitle,\n                onChange: e => setNewJobTitle(e.target.value),\n                placeholder: \"Enter new job title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-success mr-2\",\n                onClick: saveNewJob,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-danger\",\n                onClick: cancelAdding,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.id || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: editedJobTitle,\n                onChange: e => setEditedJobTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this) : job.Job_Title || \"Untitled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-success mr-2\",\n                  onClick: () => saveJobTitle(job.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-danger\",\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-info mr-2\",\n                onClick: () => startEditing(job),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)]\n          }, job.id || Math.random(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: job.Job_Title || \"Untitled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subtitle is-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Job ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this), \" \", job.id || \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/editJobTitle/${job.id}`,\n                className: \"card-footer-item button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this)\n        }, job.id || Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-2\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entriesToShow,\n              onChange: e => setEntriesToShow(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: filteredJobs.length,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", displayedJobs.length, \" of \", filteredJobs.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartList, \"i/H8cVPfT+CReppA1rTVuAnQBwo=\");\n\n_c = DepartList;\nexport default DepartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/JobTitle/JobList.js"],"names":["React","useState","useEffect","axios","Link","DepartList","jobs","setJobs","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingJobId","setEditingJobId","editedJobTitle","setEditedJobTitle","newJobTitle","setNewJobTitle","isAdding","setIsAdding","fetchJobs","handleResize","addEventListener","removeEventListener","response","get","console","log","data","error","Array","isArray","sanitizedJobs","filter","job","map","title","Job_Title","job_title","Department_Name","department_name","id","ID","Date","now","Math","random","startAdding","cancelAdding","saveNewJob","trim","alert","post","message","startEditing","cancelEditing","saveJobTitle","patch","filteredJobs","toLowerCase","includes","displayedJobs","slice","position","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","e","target","value","Number","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACa,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAxC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,SAAS;;AACT,UAAMC,YAAY,GAAG,MAAMZ,WAAW,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAtC;;AACAD,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMX,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMD,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAU,2BAAV,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,QAAjC,EAFE,CAE0C;;AAC5CE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,QAAQ,CAACI,IAA3C,EAHE,CAKF;;AACA,UAAI,CAACJ,QAAQ,CAACI,IAAd,EAAoB;AAClBF,QAAAA,OAAO,CAACG,KAAR,CAAc,gCAAd;AACA1B,QAAAA,OAAO,CAAC,EAAD,CAAP;AACA;AACD,OAVC,CAYF;;;AACA,YAAMyB,IAAI,GAAGE,KAAK,CAACC,OAAN,CAAcP,QAAQ,CAACI,IAAvB,IAA+BJ,QAAQ,CAACI,IAAxC,GAA+C,EAA5D,CAbE,CAeF;;AACA,YAAMI,aAAa,GAAGJ,IAAI,CACvBK,MADmB,CACXC,GAAD,IAASA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAD5B,EACsC;AADtC,OAEnBC,GAFmB,CAEdD,GAAD,IAAS;AACZ;AACA,cAAME,KAAK,GACTF,GAAG,CAACG,SAAJ,IACAH,GAAG,CAACI,SADJ,IAEAJ,GAAG,CAACK,eAFJ,IAGAL,GAAG,CAACM,eAHJ,IAIA,EALF;AAMA,cAAMC,EAAE,GAAGP,GAAG,CAACO,EAAJ,IAAUP,GAAG,CAACQ,EAAd,IAAoBC,IAAI,CAACC,GAAL,KAAaC,IAAI,CAACC,MAAL,EAA5C,CARY,CAQ+C;;AAC3D,eAAO;AAAEL,UAAAA,EAAF;AAAMJ,UAAAA,SAAS,EAAED;AAAjB,SAAP;AACD,OAZmB,CAAtB;AAcAV,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,aAA/B;AACA7B,MAAAA,OAAO,CAAC6B,aAAD,CAAP;AACD,KAhCD,CAgCE,OAAOH,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACA1B,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GArCD;;AAuCA,QAAM4C,WAAW,GAAG,MAAM;AACxB5B,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,QAAM+B,YAAY,GAAG,MAAM;AACzB7B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,QAAMgC,UAAU,GAAG,YAAY;AAC7B,QAAI,CAACjC,WAAW,CAACkC,IAAZ,EAAL,EAAyB;AACvBC,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAED,QAAI;AACF,YAAM3B,QAAQ,GAAG,MAAMzB,KAAK,CAACqD,IAAN,CAAW,2BAAX,EAAwC;AAC7Db,QAAAA,eAAe,EAAEvB,WAD4C;AAE7DA,QAAAA,WAAW,EAAE,EAFgD,CAE7C;;AAF6C,OAAxC,CAAvB;AAKAU,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,QAAQ,CAACI,IAAvC;;AAEA,UAAI,CAACJ,QAAQ,CAACI,IAAV,IAAkB,OAAOJ,QAAQ,CAACI,IAAhB,KAAyB,QAA/C,EAAyD;AACvDF,QAAAA,OAAO,CAACG,KAAR,CAAc,wBAAd,EAAwCL,QAAQ,CAACI,IAAjD;AACAR,QAAAA,SAAS;AACT;AACD;;AAEDA,MAAAA,SAAS,GAdP,CAcW;;AACb+B,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,KAhBD,CAgBE,OAAOtB,KAAP,EAAc;AAAA;;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACAsB,MAAAA,KAAK,CACH,+BACG,oBAAAtB,KAAK,CAACL,QAAN,4FAAgBI,IAAhB,8EAAsByB,OAAtB,KAAiCxB,KAAK,CAACwB,OAD1C,CADG,CAAL;AAID;AACF,GA7BD;;AA+BA,QAAMC,YAAY,GAAIpB,GAAD,IAAS;AAC5BrB,IAAAA,eAAe,CAACqB,GAAG,CAACO,EAAL,CAAf;AACA1B,IAAAA,iBAAiB,CAACmB,GAAG,CAACG,SAAJ,IAAiB,EAAlB,CAAjB;AACD,GAHD;;AAKA,QAAMkB,aAAa,GAAG,MAAM;AAC1B1C,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAHD;;AAKA,QAAMyC,YAAY,GAAG,MAAOf,EAAP,IAAc;AACjC,QAAI;AACF,YAAM1C,KAAK,CAAC0D,KAAN,CAAa,6BAA4BhB,EAAG,EAA5C,EAA+C;AACnDH,QAAAA,SAAS,EAAExB,cADwC,CACxB;;AADwB,OAA/C,CAAN;AAGAX,MAAAA,OAAO,CACLD,IAAI,CAACiC,GAAL,CAAUD,GAAD,IACPA,GAAG,CAACO,EAAJ,KAAWA,EAAX,GAAgB,EAAE,GAAGP,GAAL;AAAUG,QAAAA,SAAS,EAAEvB;AAArB,OAAhB,GAAwDoB,GAD1D,CADK,CAAP;AAKArB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAsC,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACD,KAXD,CAWE,OAAOtB,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACAsB,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,GAhBD;;AAkBA,QAAMO,YAAY,GAAGxD,IAAI,CACtB+B,MADkB,CACVC,GAAD,IAASA,GAAG,IAAI,OAAOA,GAAP,KAAe,QADpB,EAElBD,MAFkB,CAEVC,GAAD,IACN,CAACA,GAAG,CAACG,SAAJ,IAAiB,EAAlB,EAAsBsB,WAAtB,GAAoCC,QAApC,CAA6CxD,UAAU,CAACuD,WAAX,EAA7C,CAHiB,CAArB;AAKA,QAAME,aAAa,GAAGH,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsBxD,aAAtB,CAAtB;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEyD,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,QAAQ,EAAE,OADL;AAELC,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,MAAM,EAAE,OALH;AAMLC,QAAAA,eAAe,EAAE,yBANZ;AAOLC,QAAAA,cAAc,EAAE,OAPX;AAQLC,QAAAA,kBAAkB,EAAE,QARf;AASLC,QAAAA,gBAAgB,EAAE,WATb;AAULC,QAAAA,oBAAoB,EAAE,OAVjB;AAWLC,QAAAA,MAAM,EAAE,CAAC;AAXJ;AADT;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AACE,MAAA,KAAK,EAAE;AACLV,QAAAA,QAAQ,EAAE,OADL;AAELC,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,MAAM,EAAE,OALH;AAMLO,QAAAA,UAAU,EAAE,oBANP;AAOLD,QAAAA,MAAM,EAAE,CAAC;AAPJ;AADT;AAAA;AAAA;AAAA;AAAA,YAhBF,eA4BE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,KAAK,EAAE;AAAEV,QAAAA,QAAQ,EAAE,UAAZ;AAAwBU,QAAAA,MAAM,EAAE;AAAhC,OAFT;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAC,iEAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,KAAK,EAAE;AAAEE,YAAAA,QAAQ,EAAE;AAAZ,WAHT;AAIE,UAAA,WAAW,EAAC,qBAJd;AAKE,UAAA,KAAK,EAAEvE,UALT;AAME,UAAA,QAAQ,EAAGwE,CAAD,IAAOvE,aAAa,CAACuE,CAAC,CAACC,MAAF,CAASC,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA,gBADF,EASG,CAACtE,QAAD,IAAa,CAACU,QAAd,iBACC;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAE6B,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAcGvC,QAAQ,iBACP,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAyBG,CAACA,QAAD,gBACC;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,qBACGU,QAAQ,iBACP;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,OAFZ;AAGE,gBAAA,KAAK,EAAEF,WAHT;AAIE,gBAAA,QAAQ,EAAG4D,CAAD,IAAO3D,cAAc,CAAC2D,CAAC,CAACC,MAAF,CAASC,KAAV,CAJjC;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAWE;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,iCADZ;AAEE,gBAAA,OAAO,EAAE7B,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AACE,gBAAA,SAAS,EAAC,2BADZ;AAEE,gBAAA,OAAO,EAAED,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EA6BGa,aAAa,CAAC1B,GAAd,CAAmBD,GAAD,iBACjB;AAAA,oCACE;AAAA,wBAAKA,GAAG,CAACO,EAAJ,IAAU;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBACG7B,YAAY,KAAKsB,GAAG,CAACO,EAArB,gBACC;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,OAFZ;AAGE,gBAAA,KAAK,EAAE3B,cAHT;AAIE,gBAAA,QAAQ,EAAG8D,CAAD,IAAO7D,iBAAiB,CAAC6D,CAAC,CAACC,MAAF,CAASC,KAAV;AAJpC;AAAA;AAAA;AAAA;AAAA,sBADD,GAQC5C,GAAG,CAACG,SAAJ,IAAiB;AATrB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAcE;AAAA,wBACGzB,YAAY,KAAKsB,GAAG,CAACO,EAArB,gBACC;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,iCADZ;AAEE,kBAAA,OAAO,EAAE,MAAMe,YAAY,CAACtB,GAAG,CAACO,EAAL,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE;AACE,kBAAA,SAAS,EAAC,2BADZ;AAEE,kBAAA,OAAO,EAAEc,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA,8BADD,gBAgBC;AACE,gBAAA,SAAS,EAAC,8BADZ;AAEE,gBAAA,OAAO,EAAE,MAAMD,YAAY,CAACpB,GAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA,aAASA,GAAG,CAACO,EAAJ,IAAUI,IAAI,CAACC,MAAL,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADD,CA7BH;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAmFC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGe,aAAa,CAAC1B,GAAd,CAAmBD,GAAD,iBACjB;AAAmC,UAAA,SAAS,EAAC,cAA7C;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,mBAAb;AAAA,0BACGA,GAAG,CAACG,SAAJ,IAAiB;AADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,eAAb;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC4BH,GAAG,CAACO,EAAJ,IAAU,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eAWE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAG,sBAAqBP,GAAG,CAACO,EAAG,EADnC;AAEE,gBAAA,SAAS,EAAC,0CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUP,GAAG,CAACO,EAAJ,IAAUI,IAAI,CAACC,MAAL,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cA5GJ,eAwIE;AAAK,QAAA,SAAS,EAAC,sGAAf;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE;AACE,cAAA,KAAK,EAAExC,aADT;AAEE,cAAA,QAAQ,EAAGsE,CAAD,IAAOrE,gBAAgB,CAACwE,MAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CAFnC;AAAA,sCAIE;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAQ,gBAAA,KAAK,EAAEpB,YAAY,CAACsB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAA,iCACWnB,aAAa,CAACmB,MADzB,UACqCtB,YAAY,CAACsB,MADlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxIF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2LD;;GA/TQ/E,U;;KAAAA,U;AAiUT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DepartList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingJobId, setEditingJobId] = useState(null);\r\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\r\n  const [newJobTitle, setNewJobTitle] = useState(\"\");\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      console.log(\"Raw GET response:\", response); // Log full response\r\n      console.log(\"Fetched jobs data:\", response.data);\r\n\r\n      // Handle null or invalid response\r\n      if (!response.data) {\r\n        console.error(\"API returned null or undefined\");\r\n        setJobs([]);\r\n        return;\r\n      }\r\n\r\n      // Ensure data is an array\r\n      const data = Array.isArray(response.data) ? response.data : [];\r\n\r\n      // Sanitize and normalize job data\r\n      const sanitizedJobs = data\r\n        .filter((job) => job !== null && typeof job === \"object\") // Remove null entries\r\n        .map((job) => {\r\n          // Try different possible field names\r\n          const title =\r\n            job.Job_Title ||\r\n            job.job_title ||\r\n            job.Department_Name ||\r\n            job.department_name ||\r\n            \"\";\r\n          const id = job.id || job.ID || Date.now() + Math.random(); // Fallback ID\r\n          return { id, Job_Title: title };\r\n        });\r\n\r\n      console.log(\"Sanitized jobs:\", sanitizedJobs);\r\n      setJobs(sanitizedJobs);\r\n    } catch (error) {\r\n      console.error(\"Error fetching job titles:\", error);\r\n      setJobs([]);\r\n    }\r\n  };\r\n\r\n  const startAdding = () => {\r\n    setIsAdding(true);\r\n    setNewJobTitle(\"\");\r\n  };\r\n\r\n  const cancelAdding = () => {\r\n    setIsAdding(false);\r\n    setNewJobTitle(\"\");\r\n  };\r\n\r\n  const saveNewJob = async () => {\r\n    if (!newJobTitle.trim()) {\r\n      alert(\"Job Title is required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/job\", {\r\n        Department_Name: newJobTitle, \r\n        newJobTitle: \"\",// Change to match expected field name\r\n      });\r\n\r\n      console.log(\"POST Response:\", response.data);\r\n\r\n      if (!response.data || typeof response.data !== \"object\") {\r\n        console.error(\"Invalid POST response:\", response.data);\r\n        fetchJobs();\r\n        return;\r\n      }\r\n\r\n      fetchJobs(); // Ensure fresh data is fetched after adding\r\n      alert(\"Job Title added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding job title:\", error);\r\n      alert(\r\n        \"Failed to add Job Title: \" +\r\n          (error.response?.data?.message || error.message)\r\n      );\r\n    }\r\n  };\r\n\r\n  const startEditing = (job) => {\r\n    setEditingJobId(job.id);\r\n    setEditedJobTitle(job.Job_Title || \"\");\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingJobId(null);\r\n    setEditedJobTitle(\"\");\r\n  };\r\n\r\n  const saveJobTitle = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/job/${id}`, {\r\n        job_title: editedJobTitle, // Match backend field name if needed\r\n      });\r\n      setJobs(\r\n        jobs.map((job) =>\r\n          job.id === id ? { ...job, Job_Title: editedJobTitle } : job\r\n        )\r\n      );\r\n      setEditingJobId(null);\r\n      alert(\"Job title updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating job title:\", error);\r\n      alert(\"Failed to update job title\");\r\n    }\r\n  };\r\n\r\n  const filteredJobs = jobs\r\n    .filter((job) => job && typeof job === \"object\")\r\n    .filter((job) =>\r\n      (job.Job_Title || \"\").toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div\r\n        className=\"column container mt-5\"\r\n        style={{ position: \"relative\", zIndex: 1 }}\r\n      >\r\n        <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search Job Title...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          {!isMobile && !isAdding && (\r\n            <button className=\"button is-success ml-3\" onClick={startAdding}>\r\n              Add Job Title\r\n            </button>\r\n          )}\r\n          {isMobile && (\r\n            <Link to=\"/home/AddJob\" className=\"button is-success ml-3\">\r\n              Add Job Title\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        {!isMobile ? (\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Job ID</th>\r\n                <th>Job Title</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isAdding && (\r\n                <tr>\r\n                  <td>New</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"input\"\r\n                      value={newJobTitle}\r\n                      onChange={(e) => setNewJobTitle(e.target.value)}\r\n                      placeholder=\"Enter new job title\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"button is-small is-success mr-2\"\r\n                      onClick={saveNewJob}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                    <button\r\n                      className=\"button is-small is-danger\"\r\n                      onClick={cancelAdding}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {displayedJobs.map((job) => (\r\n                <tr key={job.id || Math.random()}>\r\n                  <td>{job.id || \"N/A\"}</td>\r\n                  <td>\r\n                    {editingJobId === job.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={editedJobTitle}\r\n                        onChange={(e) => setEditedJobTitle(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      job.Job_Title || \"Untitled\"\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingJobId === job.id ? (\r\n                      <>\r\n                        <button\r\n                          className=\"button is-small is-success mr-2\"\r\n                          onClick={() => saveJobTitle(job.id)}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                        <button\r\n                          className=\"button is-small is-danger\"\r\n                          onClick={cancelEditing}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button\r\n                        className=\"button is-small is-info mr-2\"\r\n                        onClick={() => startEditing(job)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"columns is-multiline\">\r\n            {displayedJobs.map((job) => (\r\n              <div key={job.id || Math.random()} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                      {job.Job_Title || \"Untitled\"}\r\n                    </p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p className=\"subtitle is-6\">\r\n                      <strong>Job ID:</strong> {job.id || \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/editJobTitle/${job.id}`}\r\n                      className=\"card-footer-item button is-small is-info\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select\r\n                value={entriesToShow}\r\n                onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n              >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value={filteredJobs.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Showing {displayedJobs.length} of {filteredJobs.length} entries\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepartList;\r\n"]},"metadata":{},"sourceType":"module"}