{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\context\\\\authContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext, useEffect } from \"react\"; // Create a context for authentication\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Simulating check for token in localStorage or from backend\n    const token = localStorage.getItem(\"authToken\");\n\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const login = () => {\n    setIsAuthenticated(true);\n    localStorage.setItem(\"authToken\", \"your-auth-token\"); // Store token\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem(\"authToken\"); // Remove token\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/context/authContext.js"],"names":["React","createContext","useState","useContext","useEffect","AuthContext","useAuth","AuthProvider","children","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","login","setItem","logout","removeItem"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE,C,CAEA;;;AACA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEA,OAAO,MAAMK,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOH,UAAU,CAACE,WAAD,CAAjB;AACD,CAFM;;GAAMC,O;;AAIb,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACTD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMI,KAAK,GAAG,MAAM;AAClBJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,YAAY,CAACG,OAAb,CAAqB,WAArB,EAAkC,iBAAlC,EAFkB,CAEoC;AACvD,GAHD;;AAKA,QAAMC,MAAM,GAAG,MAAM;AACnBN,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,IAAAA,YAAY,CAACK,UAAb,CAAwB,WAAxB,EAFmB,CAEmB;AACvC,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAER,MAAAA,eAAF;AAAmBK,MAAAA,KAAnB;AAA0BE,MAAAA;AAA1B,KAA7B;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\n\r\n// Create a context for authentication\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Simulating check for token in localStorage or from backend\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = () => {\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem(\"authToken\", \"your-auth-token\"); // Store token\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem(\"authToken\"); // Remove token\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}