{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  var _positions$newEmploye, _positions$newEmploye2, _positions$newEmploye3;\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [departments, setDepartments] = useState([]);\n  const [positions, setPositions] = useState({});\n  const [editRow, setEditRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const [loadingPositions, setLoadingPositions] = useState({});\n  const [isAdding, setIsAdding] = useState(false);\n  const [newEmployee, setNewEmployee] = useState({\n    full_name: \"\",\n    gender: \"\",\n    email: \"\",\n    job_id: \"\",\n    salary_id: \"\"\n  });\n  const [addErrors, setAddErrors] = useState({\n    full_name: false,\n    gender: false,\n    email: false,\n    job_id: false,\n    salary_id: false\n  }); // Add state for edit validation errors\n\n  const [editErrors, setEditErrors] = useState({\n    full_name: false,\n    gender: false,\n    email: false,\n    job_id: false,\n    salary_id: false\n  });\n  useEffect(() => {\n    getUsers();\n    fetchDepartments();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setDepartments(response.data);\n    } catch (error) {\n      var _error$response;\n\n      console.error(\"Error fetching departments:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n\n  const fetchPositionsForJob = async jobId => {\n    if (!jobId) {\n      console.warn(\"No jobId provided for fetching positions\");\n      return [];\n    }\n\n    console.log(`Starting fetch for jobId: ${jobId}`);\n    setLoadingPositions(prev => ({ ...prev,\n      [jobId]: true\n    }));\n\n    try {\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${jobId}`);\n      console.log(`Positions fetched for job ${jobId}:`, response.data);\n      setPositions(prev => ({ ...prev,\n        [jobId]: response.data\n      }));\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response3;\n\n      console.error(`Error fetching positions for job ${jobId}:`, {\n        message: error.message,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n      });\n      return [];\n    } finally {\n      setLoadingPositions(prev => ({ ...prev,\n        [jobId]: false\n      }));\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n      const uniqueJobIds = [...new Set(response.data.map(user => user.job_id).filter(Boolean))];\n      await Promise.all(uniqueJobIds.map(jobId => fetchPositionsForJob(jobId)));\n    } catch (error) {\n      var _error$response4;\n\n      console.error(\"Error fetching users:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    }\n  };\n\n  const handleEdit = async user => {\n    var _ref, _matchedJob$id, _user$full_name, _user$gender, _user$email, _user$Job_Title, _matchedPosition$id, _ref2, _matchedPosition$sala;\n\n    if (!(user !== null && user !== void 0 && user.id)) {\n      console.error(\"Invalid user object\");\n      return;\n    }\n\n    setEditRow(user.id);\n    setEditErrors({\n      full_name: false,\n      gender: false,\n      email: false,\n      job_id: false,\n      salary_id: false\n    });\n    const matchedJob = departments.find(dep => dep.Job_Title === user.Job_Title) || {};\n    const jobId = (_ref = (_matchedJob$id = matchedJob.id) !== null && _matchedJob$id !== void 0 ? _matchedJob$id : user.job_id) !== null && _ref !== void 0 ? _ref : \"\";\n    let updatedPositions = positions[jobId] || [];\n\n    if (jobId && !updatedPositions.length && !loadingPositions[jobId]) {\n      updatedPositions = await fetchPositionsForJob(jobId);\n    }\n\n    const matchedPosition = updatedPositions.find(pos => (pos === null || pos === void 0 ? void 0 : pos.position) === user.position) || {};\n    console.log(\"Editing user position ID:\", matchedPosition.id || \"Not found\");\n    setEditedData({\n      full_name: String((_user$full_name = user.full_name) !== null && _user$full_name !== void 0 ? _user$full_name : \"\"),\n      gender: String((_user$gender = user.gender) !== null && _user$gender !== void 0 ? _user$gender : \"\"),\n      email: String((_user$email = user.email) !== null && _user$email !== void 0 ? _user$email : \"\"),\n      job_id: String(jobId),\n      job_title: String((_user$Job_Title = user.Job_Title) !== null && _user$Job_Title !== void 0 ? _user$Job_Title : \"\"),\n      salary_id: String((_matchedPosition$id = matchedPosition.id) !== null && _matchedPosition$id !== void 0 ? _matchedPosition$id : \"\"),\n      salary: String((_ref2 = (_matchedPosition$sala = matchedPosition.salary) !== null && _matchedPosition$sala !== void 0 ? _matchedPosition$sala : user.salary) !== null && _ref2 !== void 0 ? _ref2 : \"\")\n    });\n  };\n\n  const handleEditChange = (e, field) => {\n    const value = e.target.value;\n    setEditedData(prev => {\n      const newData = { ...prev,\n        [field]: value\n      };\n\n      if (field === \"job_id\") {\n        console.log(`Job ID changed to ${value}`);\n        fetchPositionsForJob(value).then(newPositions => {\n          setEditedData(prevUpdated => ({ ...prevUpdated,\n            salary_id: \"\",\n            salary: \"\"\n          }));\n        });\n      }\n\n      if (field === \"salary_id\") {\n        var _positions$prev$job_i;\n\n        const selectedPosition = (_positions$prev$job_i = positions[prev.job_id]) === null || _positions$prev$job_i === void 0 ? void 0 : _positions$prev$job_i.find(pos => pos.id.toString() === value);\n        newData.salary = selectedPosition ? selectedPosition.salary.toString() : \"\";\n      }\n\n      return newData;\n    }); // Clear error when user starts typing\n\n    setEditErrors(prev => ({ ...prev,\n      [field]: !value || value.trim() === \"\"\n    }));\n  };\n\n  const handleSave = async id => {\n    // Validation before saving\n    const newEditErrors = {\n      full_name: !editedData.full_name || editedData.full_name.trim() === \"\",\n      gender: !editedData.gender || editedData.gender.trim() === \"\",\n      email: !editedData.email || editedData.email.trim() === \"\",\n      job_id: !editedData.job_id || editedData.job_id.trim() === \"\",\n      salary_id: !editedData.salary_id || editedData.salary_id.trim() === \"\"\n    };\n\n    if (Object.values(newEditErrors).some(error => error)) {\n      setEditErrors(newEditErrors);\n      console.log(\"Validation failed for update:\", newEditErrors);\n      return;\n    }\n\n    try {\n      const updateData = {\n        name: editedData.full_name,\n        gender: editedData.gender,\n        email: editedData.email,\n        position_id: parseInt(editedData.salary_id) || null,\n        job_id: parseInt(editedData.job_id) || null\n      };\n      const response = await axios.patch(`http://localhost:5000/users/${id}`, updateData);\n      console.log(`Update response for user ${id}:`, response.data);\n      setEditRow(null);\n      setEditErrors({\n        full_name: false,\n        gender: false,\n        email: false,\n        job_id: false,\n        salary_id: false\n      });\n      await getUsers();\n    } catch (error) {\n      var _error$response5;\n\n      console.error(\"Error updating user:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    }\n  };\n\n  const startAdding = () => {\n    setIsAdding(true);\n    setNewEmployee({\n      full_name: \"\",\n      gender: \"\",\n      email: \"\",\n      job_id: \"\",\n      salary_id: \"\"\n    });\n    setAddErrors({\n      full_name: false,\n      gender: false,\n      email: false,\n      job_id: false,\n      salary_id: false\n    });\n  };\n\n  const cancelAdding = () => {\n    setIsAdding(false);\n    setNewEmployee({\n      full_name: \"\",\n      gender: \"\",\n      email: \"\",\n      job_id: \"\",\n      salary_id: \"\"\n    });\n    setAddErrors({\n      full_name: false,\n      gender: false,\n      email: false,\n      job_id: false,\n      salary_id: false\n    });\n  };\n\n  const handleNewChange = (e, field) => {\n    const value = e.target.value;\n    setNewEmployee(prev => {\n      const newData = { ...prev,\n        [field]: value\n      };\n\n      if (field === \"job_id\") {\n        fetchPositionsForJob(value);\n        newData.salary_id = \"\";\n      }\n\n      return newData;\n    });\n    setAddErrors(prev => ({ ...prev,\n      [field]: !value || value.trim() === \"\"\n    }));\n  };\n\n  const saveNewEmployee = async () => {\n    const newAddErrors = {\n      full_name: !newEmployee.full_name || newEmployee.full_name.trim() === \"\",\n      gender: !newEmployee.gender || newEmployee.gender.trim() === \"\",\n      email: !newEmployee.email || newEmployee.email.trim() === \"\",\n      job_id: !newEmployee.job_id || newEmployee.job_id.trim() === \"\",\n      salary_id: !newEmployee.salary_id || newEmployee.salary_id.trim() === \"\"\n    };\n\n    if (Object.values(newAddErrors).some(error => error)) {\n      setAddErrors(newAddErrors);\n      return;\n    }\n\n    try {\n      const payload = {\n        name: newEmployee.full_name,\n        gender: newEmployee.gender,\n        email: newEmployee.email,\n        position_id: parseInt(newEmployee.salary_id),\n        job_id: parseInt(newEmployee.job_id)\n      };\n      const response = await axios.post(\"http://localhost:5000/users\", payload);\n      console.log(\"POST Response:\", response.data);\n      setIsAdding(false);\n      setNewEmployee({\n        full_name: \"\",\n        gender: \"\",\n        email: \"\",\n        job_id: \"\",\n        salary_id: \"\"\n      });\n      setAddErrors({\n        full_name: false,\n        gender: false,\n        email: false,\n        job_id: false,\n        salary_id: false\n      });\n      await getUsers();\n    } catch (error) {\n      var _error$response6;\n\n      console.error(\"Error adding employee:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    }\n  };\n\n  const filteredUsers = users.filter(user => `${user.full_name} ${user.email} ${user.Job_Title || \"\"} ${user.position || \"\"} ${user.id}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\n\n  const openDelete = user => {\n    setDeleteData(user);\n    setOpen(true);\n  };\n\n  const deleteUser = async () => {\n    if (!deleteData) return;\n\n    try {\n      await axios.delete(`http://localhost:5000/users/${deleteData.id}`);\n      setDeleteData(null);\n      setOpen(false);\n      await getUsers();\n    } catch (error) {\n      var _error$response7;\n\n      console.error(\"Error deleting user:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    }\n  };\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(EmployePDF, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 28\n    }, this)).toBlob();\n    const url = URL.createObjectURL(blob);\n    window.open(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Full Name, Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"is-flex\",\n          children: [!isMobile && !isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-success mr-1\",\n            onClick: startAdding,\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), isMobile ? /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/AddEmployee\",\n            className: \"button is-success mr-1\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleViewPDF,\n            className: \"button is-info ml-1\",\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-striped is-fullwidth\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [isAdding && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: newEmployee.full_name,\n                  onChange: e => handleNewChange(e, \"full_name\"),\n                  placeholder: \"Full Name\",\n                  style: {\n                    borderColor: addErrors.full_name ? \"red\" : \"\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"select is-fullwidth\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newEmployee.gender,\n                    onChange: e => handleNewChange(e, \"gender\"),\n                    style: {\n                      borderColor: addErrors.gender ? \"red\" : \"\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Gender\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Male\",\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Female\",\n                      children: \"Female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"input\",\n                  value: newEmployee.email,\n                  onChange: e => handleNewChange(e, \"email\"),\n                  placeholder: \"Email\",\n                  style: {\n                    borderColor: addErrors.email ? \"red\" : \"\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"select is-fullwidth\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newEmployee.job_id,\n                    onChange: e => handleNewChange(e, \"job_id\"),\n                    style: {\n                      borderColor: addErrors.job_id ? \"red\" : \"\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Job Title\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 27\n                    }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dep.id.toString(),\n                      children: dep.Job_Title\n                    }, dep.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"select is-fullwidth\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: newEmployee.salary_id,\n                    onChange: e => handleNewChange(e, \"salary_id\"),\n                    disabled: !newEmployee.job_id || loadingPositions[newEmployee.job_id] || !((_positions$newEmploye = positions[newEmployee.job_id]) !== null && _positions$newEmploye !== void 0 && _positions$newEmploye.length),\n                    style: {\n                      borderColor: addErrors.salary_id ? \"red\" : \"\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select Position\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 27\n                    }, this), loadingPositions[newEmployee.job_id] ? /*#__PURE__*/_jsxDEV(\"option\", {\n                      disabled: true,\n                      children: \"Loading positions...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 29\n                    }, this) : (_positions$newEmploye2 = positions[newEmployee.job_id]) !== null && _positions$newEmploye2 !== void 0 && _positions$newEmploye2.length ? positions[newEmployee.job_id].map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: pos.id.toString(),\n                      children: pos.position\n                    }, pos.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 31\n                    }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                      disabled: true,\n                      children: \"No positions available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: newEmployee.salary_id && positions[newEmployee.job_id] ? `₱${(_positions$newEmploye3 = positions[newEmployee.job_id].find(pos => pos.id.toString() === newEmployee.salary_id)) === null || _positions$newEmploye3 === void 0 ? void 0 : _positions$newEmploye3.salary.toLocaleString(\"en-PH\", {\n                    minimumFractionDigits: 2\n                  })}` : \"\",\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"is-flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-success mr-2\",\n                  onClick: saveNewEmployee,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-danger\",\n                  onClick: cancelAdding,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this), displayedUsers.length > 0 ? displayedUsers.map(user => {\n              var _positions$editedData, _positions$editedData2, _user$salary;\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"input\",\n                    value: editedData.full_name || \"\",\n                    onChange: e => handleEditChange(e, \"full_name\"),\n                    style: {\n                      borderColor: editErrors.full_name ? \"red\" : \"\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 27\n                  }, this) : user.full_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"select is-fullwidth\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: editedData.gender || \"\",\n                      onChange: e => handleEditChange(e, \"gender\"),\n                      style: {\n                        borderColor: editErrors.gender ? \"red\" : \"\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Gender\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 586,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Male\",\n                        children: \"Male\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 587,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Female\",\n                        children: \"Female\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 579,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 27\n                  }, this) : user.gender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"input\",\n                    value: editedData.email || \"\",\n                    onChange: e => handleEditChange(e, \"email\"),\n                    style: {\n                      borderColor: editErrors.email ? \"red\" : \"\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 27\n                  }, this) : user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"select is-fullwidth\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: editedData.job_id || \"\",\n                      onChange: e => handleEditChange(e, \"job_id\"),\n                      style: {\n                        borderColor: editErrors.job_id ? \"red\" : \"\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Job Title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 620,\n                        columnNumber: 31\n                      }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: dep.id.toString(),\n                        children: dep.Job_Title\n                      }, dep.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 622,\n                        columnNumber: 33\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 27\n                  }, this) : user.Job_Title || \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"select is-fullwidth\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: editedData.salary_id || \"\",\n                      onChange: e => handleEditChange(e, \"salary_id\"),\n                      disabled: !editedData.job_id || loadingPositions[editedData.job_id] || !((_positions$editedData = positions[editedData.job_id]) !== null && _positions$editedData !== void 0 && _positions$editedData.length),\n                      style: {\n                        borderColor: editErrors.salary_id ? \"red\" : \"\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Position\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 31\n                      }, this), loadingPositions[editedData.job_id] ? /*#__PURE__*/_jsxDEV(\"option\", {\n                        disabled: true,\n                        children: \"Loading positions...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 649,\n                        columnNumber: 33\n                      }, this) : (_positions$editedData2 = positions[editedData.job_id]) !== null && _positions$editedData2 !== void 0 && _positions$editedData2.length ? positions[editedData.job_id].map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: pos.id.toString(),\n                        children: pos.position\n                      }, pos.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 652,\n                        columnNumber: 35\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                        disabled: true,\n                        children: \"No positions available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 660,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 27\n                  }, this) : user.position || \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"input\",\n                    value: editedData.salary ? `₱${Number(editedData.salary).toLocaleString(\"en-PH\", {\n                      minimumFractionDigits: 2\n                    })}` : \"\",\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 27\n                  }, this) : `₱${((_user$salary = user.salary) === null || _user$salary === void 0 ? void 0 : _user$salary.toLocaleString(\"en-PH\")) || \"-\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"is-flex\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button is-small is-success mr-2\",\n                      onClick: () => handleSave(user.id),\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 692,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button is-small is-danger\",\n                      onClick: () => setEditRow(null),\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 698,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEdit(user),\n                      className: \"button is-small is-info mr-3\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => openDelete(user),\n                      className: \"button is-small is-danger\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 23\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"8\",\n                className: \"has-text-centered\",\n                children: \"No users found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline m-1\",\n        children: displayedUsers.map(user => {\n          var _user$salary2;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column is-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"header\", {\n                className: \"card-header\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-header-title\",\n                  children: [user.full_name, \" - \", user.gender]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Employee ID:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 23\n                  }, this), \" \", user.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 23\n                  }, this), \" \", user.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Job Title:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 23\n                  }, this), \" \", user.Job_Title || \"-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Position:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 23\n                  }, this), \" \", user.position || \"-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Salary:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 23\n                  }, this), \" \\u20B1\", ((_user$salary2 = user.salary) === null || _user$salary2 === void 0 ? void 0 : _user$salary2.toLocaleString(\"en-PH\")) || \"-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                className: \"card-footer\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/home/edit/${user.id}`,\n                  className: \"card-footer-item button is-small is-info\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openDelete(user),\n                  className: \"card-footer-item button is-small is-danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 p-3 has-text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-2\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entriesToShow,\n              onChange: e => setEntriesToShow(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"50\",\n                children: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"100\",\n                children: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: filteredUsers.length,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", displayedUsers.length, \" of \", filteredUsers.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmBox, {\n        open: open,\n        closeDialog: () => setOpen(false),\n        title: deleteData === null || deleteData === void 0 ? void 0 : deleteData.full_name,\n        empID: deleteData === null || deleteData === void 0 ? void 0 : deleteData.id,\n        deleteFunction: deleteUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"D4AGwcNptJZf14wYSHTN2JIJJog=\");\n\n_c = UserList;\nexport default UserList; // import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\n// const UserList = () => {\n//   const [users, setUser] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [entriesToShow, setEntriesToShow] = useState(10);\n//   useEffect(() => {\n//     getUsers();\n//   }, []);\n//   const getUsers = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/users\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching users:\", error);\n//     }\n//   };\n//   const deleteUser = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/users/${id}`);\n//       getUsers();\n//     } catch (error) {\n//       console.error(\"Error deleting user:\", error);\n//     }\n//   };\n//   // Filter users based on search term\n//   const filteredUsers = users.filter((user) =>\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\n//       .toLowerCase()\n//       .includes(searchTerm.toLowerCase())\n//   );\n//   // Limit displayed entries based on selection\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\n//   return (\n//     <div className=\"container mt-5\">\n//       {/* Search Bar and Action Buttons */}\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"input\"\n//           style={{ maxWidth: \"300px\" }}\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <div>\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\n//             Add Employee\n//           </Link>\n//           <PDFDownloadLink\n//             document={<EmployePDF users={users} />}\n//             fileName=\"Employee_Report.pdf\"\n//             className=\"button is-info mr-3\"\n//           >\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\n//           </PDFDownloadLink>\n//         </div>\n//       </div>\n//       {/* Employee Table */}\n//       <table className=\"table is-striped is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>Employee ID</th>\n//             <th>Full Name</th>\n//             <th>Email</th>\n//             <th>Gender</th>\n//             <th>Job Title</th>\n//             <th>Position / Level</th>\n//             <th>Salary</th>\n//             <th>Annual Salary</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayedUsers.length > 0 ? (\n//             displayedUsers.map((user) => (\n//               <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.full_name}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.gender}</td>\n//                 <td>{user.Job_Title}</td>\n//                 <td>{user.position}</td>\n//                 <td>\n//                   {user.salary\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n//                         minimumFractionDigits: 2,\n//                       })}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   {user.anual_salary\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\n//                         \"en-PH\",\n//                         {\n//                           minimumFractionDigits: 2,\n//                         }\n//                       )}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   <Link\n//                     to={`edit/${user.id}`}\n//                     className=\"button is-small is-info mr-2\"\n//                   >\n//                     Edit\n//                   </Link>\n//                   <button\n//                     onClick={() => deleteUser(user.id)}\n//                     className=\"button is-small is-danger\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"9\" className=\"has-text-centered\">\n//                 No users found.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {/* Footer with Entry Filter */}\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\n//         <div>\n//           <label className=\"mr-2\">Show entries:</label>\n//           <div className=\"select\">\n//             <select\n//               value={entriesToShow}\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\n//             >\n//               <option value=\"5\">5</option>\n//               <option value=\"10\">10</option>\n//               <option value=\"20\">20</option>\n//               <option value={filteredUsers.length}>All</option>\n//             </select>\n//           </div>\n//         </div>\n//         <p>\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","departments","setDepartments","positions","setPositions","editRow","setEditRow","editedData","setEditedData","loadingPositions","setLoadingPositions","isAdding","setIsAdding","newEmployee","setNewEmployee","full_name","gender","email","job_id","salary_id","addErrors","setAddErrors","editErrors","setEditErrors","getUsers","fetchDepartments","handleResize","addEventListener","removeEventListener","response","get","data","error","console","message","fetchPositionsForJob","jobId","warn","log","prev","status","uniqueJobIds","Set","map","user","filter","Boolean","Promise","all","handleEdit","id","matchedJob","find","dep","Job_Title","updatedPositions","length","matchedPosition","pos","position","String","job_title","salary","handleEditChange","e","field","value","target","newData","then","newPositions","prevUpdated","selectedPosition","toString","trim","handleSave","newEditErrors","Object","values","some","updateData","name","position_id","parseInt","patch","startAdding","cancelAdding","handleNewChange","saveNewEmployee","newAddErrors","payload","post","filteredUsers","toLowerCase","includes","displayedUsers","slice","openDelete","deleteUser","delete","handleViewPDF","blob","toBlob","url","URL","createObjectURL","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","borderColor","toLocaleString","minimumFractionDigits","Number"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [positions, setPositions] = useState({});\r\n  const [editRow, setEditRow] = useState(null);\r\n  const [editedData, setEditedData] = useState({});\r\n  const [loadingPositions, setLoadingPositions] = useState({});\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [newEmployee, setNewEmployee] = useState({\r\n    full_name: \"\",\r\n    gender: \"\",\r\n    email: \"\",\r\n    job_id: \"\",\r\n    salary_id: \"\",\r\n  });\r\n  const [addErrors, setAddErrors] = useState({\r\n    full_name: false,\r\n    gender: false,\r\n    email: false,\r\n    job_id: false,\r\n    salary_id: false,\r\n  });\r\n  // Add state for edit validation errors\r\n  const [editErrors, setEditErrors] = useState({\r\n    full_name: false,\r\n    gender: false,\r\n    email: false,\r\n    job_id: false,\r\n    salary_id: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    fetchDepartments();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error fetching departments:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const fetchPositionsForJob = async (jobId) => {\r\n    if (!jobId) {\r\n      console.warn(\"No jobId provided for fetching positions\");\r\n      return [];\r\n    }\r\n    console.log(`Starting fetch for jobId: ${jobId}`);\r\n    setLoadingPositions((prev) => ({ ...prev, [jobId]: true }));\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/salary/getPosition/${jobId}`\r\n      );\r\n      console.log(`Positions fetched for job ${jobId}:`, response.data);\r\n      setPositions((prev) => ({ ...prev, [jobId]: response.data }));\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching positions for job ${jobId}:`, {\r\n        message: error.message,\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n      });\r\n      return [];\r\n    } finally {\r\n      setLoadingPositions((prev) => ({ ...prev, [jobId]: false }));\r\n    }\r\n  };\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n      const uniqueJobIds = [\r\n        ...new Set(response.data.map((user) => user.job_id).filter(Boolean)),\r\n      ];\r\n      await Promise.all(\r\n        uniqueJobIds.map((jobId) => fetchPositionsForJob(jobId))\r\n      );\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error fetching users:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (user) => {\r\n    if (!user?.id) {\r\n      console.error(\"Invalid user object\");\r\n      return;\r\n    }\r\n\r\n    setEditRow(user.id);\r\n    setEditErrors({\r\n      full_name: false,\r\n      gender: false,\r\n      email: false,\r\n      job_id: false,\r\n      salary_id: false,\r\n    });\r\n\r\n    const matchedJob =\r\n      departments.find((dep) => dep.Job_Title === user.Job_Title) || {};\r\n    const jobId = matchedJob.id ?? user.job_id ?? \"\";\r\n\r\n    let updatedPositions = positions[jobId] || [];\r\n    if (jobId && !updatedPositions.length && !loadingPositions[jobId]) {\r\n      updatedPositions = await fetchPositionsForJob(jobId);\r\n    }\r\n\r\n    const matchedPosition =\r\n      updatedPositions.find((pos) => pos?.position === user.position) || {};\r\n\r\n    console.log(\"Editing user position ID:\", matchedPosition.id || \"Not found\");\r\n\r\n    setEditedData({\r\n      full_name: String(user.full_name ?? \"\"),\r\n      gender: String(user.gender ?? \"\"),\r\n      email: String(user.email ?? \"\"),\r\n      job_id: String(jobId),\r\n      job_title: String(user.Job_Title ?? \"\"),\r\n      salary_id: String(matchedPosition.id ?? \"\"),\r\n      salary: String(matchedPosition.salary ?? user.salary ?? \"\"),\r\n    });\r\n  };\r\n\r\n  const handleEditChange = (e, field) => {\r\n    const value = e.target.value;\r\n    setEditedData((prev) => {\r\n      const newData = { ...prev, [field]: value };\r\n\r\n      if (field === \"job_id\") {\r\n        console.log(`Job ID changed to ${value}`);\r\n        fetchPositionsForJob(value).then((newPositions) => {\r\n          setEditedData((prevUpdated) => ({\r\n            ...prevUpdated,\r\n            salary_id: \"\",\r\n            salary: \"\",\r\n          }));\r\n        });\r\n      }\r\n\r\n      if (field === \"salary_id\") {\r\n        const selectedPosition = positions[prev.job_id]?.find(\r\n          (pos) => pos.id.toString() === value\r\n        );\r\n        newData.salary = selectedPosition\r\n          ? selectedPosition.salary.toString()\r\n          : \"\";\r\n      }\r\n\r\n      return newData;\r\n    });\r\n    // Clear error when user starts typing\r\n    setEditErrors((prev) => ({\r\n      ...prev,\r\n      [field]: !value || value.trim() === \"\",\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    // Validation before saving\r\n    const newEditErrors = {\r\n      full_name: !editedData.full_name || editedData.full_name.trim() === \"\",\r\n      gender: !editedData.gender || editedData.gender.trim() === \"\",\r\n      email: !editedData.email || editedData.email.trim() === \"\",\r\n      job_id: !editedData.job_id || editedData.job_id.trim() === \"\",\r\n      salary_id: !editedData.salary_id || editedData.salary_id.trim() === \"\",\r\n    };\r\n\r\n    if (Object.values(newEditErrors).some((error) => error)) {\r\n      setEditErrors(newEditErrors);\r\n      console.log(\"Validation failed for update:\", newEditErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const updateData = {\r\n        name: editedData.full_name,\r\n        gender: editedData.gender,\r\n        email: editedData.email,\r\n        position_id: parseInt(editedData.salary_id) || null,\r\n        job_id: parseInt(editedData.job_id) || null,\r\n      };\r\n      const response = await axios.patch(\r\n        `http://localhost:5000/users/${id}`,\r\n        updateData\r\n      );\r\n      console.log(`Update response for user ${id}:`, response.data);\r\n      setEditRow(null);\r\n      setEditErrors({\r\n        full_name: false,\r\n        gender: false,\r\n        email: false,\r\n        job_id: false,\r\n        salary_id: false,\r\n      });\r\n      await getUsers();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error updating user:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const startAdding = () => {\r\n    setIsAdding(true);\r\n    setNewEmployee({\r\n      full_name: \"\",\r\n      gender: \"\",\r\n      email: \"\",\r\n      job_id: \"\",\r\n      salary_id: \"\",\r\n    });\r\n    setAddErrors({\r\n      full_name: false,\r\n      gender: false,\r\n      email: false,\r\n      job_id: false,\r\n      salary_id: false,\r\n    });\r\n  };\r\n\r\n  const cancelAdding = () => {\r\n    setIsAdding(false);\r\n    setNewEmployee({\r\n      full_name: \"\",\r\n      gender: \"\",\r\n      email: \"\",\r\n      job_id: \"\",\r\n      salary_id: \"\",\r\n    });\r\n    setAddErrors({\r\n      full_name: false,\r\n      gender: false,\r\n      email: false,\r\n      job_id: false,\r\n      salary_id: false,\r\n    });\r\n  };\r\n\r\n  const handleNewChange = (e, field) => {\r\n    const value = e.target.value;\r\n    setNewEmployee((prev) => {\r\n      const newData = { ...prev, [field]: value };\r\n      if (field === \"job_id\") {\r\n        fetchPositionsForJob(value);\r\n        newData.salary_id = \"\";\r\n      }\r\n      return newData;\r\n    });\r\n    setAddErrors((prev) => ({\r\n      ...prev,\r\n      [field]: !value || value.trim() === \"\",\r\n    }));\r\n  };\r\n\r\n  const saveNewEmployee = async () => {\r\n    const newAddErrors = {\r\n      full_name: !newEmployee.full_name || newEmployee.full_name.trim() === \"\",\r\n      gender: !newEmployee.gender || newEmployee.gender.trim() === \"\",\r\n      email: !newEmployee.email || newEmployee.email.trim() === \"\",\r\n      job_id: !newEmployee.job_id || newEmployee.job_id.trim() === \"\",\r\n      salary_id: !newEmployee.salary_id || newEmployee.salary_id.trim() === \"\",\r\n    };\r\n\r\n    if (Object.values(newAddErrors).some((error) => error)) {\r\n      setAddErrors(newAddErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        name: newEmployee.full_name,\r\n        gender: newEmployee.gender,\r\n        email: newEmployee.email,\r\n        position_id: parseInt(newEmployee.salary_id),\r\n        job_id: parseInt(newEmployee.job_id),\r\n      };\r\n      const response = await axios.post(\"http://localhost:5000/users\", payload);\r\n      console.log(\"POST Response:\", response.data);\r\n      setIsAdding(false);\r\n      setNewEmployee({\r\n        full_name: \"\",\r\n        gender: \"\",\r\n        email: \"\",\r\n        job_id: \"\",\r\n        salary_id: \"\",\r\n      });\r\n      setAddErrors({\r\n        full_name: false,\r\n        gender: false,\r\n        email: false,\r\n        job_id: false,\r\n        salary_id: false,\r\n      });\r\n      await getUsers();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error adding employee:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    `${user.full_name} ${user.email} ${user.Job_Title || \"\"} ${\r\n      user.position || \"\"\r\n    } ${user.id}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n  const openDelete = (user) => {\r\n    setDeleteData(user);\r\n    setOpen(true);\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    if (!deleteData) return;\r\n    try {\r\n      await axios.delete(`http://localhost:5000/users/${deleteData.id}`);\r\n      setDeleteData(null);\r\n      setOpen(false);\r\n      await getUsers();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error deleting user:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<EmployePDF users={users} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div\r\n        className=\"column container mt-5\"\r\n        style={{ position: \"relative\", zIndex: 1 }}\r\n      >\r\n        <div className=\"is-flex is-justify-content-space-between m-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Full Name, Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div className=\"is-flex\">\r\n            {!isMobile && !isAdding && (\r\n              <button className=\"button is-success mr-1\" onClick={startAdding}>\r\n                Add Employee\r\n              </button>\r\n            )}\r\n            {isMobile ? (\r\n              <Link to=\"/home/AddEmployee\" className=\"button is-success mr-1\">\r\n                Add Employee\r\n              </Link>\r\n            ) : null}\r\n            <button onClick={handleViewPDF} className=\"button is-info ml-1\">\r\n              View PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {!isMobile ? (\r\n          <div className=\"table-container overflow-x-auto\">\r\n            <table className=\"table is-striped is-fullwidth\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Employee ID</th>\r\n                  <th>Full Name</th>\r\n                  <th>Gender</th>\r\n                  <th>Email</th>\r\n                  <th>Job Title</th>\r\n                  <th>Position</th>\r\n                  <th>Salary</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {isAdding && (\r\n                  <tr>\r\n                    <td>New</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={newEmployee.full_name}\r\n                        onChange={(e) => handleNewChange(e, \"full_name\")}\r\n                        placeholder=\"Full Name\"\r\n                        style={{\r\n                          borderColor: addErrors.full_name ? \"red\" : \"\",\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={newEmployee.gender}\r\n                          onChange={(e) => handleNewChange(e, \"gender\")}\r\n                          style={{ borderColor: addErrors.gender ? \"red\" : \"\" }}\r\n                        >\r\n                          <option value=\"\">Select Gender</option>\r\n                          <option value=\"Male\">Male</option>\r\n                          <option value=\"Female\">Female</option>\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"input\"\r\n                        value={newEmployee.email}\r\n                        onChange={(e) => handleNewChange(e, \"email\")}\r\n                        placeholder=\"Email\"\r\n                        style={{ borderColor: addErrors.email ? \"red\" : \"\" }}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={newEmployee.job_id}\r\n                          onChange={(e) => handleNewChange(e, \"job_id\")}\r\n                          style={{ borderColor: addErrors.job_id ? \"red\" : \"\" }}\r\n                        >\r\n                          <option value=\"\">Select Job Title</option>\r\n                          {departments.map((dep) => (\r\n                            <option key={dep.id} value={dep.id.toString()}>\r\n                              {dep.Job_Title}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={newEmployee.salary_id}\r\n                          onChange={(e) => handleNewChange(e, \"salary_id\")}\r\n                          disabled={\r\n                            !newEmployee.job_id ||\r\n                            loadingPositions[newEmployee.job_id] ||\r\n                            !positions[newEmployee.job_id]?.length\r\n                          }\r\n                          style={{\r\n                            borderColor: addErrors.salary_id ? \"red\" : \"\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Position</option>\r\n                          {loadingPositions[newEmployee.job_id] ? (\r\n                            <option disabled>Loading positions...</option>\r\n                          ) : positions[newEmployee.job_id]?.length ? (\r\n                            positions[newEmployee.job_id].map((pos) => (\r\n                              <option key={pos.id} value={pos.id.toString()}>\r\n                                {pos.position}\r\n                              </option>\r\n                            ))\r\n                          ) : (\r\n                            <option disabled>No positions available</option>\r\n                          )}\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={\r\n                          newEmployee.salary_id && positions[newEmployee.job_id]\r\n                            ? `₱${positions[newEmployee.job_id]\r\n                                .find(\r\n                                  (pos) =>\r\n                                    pos.id.toString() === newEmployee.salary_id\r\n                                )\r\n                                ?.salary.toLocaleString(\"en-PH\", {\r\n                                  minimumFractionDigits: 2,\r\n                                })}`\r\n                            : \"\"\r\n                        }\r\n                        disabled\r\n                      />\r\n                    </td>\r\n                    <td className=\"is-flex\">\r\n                      <button\r\n                        className=\"button is-small is-success mr-2\"\r\n                        onClick={saveNewEmployee}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                      <button\r\n                        className=\"button is-small is-danger\"\r\n                        onClick={cancelAdding}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n                {displayedUsers.length > 0 ? (\r\n                  displayedUsers.map((user) => (\r\n                    <tr key={user.id}>\r\n                      <td>{user.id}</td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            value={editedData.full_name || \"\"}\r\n                            onChange={(e) => handleEditChange(e, \"full_name\")}\r\n                            style={{\r\n                              borderColor: editErrors.full_name ? \"red\" : \"\",\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          user.full_name\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div className=\"select is-fullwidth\">\r\n                            <select\r\n                              value={editedData.gender || \"\"}\r\n                              onChange={(e) => handleEditChange(e, \"gender\")}\r\n                              style={{\r\n                                borderColor: editErrors.gender ? \"red\" : \"\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select Gender</option>\r\n                              <option value=\"Male\">Male</option>\r\n                              <option value=\"Female\">Female</option>\r\n                            </select>\r\n                          </div>\r\n                        ) : (\r\n                          user.gender\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            value={editedData.email || \"\"}\r\n                            onChange={(e) => handleEditChange(e, \"email\")}\r\n                            style={{\r\n                              borderColor: editErrors.email ? \"red\" : \"\",\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          user.email\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div className=\"select is-fullwidth\">\r\n                            <select\r\n                              value={editedData.job_id || \"\"}\r\n                              onChange={(e) => handleEditChange(e, \"job_id\")}\r\n                              style={{\r\n                                borderColor: editErrors.job_id ? \"red\" : \"\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select Job Title</option>\r\n                              {departments.map((dep) => (\r\n                                <option key={dep.id} value={dep.id.toString()}>\r\n                                  {dep.Job_Title}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                        ) : (\r\n                          user.Job_Title || \"-\"\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div className=\"select is-fullwidth\">\r\n                            <select\r\n                              value={editedData.salary_id || \"\"}\r\n                              onChange={(e) => handleEditChange(e, \"salary_id\")}\r\n                              disabled={\r\n                                !editedData.job_id ||\r\n                                loadingPositions[editedData.job_id] ||\r\n                                !positions[editedData.job_id]?.length\r\n                              }\r\n                              style={{\r\n                                borderColor: editErrors.salary_id ? \"red\" : \"\",\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select Position</option>\r\n                              {loadingPositions[editedData.job_id] ? (\r\n                                <option disabled>Loading positions...</option>\r\n                              ) : positions[editedData.job_id]?.length ? (\r\n                                positions[editedData.job_id].map((pos) => (\r\n                                  <option\r\n                                    key={pos.id}\r\n                                    value={pos.id.toString()}\r\n                                  >\r\n                                    {pos.position}\r\n                                  </option>\r\n                                ))\r\n                              ) : (\r\n                                <option disabled>No positions available</option>\r\n                              )}\r\n                            </select>\r\n                          </div>\r\n                        ) : (\r\n                          user.position || \"-\"\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            value={\r\n                              editedData.salary\r\n                                ? `₱${Number(editedData.salary).toLocaleString(\r\n                                    \"en-PH\",\r\n                                    {\r\n                                      minimumFractionDigits: 2,\r\n                                    }\r\n                                  )}`\r\n                                : \"\"\r\n                            }\r\n                            disabled\r\n                          />\r\n                        ) : (\r\n                          `₱${user.salary?.toLocaleString(\"en-PH\") || \"-\"}`\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div className=\"is-flex\">\r\n                            <button\r\n                              className=\"button is-small is-success mr-2\"\r\n                              onClick={() => handleSave(user.id)}\r\n                            >\r\n                              Save\r\n                            </button>\r\n                            <button\r\n                              className=\"button is-small is-danger\"\r\n                              onClick={() => setEditRow(null)}\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                          </div>\r\n                        ) : (\r\n                          <div>\r\n                            <button\r\n                              onClick={() => handleEdit(user)}\r\n                              className=\"button is-small is-info mr-3\"\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                            <button\r\n                              onClick={() => openDelete(user)}\r\n                              className=\"button is-small is-danger\"\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"has-text-centered\">\r\n                      No users found.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"columns is-multiline m-1\">\r\n            {displayedUsers.map((user) => (\r\n              <div key={user.id} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                      {user.full_name} - {user.gender}\r\n                    </p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p>\r\n                      <strong>Employee ID:</strong> {user.id}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Email:</strong> {user.email}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Job Title:</strong> {user.Job_Title || \"-\"}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Position:</strong> {user.position || \"-\"}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Salary:</strong> ₱\r\n                      {user.salary?.toLocaleString(\"en-PH\") || \"-\"}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/edit/${user.id}`}\r\n                      className=\"card-footer-item button is-small is-info\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                    <button\r\n                      onClick={() => openDelete(user)}\r\n                      className=\"card-footer-item button is-small is-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 p-3 has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select\r\n                value={entriesToShow}\r\n                onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n              >\r\n                <option value=\"20\">20</option>\r\n                <option value=\"50\">50</option>\r\n                <option value=\"100\">100</option>\r\n                <option value={filteredUsers.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n          </p>\r\n        </div>\r\n\r\n        <ConfirmBox\r\n          open={open}\r\n          closeDialog={() => setOpen(false)}\r\n          title={deleteData?.full_name}\r\n          empID={deleteData?.id}\r\n          deleteFunction={deleteUser}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\r\n\r\n// const UserList = () => {\r\n//   const [users, setUser] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [entriesToShow, setEntriesToShow] = useState(10);\r\n\r\n//   useEffect(() => {\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:5000/users\");\r\n//       setUser(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/users/${id}`);\r\n//       getUsers();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Filter users based on search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n//       .toLowerCase()\r\n//       .includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Limit displayed entries based on selection\r\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       {/* Search Bar and Action Buttons */}\r\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input\"\r\n//           style={{ maxWidth: \"300px\" }}\r\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         <div>\r\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\r\n//             Add Employee\r\n//           </Link>\r\n\r\n//           <PDFDownloadLink\r\n//             document={<EmployePDF users={users} />}\r\n//             fileName=\"Employee_Report.pdf\"\r\n//             className=\"button is-info mr-3\"\r\n//           >\r\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\r\n//           </PDFDownloadLink>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Employee Table */}\r\n//       <table className=\"table is-striped is-fullwidth\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Employee ID</th>\r\n//             <th>Full Name</th>\r\n//             <th>Email</th>\r\n//             <th>Gender</th>\r\n//             <th>Job Title</th>\r\n//             <th>Position / Level</th>\r\n//             <th>Salary</th>\r\n//             <th>Annual Salary</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {displayedUsers.length > 0 ? (\r\n//             displayedUsers.map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.full_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//                 <td>{user.Job_Title}</td>\r\n//                 <td>{user.position}</td>\r\n//                 <td>\r\n//                   {user.salary\r\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n//                         minimumFractionDigits: 2,\r\n//                       })}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   {user.anual_salary\r\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\r\n//                         \"en-PH\",\r\n//                         {\r\n//                           minimumFractionDigits: 2,\r\n//                         }\r\n//                       )}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   <Link\r\n//                     to={`edit/${user.id}`}\r\n//                     className=\"button is-small is-info mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button\r\n//                     onClick={() => deleteUser(user.id)}\r\n//                     className=\"button is-small is-danger\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"9\" className=\"has-text-centered\">\r\n//                 No users found.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Footer with Entry Filter */}\r\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\r\n//         <div>\r\n//           <label className=\"mr-2\">Show entries:</label>\r\n//           <div className=\"select\">\r\n//             <select\r\n//               value={entriesToShow}\r\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n//             >\r\n//               <option value=\"5\">5</option>\r\n//               <option value=\"10\">10</option>\r\n//               <option value=\"20\">20</option>\r\n//               <option value={filteredUsers.length}>All</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <p>\r\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"]},"metadata":{},"sourceType":"module"}