{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\JobTitle\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AddDeptModal from \"../UI/Modal/AddDeptModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DepartList() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingJobId, setEditingJobId] = useState(null);\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\n  const [isModalActive, setIsModalActive] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setJobs(response.data);\n    } catch (error) {\n      console.error(\"Error fetching job titles:\", error);\n    }\n  };\n\n  const handleModalClose = () => {\n    setIsModalActive(false);\n    fetchJobs(); // Refresh data when modal closes\n  };\n\n  const filteredJobs = jobs.filter(job => job.Job_Title.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\n\n  const startEditing = job => {\n    setEditingJobId(job.id);\n    setEditedJobTitle(job.Job_Title);\n  };\n\n  const cancelEditing = () => {\n    setEditingJobId(null);\n    setEditedJobTitle(\"\");\n  };\n\n  const saveJobTitle = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/job/${id}`, {\n        job_title: editedJobTitle\n      });\n      setJobs(jobs.map(job => job.id === id ? { ...job,\n        Job_Title: editedJobTitle\n      } : job));\n      setEditingJobId(null);\n      alert(\"Job title updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating job title:\", error);\n      alert(\"Failed to update job title\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search Job Title...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), isMobile ? /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home/AddJob\",\n          className: \"button is-success ml-3\",\n          children: \"Add Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-success ml-3\",\n            onClick: () => setIsModalActive(true),\n            children: \"Add Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddDeptModal, {\n            isActive: isModalActive,\n            onClose: handleModalClose // Pass the custom close handler\n            ,\n            onDepartmentAdded: fetchJobs // Refresh when a new job is added\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: editedJobTitle,\n                onChange: e => setEditedJobTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this) : job.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-success mr-2\",\n                  onClick: () => saveJobTitle(job.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-danger\",\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-info mr-2\",\n                onClick: () => startEditing(job),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: job.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subtitle is-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Job ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), \" \", job.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/editJobTitle/${job.id}`,\n                className: \"card-footer-item button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-2\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entriesToShow,\n              onChange: e => setEntriesToShow(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: filteredJobs.length,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", displayedJobs.length, \" of \", filteredJobs.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartList, \"tMl2kP4j0TuNT9E4Hv7XUgBIBf0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DepartList;\nexport default DepartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/JobTitle/JobList.js"],"names":["React","useState","useEffect","axios","Link","useNavigate","AddDeptModal","DepartList","jobs","setJobs","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingJobId","setEditingJobId","editedJobTitle","setEditedJobTitle","isModalActive","setIsModalActive","navigate","fetchJobs","handleResize","addEventListener","removeEventListener","response","get","data","error","console","handleModalClose","filteredJobs","filter","job","Job_Title","toLowerCase","includes","displayedJobs","slice","startEditing","id","cancelEditing","saveJobTitle","patch","job_title","map","alert","position","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","e","target","value","Number","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACe,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAxC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMuB,QAAQ,GAAGnB,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,SAAS;;AACT,UAAMC,YAAY,GAAG,MAAMX,WAAW,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAtC;;AACAD,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMV,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMD,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAU,2BAAV,CAAvB;AACArB,MAAAA,OAAO,CAACoB,QAAQ,CAACE,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACD;AACF,GAPD;;AASA,QAAME,gBAAgB,GAAG,MAAM;AAC7BX,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,IAAAA,SAAS,GAFoB,CAEhB;AACd,GAHD;;AAKA,QAAMU,YAAY,GAAG3B,IAAI,CAAC4B,MAAL,CAAaC,GAAD,IAC/BA,GAAG,CAACC,SAAJ,CAAcC,WAAd,GAA4BC,QAA5B,CAAqC9B,UAAU,CAAC6B,WAAX,EAArC,CADmB,CAArB;AAGA,QAAME,aAAa,GAAGN,YAAY,CAACO,KAAb,CAAmB,CAAnB,EAAsB9B,aAAtB,CAAtB;;AAEA,QAAM+B,YAAY,GAAIN,GAAD,IAAS;AAC5BlB,IAAAA,eAAe,CAACkB,GAAG,CAACO,EAAL,CAAf;AACAvB,IAAAA,iBAAiB,CAACgB,GAAG,CAACC,SAAL,CAAjB;AACD,GAHD;;AAKA,QAAMO,aAAa,GAAG,MAAM;AAC1B1B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAHD;;AAKA,QAAMyB,YAAY,GAAG,MAAOF,EAAP,IAAc;AACjC,QAAI;AACF,YAAMzC,KAAK,CAAC4C,KAAN,CAAa,6BAA4BH,EAAG,EAA5C,EAA+C;AACnDI,QAAAA,SAAS,EAAE5B;AADwC,OAA/C,CAAN;AAGAX,MAAAA,OAAO,CACLD,IAAI,CAACyC,GAAL,CAAUZ,GAAD,IACPA,GAAG,CAACO,EAAJ,KAAWA,EAAX,GAAgB,EAAE,GAAGP,GAAL;AAAUC,QAAAA,SAAS,EAAElB;AAArB,OAAhB,GAAwDiB,GAD1D,CADK,CAAP;AAKAlB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA+B,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACD,KAXD,CAWE,OAAOlB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACAkB,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,GAhBD;;AAkBA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,QAAQ,EAAE,OADL;AAELC,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,MAAM,EAAE,OALH;AAMLC,QAAAA,eAAe,EAAE,yBANZ;AAOLC,QAAAA,cAAc,EAAE,OAPX;AAQLC,QAAAA,kBAAkB,EAAE,QARf;AASLC,QAAAA,gBAAgB,EAAE,WATb;AAULC,QAAAA,oBAAoB,EAAE,OAVjB;AAWLC,QAAAA,MAAM,EAAE,CAAC;AAXJ;AADT;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AACE,MAAA,KAAK,EAAE;AACLV,QAAAA,QAAQ,EAAE,OADL;AAELC,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,MAAM,EAAE,OALH;AAMLO,QAAAA,UAAU,EAAE,oBANP;AAOLD,QAAAA,MAAM,EAAE,CAAC;AAPJ;AADT;AAAA;AAAA;AAAA;AAAA,YAhBF,eA4BE;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,KAAK,EAAE;AAAEV,QAAAA,QAAQ,EAAE,UAAZ;AAAwBU,QAAAA,MAAM,EAAE;AAAhC,OAFT;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAC,iEAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,OAFZ;AAGE,UAAA,KAAK,EAAE;AAAEE,YAAAA,QAAQ,EAAE;AAAZ,WAHT;AAIE,UAAA,WAAW,EAAC,qBAJd;AAKE,UAAA,KAAK,EAAErD,UALT;AAME,UAAA,QAAQ,EAAGsD,CAAD,IAAOrD,aAAa,CAACqD,CAAC,CAACC,MAAF,CAASC,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA,gBADF,EASGpD,QAAQ,gBACP,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,gBAKP;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,wBADZ;AAEE,YAAA,OAAO,EAAE,MAAMS,gBAAgB,CAAC,IAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,YAAD;AACE,YAAA,QAAQ,EAAED,aADZ;AAEE,YAAA,OAAO,EAAEY,gBAFX,CAE6B;AAF7B;AAGE,YAAA,iBAAiB,EAAET,SAHrB,CAGgC;;AAHhC;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,wBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAkCG,CAACX,QAAD,gBACC;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,oBACG2B,aAAa,CAACQ,GAAd,CAAmBZ,GAAD,iBACjB;AAAA,oCACE;AAAA,wBAAKA,GAAG,CAACO;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBACG1B,YAAY,KAAKmB,GAAG,CAACO,EAArB,gBACC;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,OAFZ;AAGE,gBAAA,KAAK,EAAExB,cAHT;AAIE,gBAAA,QAAQ,EAAG4C,CAAD,IAAO3C,iBAAiB,CAAC2C,CAAC,CAACC,MAAF,CAASC,KAAV;AAJpC;AAAA;AAAA;AAAA;AAAA,sBADD,GAQC7B,GAAG,CAACC;AATR;AAAA;AAAA;AAAA;AAAA,oBAFF,eAcE;AAAA,wBACGpB,YAAY,KAAKmB,GAAG,CAACO,EAArB,gBACC;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,iCADZ;AAEE,kBAAA,OAAO,EAAE,MAAME,YAAY,CAACT,GAAG,CAACO,EAAL,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE;AACE,kBAAA,SAAS,EAAC,2BADZ;AAEE,kBAAA,OAAO,EAAEC,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA,8BADD,gBAgBC;AACE,gBAAA,SAAS,EAAC,8BADZ;AAEE,gBAAA,OAAO,EAAE,MAAMF,YAAY,CAACN,GAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA,aAASA,GAAG,CAACO,EAAb;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAuDC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGH,aAAa,CAACQ,GAAd,CAAmBZ,GAAD,iBACjB;AAAkB,UAAA,SAAS,EAAC,cAA5B;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,mBAAb;AAAA,0BAAkCA,GAAG,CAACC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,eAAb;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC4BD,GAAG,CAACO,EADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eASE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAG,sBAAqBP,GAAG,CAACO,EAAG,EADnC;AAEE,gBAAA,SAAS,EAAC,0CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUP,GAAG,CAACO,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAzFJ,eAmHE;AAAK,QAAA,SAAS,EAAC,sGAAf;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE;AACE,cAAA,KAAK,EAAEhC,aADT;AAEE,cAAA,QAAQ,EAAGoD,CAAD,IAAOnD,gBAAgB,CAACsD,MAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CAFnC;AAAA,sCAIE;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAQ,gBAAA,KAAK,EAAE/B,YAAY,CAACiC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAA,iCACW3B,aAAa,CAAC2B,MADzB,UACqCjC,YAAY,CAACiC,MADlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnHF;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsKD;;GAtOQ7D,U;UAQUF,W;;;KARVE,U;AAwOT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AddDeptModal from \"../UI/Modal/AddDeptModal\";\r\n\r\nfunction DepartList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingJobId, setEditingJobId] = useState(null);\r\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\r\n  const [isModalActive, setIsModalActive] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching job titles:\", error);\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalActive(false);\r\n    fetchJobs(); // Refresh data when modal closes\r\n  };\r\n\r\n  const filteredJobs = jobs.filter((job) =>\r\n    job.Job_Title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\r\n\r\n  const startEditing = (job) => {\r\n    setEditingJobId(job.id);\r\n    setEditedJobTitle(job.Job_Title);\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingJobId(null);\r\n    setEditedJobTitle(\"\");\r\n  };\r\n\r\n  const saveJobTitle = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/job/${id}`, {\r\n        job_title: editedJobTitle,\r\n      });\r\n      setJobs(\r\n        jobs.map((job) =>\r\n          job.id === id ? { ...job, Job_Title: editedJobTitle } : job\r\n        )\r\n      );\r\n      setEditingJobId(null);\r\n      alert(\"Job title updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating job title:\", error);\r\n      alert(\"Failed to update job title\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div\r\n        className=\"column container mt-5\"\r\n        style={{ position: \"relative\", zIndex: 1 }}\r\n      >\r\n        <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search Job Title...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          {isMobile ? (\r\n            <Link to=\"/home/AddJob\" className=\"button is-success ml-3\">\r\n              Add Job Title\r\n            </Link>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className=\"button is-success ml-3\"\r\n                onClick={() => setIsModalActive(true)}\r\n              >\r\n                Add Job Title\r\n              </button>\r\n              <AddDeptModal\r\n                isActive={isModalActive}\r\n                onClose={handleModalClose} // Pass the custom close handler\r\n                onDepartmentAdded={fetchJobs} // Refresh when a new job is added\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {!isMobile ? (\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Job ID</th>\r\n                <th>Job Title</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedJobs.map((job) => (\r\n                <tr key={job.id}>\r\n                  <td>{job.id}</td>\r\n                  <td>\r\n                    {editingJobId === job.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={editedJobTitle}\r\n                        onChange={(e) => setEditedJobTitle(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      job.Job_Title\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingJobId === job.id ? (\r\n                      <>\r\n                        <button\r\n                          className=\"button is-small is-success mr-2\"\r\n                          onClick={() => saveJobTitle(job.id)}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                        <button\r\n                          className=\"button is-small is-danger\"\r\n                          onClick={cancelEditing}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button\r\n                        className=\"button is-small is-info mr-2\"\r\n                        onClick={() => startEditing(job)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"columns is-multiline\">\r\n            {displayedJobs.map((job) => (\r\n              <div key={job.id} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">{job.Job_Title}</p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p className=\"subtitle is-6\">\r\n                      <strong>Job ID:</strong> {job.id}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/editJobTitle/${job.id}`}\r\n                      className=\"card-footer-item button is-small is-info\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select\r\n                value={entriesToShow}\r\n                onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n              >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value={filteredJobs.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Showing {displayedJobs.length} of {filteredJobs.length} entries\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepartList;"]},"metadata":{},"sourceType":"module"}