{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\UI\\\\Modal\\\\AddDeptModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AddDeptModal from \"../UI/Modal/AddDeptModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobTitleList() {\n  _s();\n\n  const [jobTitles, setJobTitles] = useState([]);\n  const [isModalOpen, setModalOpen] = useState(false); // Fetch job titles\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\"); // Fetch the latest data\n\n      setJobTitles(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(); // Fetch data when component loads\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button is-primary\",\n      onClick: () => setModalOpen(true),\n      children: \"Add Job Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddDeptModal, {\n      isActive: isModalOpen,\n      onClose: () => setModalOpen(false),\n      getUsers: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: jobTitles.map((job, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.Department_Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobTitleList, \"7oKqKyQ5pHINmttjcV7BaFyTHuQ=\");\n\n_c = JobTitleList;\nexport default JobTitleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobTitleList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/UI/Modal/AddDeptModal.js"],"names":["React","useState","useEffect","axios","AddDeptModal","JobTitleList","jobTitles","setJobTitles","isModalOpen","setModalOpen","fetchData","response","get","data","error","console","map","job","index","id","Department_Name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,YAAd,IAA8BR,QAAQ,CAAC,KAAD,CAA5C,CAFsB,CAItB;;AACA,QAAMS,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,2BAAV,CAAvB,CADE,CAC6D;;AAC/DL,MAAAA,YAAY,CAACI,QAAQ,CAACE,IAAV,CAAZ;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,GAPD;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,GADK,CACD;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,IAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,WAAxB;AAAqC,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAAhE;AAAyE,MAAA,QAAQ,EAAEC;AAAnF;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAO,MAAA,SAAS,EAAC,oBAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACGJ,SAAS,CAACU,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,kBACb;AAAA,kCACE;AAAA,sBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASF,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA1CQb,Y;;KAAAA,Y;AA4CT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddDeptModal from \"../UI/Modal/AddDeptModal\";\r\n\r\nfunction JobTitleList() {\r\n  const [jobTitles, setJobTitles] = useState([]);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  // Fetch job titles\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\"); // Fetch the latest data\r\n      setJobTitles(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Fetch data when component loads\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"button is-primary\" onClick={() => setModalOpen(true)}>Add Job Title</button>\r\n\r\n      <AddDeptModal isActive={isModalOpen} onClose={() => setModalOpen(false)} getUsers={fetchData} />\r\n\r\n      <table className=\"table is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Job Title</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobTitles.map((job, index) => (\r\n            <tr key={index}>\r\n              <td>{job.id}</td>\r\n              <td>{job.Department_Name}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobTitleList;\r\n"]},"metadata":{},"sourceType":"module"}