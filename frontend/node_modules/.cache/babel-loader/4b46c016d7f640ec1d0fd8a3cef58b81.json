{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\EditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUser = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [positions, setPositions] = useState([]);\n  const [position_id, setPositionId] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [departments, setDepartments] = useState([]);\n  const [dep_id, setDepId] = useState(\"\"); // Update salary when position_id changes\n\n  useEffect(() => {\n    const selectedPosition = positions.find(pos => String(pos.id) === String(position_id));\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\n  }, [position_id, positions]); // Fetch departments on mount\n\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/job\");\n        setDepartments(response.data);\n      } catch (error) {\n        console.error(\"Error fetching departments:\", error);\n      }\n    };\n\n    fetchDepartments();\n  }, []); // Fetch user data and positions on mount\n\n  useEffect(() => {\n    const getUserById = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/users/${id}`);\n        console.log(\"Full API Response:\", response.data); // Set user data\n\n        setName(response.data.full_name || response.data.name || \"\");\n        setEmail(response.data.email || \"\");\n        setGender(response.data.gender || \"\");\n        const jobId = response.data.job_id ? String(response.data.job_id) : \"\";\n        setDepId(jobId);\n        const posId = response.data.salary_id ? String(response.data.salary_id) : response.data.position_id ? String(response.data.position_id) : \"\";\n        setPositionId(posId); // Fetch positions for the user's job_id if present\n\n        if (jobId) {\n          const posResponse = await axios.get(`http://localhost:5000/salary/getPosition/${jobId}`);\n          setPositions(posResponse.data); // Verify position_id matches one of the fetched positions\n\n          const isValidPosition = posResponse.data.some(pos => String(pos.id) === String(posId));\n\n          if (!isValidPosition) {\n            setPositionId(\"\"); // Reset if the position_id isn't valid for this job\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching user or positions:\", error);\n      }\n    };\n\n    getUserById();\n  }, [id]); // Fetch positions when dep_id changes\n\n  useEffect(() => {\n    if (!dep_id) {\n      setPositions([]);\n      setPositionId(\"\");\n      setSalary(\"\");\n      return;\n    }\n\n    const fetchPositions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\n        const fetchedPositions = response.data;\n        setPositions(fetchedPositions); // Check if current position_id is valid for the new job\n\n        const isCurrentPositionValid = fetchedPositions.some(pos => String(pos.id) === String(position_id));\n\n        if (!isCurrentPositionValid) {\n          setPositionId(\"\");\n          setSalary(\"\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching positions:\", error);\n        setPositions([]);\n        setPositionId(\"\");\n        setSalary(\"\");\n      }\n    };\n\n    if (dep_id) {\n      fetchPositions();\n    }\n  }, [dep_id]);\n\n  const updateUser = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.patch(`http://localhost:5000/users/${id}`, {\n        name,\n        email,\n        gender,\n        position_id: position_id ? parseInt(position_id) : null,\n        job_id: dep_id ? parseInt(dep_id) : null\n      });\n      navigate(\"/home/EmployeeList\");\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column is-half container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updateUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"input\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gender,\n                onChange: e => setGender(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: dep_id,\n                onChange: e => setDepId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Job Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.id,\n                  children: dep.Job_Title\n                }, dep.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: position_id,\n                onChange: e => setPositionId(e.target.value),\n                disabled: !dep_id || positions.length === 0,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pos.id,\n                  children: pos.position\n                }, pos.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: salary ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\n                minimumFractionDigits: 2\n              })}` : \"\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-success\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUser, \"uupU8bv6GlGWz0lvbES3bY5EaqE=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/EditUser.js"],"names":["React","useState","useEffect","axios","useNavigate","useParams","EditUser","name","setName","email","setEmail","gender","setGender","positions","setPositions","position_id","setPositionId","salary","setSalary","navigate","id","departments","setDepartments","dep_id","setDepId","selectedPosition","find","pos","String","fetchDepartments","response","get","data","error","console","getUserById","log","full_name","jobId","job_id","posId","salary_id","posResponse","isValidPosition","some","fetchPositions","fetchedPositions","isCurrentPositionValid","updateUser","e","preventDefault","patch","parseInt","target","value","map","dep","Job_Title","length","position","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [positions, setPositions] = useState([]);\r\n  const [position_id, setPositionId] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [departments, setDepartments] = useState([]);\r\n  const [dep_id, setDepId] = useState(\"\");\r\n\r\n  // Update salary when position_id changes\r\n  useEffect(() => {\r\n    const selectedPosition = positions.find(\r\n      (pos) => String(pos.id) === String(position_id)\r\n    );\r\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\r\n  }, [position_id, positions]);\r\n\r\n  // Fetch departments on mount\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/job\");\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching departments:\", error);\r\n      }\r\n    };\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  // Fetch user data and positions on mount\r\n  useEffect(() => {\r\n    const getUserById = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/users/${id}`);\r\n        console.log(\"Full API Response:\", response.data);\r\n\r\n        // Set user data\r\n        setName(response.data.full_name || response.data.name || \"\");\r\n        setEmail(response.data.email || \"\");\r\n        setGender(response.data.gender || \"\");\r\n        const jobId = response.data.job_id ? String(response.data.job_id) : \"\";\r\n        setDepId(jobId);\r\n        const posId = response.data.salary_id\r\n          ? String(response.data.salary_id)\r\n          : response.data.position_id\r\n          ? String(response.data.position_id)\r\n          : \"\";\r\n        setPositionId(posId);\r\n\r\n        // Fetch positions for the user's job_id if present\r\n        if (jobId) {\r\n          const posResponse = await axios.get(\r\n            `http://localhost:5000/salary/getPosition/${jobId}`\r\n          );\r\n          setPositions(posResponse.data);\r\n\r\n          // Verify position_id matches one of the fetched positions\r\n          const isValidPosition = posResponse.data.some(\r\n            (pos) => String(pos.id) === String(posId)\r\n          );\r\n          if (!isValidPosition) {\r\n            setPositionId(\"\"); // Reset if the position_id isn't valid for this job\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user or positions:\", error);\r\n      }\r\n    };\r\n\r\n    getUserById();\r\n  }, [id]);\r\n\r\n  // Fetch positions when dep_id changes\r\n  useEffect(() => {\r\n    if (!dep_id) {\r\n      setPositions([]);\r\n      setPositionId(\"\");\r\n      setSalary(\"\");\r\n      return;\r\n    }\r\n\r\n    const fetchPositions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/salary/getPosition/${dep_id}`\r\n        );\r\n        const fetchedPositions = response.data;\r\n        setPositions(fetchedPositions);\r\n\r\n        // Check if current position_id is valid for the new job\r\n        const isCurrentPositionValid = fetchedPositions.some(\r\n          (pos) => String(pos.id) === String(position_id)\r\n        );\r\n        if (!isCurrentPositionValid) {\r\n          setPositionId(\"\");\r\n          setSalary(\"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching positions:\", error);\r\n        setPositions([]);\r\n        setPositionId(\"\");\r\n        setSalary(\"\");\r\n      }\r\n    };\r\n\r\n    if (dep_id) {\r\n      fetchPositions();\r\n    }\r\n  }, [dep_id]);\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, {\r\n        name,\r\n        email,\r\n        gender,\r\n        position_id: position_id ? parseInt(position_id) : null,\r\n        job_id: dep_id ? parseInt(dep_id) : null,\r\n      });\r\n      navigate(\"/home/EmployeeList\");\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"column is-half container mt-5\">\r\n        <form onSubmit={updateUser}>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Name</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Email</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"input\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Gender</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={gender}\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Job Title</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={dep_id}\r\n                  onChange={(e) => setDepId(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Job Title</option>\r\n                  {departments.map((dep) => (\r\n                    <option key={dep.id} value={dep.id}>\r\n                      {dep.Job_Title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Position</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={position_id}\r\n                  onChange={(e) => setPositionId(e.target.value)}\r\n                  disabled={!dep_id || positions.length === 0}\r\n                >\r\n                  <option value=\"\">Select a position</option>\r\n                  {positions.map((pos) => (\r\n                    <option key={pos.id} value={pos.id}>\r\n                      {pos.position}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Salary</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={\r\n                  salary\r\n                    ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}`\r\n                    : \"\"\r\n                }\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <button type=\"submit\" className=\"button is-success\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}