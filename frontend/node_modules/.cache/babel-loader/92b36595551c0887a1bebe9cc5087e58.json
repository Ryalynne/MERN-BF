{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [isModalActive, setIsModalActive] = useState(false);\n  const [editRow, setEditRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  useEffect(() => {\n    getUsers();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const filteredUsers = users.filter(user => `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\n  const jobTitles = [\"Manager\", \"Developer\", \"Designer\", \"HR\", \"Sales\"];\n  const positions = [\"Junior\", \"Mid\", \"Senior\", \"Lead\"];\n\n  const handleEdit = user => {\n    setEditRow(user.id);\n    setEditedData({ ...user\n    });\n  };\n\n  const handleInputChange = (e, field) => {\n    setEditedData({ ...editedData,\n      [field]: e.target.value\n    });\n  };\n\n  const handleSave = async id => {\n    try {\n      await axios.put(`http://localhost:5000/users/${id}`, editedData);\n      setEditRow(null);\n      getUsers();\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayedUsers.map(user => {\n          var _user$salary;\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.full_name,\n                onChange: e => handleInputChange(e, \"full_name\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this) : user.full_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedData.email,\n                onChange: e => handleInputChange(e, \"email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this) : user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedData.Job_Title,\n                onChange: e => handleInputChange(e, \"Job_Title\"),\n                children: jobTitles.map(title => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: title,\n                  children: title\n                }, title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this) : user.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedData.position,\n                onChange: e => handleInputChange(e, \"position\"),\n                children: positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pos,\n                  children: pos\n                }, pos, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this) : user.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editedData.salary,\n                onChange: e => handleInputChange(e, \"salary\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this) : `â‚±${((_user$salary = user.salary) === null || _user$salary === void 0 ? void 0 : _user$salary.toLocaleString(\"en-PH\")) || \"-\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editRow === user.id ? handleSave(user.id) : handleEdit(user),\n                className: \"button is-small is-info\",\n                children: editRow === user.id ? \"Save\" : \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"m7K66QwWGpQ6X+ZTmObozeuquo8=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","AddEmployeeModal","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","isModalActive","setIsModalActive","editRow","setEditRow","editedData","setEditedData","getUsers","handleResize","addEventListener","removeEventListener","response","get","data","error","console","filteredUsers","filter","user","full_name","email","Job_Title","position","id","toLowerCase","includes","displayedUsers","slice","jobTitles","positions","handleEdit","handleInputChange","e","field","target","value","handleSave","put","map","title","pos","salary","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [isModalActive, setIsModalActive] = useState(false);\r\n  const [editRow, setEditRow] = useState(null);\r\n  const [editedData, setEditedData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n  const jobTitles = [\"Manager\", \"Developer\", \"Designer\", \"HR\", \"Sales\"];\r\n  const positions = [\"Junior\", \"Mid\", \"Senior\", \"Lead\"];\r\n\r\n  const handleEdit = (user) => {\r\n    setEditRow(user.id);\r\n    setEditedData({ ...user });\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    setEditedData({ ...editedData, [field]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/users/${id}`, editedData);\r\n      setEditRow(null);\r\n      getUsers();\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container overflow-x-auto\">\r\n      <table className=\"table is-striped is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>Employee ID</th>\r\n            <th>Full Name</th>\r\n            <th>Email</th>\r\n            <th>Job Title</th>\r\n            <th>Position</th>\r\n            <th>Salary</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {displayedUsers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>\r\n                {editRow === user.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editedData.full_name}\r\n                    onChange={(e) => handleInputChange(e, \"full_name\")}\r\n                  />\r\n                ) : (\r\n                  user.full_name\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editRow === user.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editedData.email}\r\n                    onChange={(e) => handleInputChange(e, \"email\")}\r\n                  />\r\n                ) : (\r\n                  user.email\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editRow === user.id ? (\r\n                  <select\r\n                    value={editedData.Job_Title}\r\n                    onChange={(e) => handleInputChange(e, \"Job_Title\")}\r\n                  >\r\n                    {jobTitles.map((title) => (\r\n                      <option key={title} value={title}>\r\n                        {title}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                ) : (\r\n                  user.Job_Title\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editRow === user.id ? (\r\n                  <select\r\n                    value={editedData.position}\r\n                    onChange={(e) => handleInputChange(e, \"position\")}\r\n                  >\r\n                    {positions.map((pos) => (\r\n                      <option key={pos} value={pos}>\r\n                        {pos}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                ) : (\r\n                  user.position\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editRow === user.id ? (\r\n                  <input\r\n                    type=\"number\"\r\n                    value={editedData.salary}\r\n                    onChange={(e) => handleInputChange(e, \"salary\")}\r\n                  />\r\n                ) : (\r\n                  `â‚±${user.salary?.toLocaleString(\"en-PH\") || \"-\"}`\r\n                )}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() => (editRow === user.id ? handleSave(user.id) : handleEdit(user))}\r\n                  className=\"button is-small is-info\"\r\n                >\r\n                  {editRow === user.id ? \"Save\" : \"Edit\"}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}