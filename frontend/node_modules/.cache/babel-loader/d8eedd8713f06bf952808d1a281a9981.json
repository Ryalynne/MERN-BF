{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = _ref => {\n  _s();\n\n  let {\n    displayedUsers,\n    jobTitles,\n    positions,\n    onSave\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingRow, setEditingRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleEdit = user => {\n    setEditingRow(user.id);\n    setEditedData({\n      jobTitle: user.Job_Title || \"\",\n      position: user.position || \"\",\n      salary: user.salary || \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedData(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSave = id => {\n    onSave(id, editedData);\n    setEditingRow(null);\n  };\n\n  const openDelete = user => {\n    setDeleteData(user);\n    setOpen(true);\n  };\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(EmployePDF, {\n      users: displayedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this)).toBlob();\n    window.open(URL.createObjectURL(blob));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"is-flex is-justify-content-space-between m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        style: {\n          maxWidth: \"300px\"\n        },\n        placeholder: \"Search...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home/AddEmployee\",\n          className: \"button is-success mr-1\",\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleViewPDF,\n          className: \"button is-info ml-1\",\n          children: \"View PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedUsers.length > 0 ? displayedUsers.map(user => {\n            var _user$salary;\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.full_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingRow === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"jobTitle\",\n                  value: editedData.jobTitle,\n                  onChange: handleChange,\n                  className: \"input\",\n                  children: jobTitles.map(title => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: title,\n                    children: title\n                  }, title, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 25\n                }, this) : user.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingRow === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"position\",\n                  value: editedData.position,\n                  onChange: handleChange,\n                  className: \"input\",\n                  children: positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pos,\n                    children: pos\n                  }, pos, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this) : user.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"salary\",\n                  value: editedData.salary,\n                  onChange: handleChange,\n                  className: \"input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 25\n                }, this) : `â‚±${((_user$salary = user.salary) === null || _user$salary === void 0 ? void 0 : _user$salary.toLocaleString(\"en-PH\")) || \"-\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [editingRow === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSave(user.id),\n                  className: \"button is-small is-success mr-2\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(user),\n                  className: \"button is-small is-warning mr-2\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openDelete(user),\n                  className: \"button is-small is-danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              className: \"has-text-centered\",\n              children: \"No users found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ConfirmBox, {\n      open: open,\n      closeDialog: () => setOpen(false),\n      title: deleteData === null || deleteData === void 0 ? void 0 : deleteData.full_name,\n      empID: deleteData === null || deleteData === void 0 ? void 0 : deleteData.id,\n      deleteFunction: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"VDhNKvgml1VGMY14weyX7gCdWDQ=\");\n\n_c = UserList;\nexport default UserList; // import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\n// import EmployePDF from \"../Printing/EmployeePDF\"; // âœ… Import the PDF component\n// const UserList = () => {\n//   const [users, setUser] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [entriesToShow, setEntriesToShow] = useState(10);\n//   useEffect(() => {\n//     getUsers();\n//   }, []);\n//   const getUsers = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/users\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching users:\", error);\n//     }\n//   };\n//   const deleteUser = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/users/${id}`);\n//       getUsers();\n//     } catch (error) {\n//       console.error(\"Error deleting user:\", error);\n//     }\n//   };\n//   // Filter users based on search term\n//   const filteredUsers = users.filter((user) =>\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\n//       .toLowerCase()\n//       .includes(searchTerm.toLowerCase())\n//   );\n//   // Limit displayed entries based on selection\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\n//   return (\n//     <div className=\"container mt-5\">\n//       {/* Search Bar and Action Buttons */}\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"input\"\n//           style={{ maxWidth: \"300px\" }}\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <div>\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\n//             Add Employee\n//           </Link>\n//           <PDFDownloadLink\n//             document={<EmployePDF users={users} />}\n//             fileName=\"Employee_Report.pdf\"\n//             className=\"button is-info mr-3\"\n//           >\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\n//           </PDFDownloadLink>\n//         </div>\n//       </div>\n//       {/* Employee Table */}\n//       <table className=\"table is-striped is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>Employee ID</th>\n//             <th>Full Name</th>\n//             <th>Email</th>\n//             <th>Gender</th>\n//             <th>Job Title</th>\n//             <th>Position / Level</th>\n//             <th>Salary</th>\n//             <th>Annual Salary</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayedUsers.length > 0 ? (\n//             displayedUsers.map((user) => (\n//               <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.full_name}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.gender}</td>\n//                 <td>{user.Job_Title}</td>\n//                 <td>{user.position}</td>\n//                 <td>\n//                   {user.salary\n//                     ? `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n//                         minimumFractionDigits: 2,\n//                       })}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   {user.anual_salary\n//                     ? `â‚±${parseFloat(user.anual_salary).toLocaleString(\n//                         \"en-PH\",\n//                         {\n//                           minimumFractionDigits: 2,\n//                         }\n//                       )}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   <Link\n//                     to={`edit/${user.id}`}\n//                     className=\"button is-small is-info mr-2\"\n//                   >\n//                     Edit\n//                   </Link>\n//                   <button\n//                     onClick={() => deleteUser(user.id)}\n//                     className=\"button is-small is-danger\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"9\" className=\"has-text-centered\">\n//                 No users found.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {/* Footer with Entry Filter */}\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\n//         <div>\n//           <label className=\"mr-2\">Show entries:</label>\n//           <div className=\"select\">\n//             <select\n//               value={entriesToShow}\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\n//             >\n//               <option value=\"5\">5</option>\n//               <option value=\"10\">10</option>\n//               <option value=\"20\">20</option>\n//               <option value={filteredUsers.length}>All</option>\n//             </select>\n//           </div>\n//         </div>\n//         <p>\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","UserList","displayedUsers","jobTitles","positions","onSave","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","editingRow","setEditingRow","editedData","setEditedData","handleResize","addEventListener","removeEventListener","handleEdit","user","id","jobTitle","Job_Title","position","salary","handleChange","e","name","value","target","prev","handleSave","openDelete","handleViewPDF","blob","toBlob","URL","createObjectURL","maxWidth","length","map","full_name","email","title","pos","toLocaleString"],"mappings":"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AA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjDF;AAAA,eAASA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,oBADiB;AAAA,WAAnB,CADD,gBA6EC;AAAA,mCACE;AAAI,cAAA,OAAO,EAAC,GAAZ;AAAgB,cAAA,SAAS,EAAC,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA9EJ;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAmGG,IAvHN,eAyHE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEf,IADR;AAEE,MAAA,WAAW,EAAE,MAAMC,OAAO,CAAC,KAAD,CAF5B;AAGE,MAAA,KAAK,EAAEH,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEsC,SAHrB;AAIE,MAAA,KAAK,EAAEtC,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEiB,EAJrB;AAKE,MAAA,cAAc,EAAE,MAAMd,OAAO,CAAC,KAAD;AAL/B;AAAA;AAAA;AAAA;AAAA,YAzHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmID,CA/KD;;GAAMZ,Q;;KAAAA,Q;AAiLN,eAAeA,QAAf,C,CACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\n\r\nconst UserList = ({ displayedUsers, jobTitles, positions, onSave }) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingRow, setEditingRow] = useState(null);\r\n  const [editedData, setEditedData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const handleEdit = (user) => {\r\n    setEditingRow(user.id);\r\n    setEditedData({\r\n      jobTitle: user.Job_Title || \"\",\r\n      position: user.position || \"\",\r\n      salary: user.salary || \"\",\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = (id) => {\r\n    onSave(id, editedData);\r\n    setEditingRow(null);\r\n  };\r\n\r\n  const openDelete = (user) => {\r\n    setDeleteData(user);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<EmployePDF users={displayedUsers} />).toBlob();\r\n    window.open(URL.createObjectURL(blob));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"is-flex is-justify-content-space-between m-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          style={{ maxWidth: \"300px\" }}\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <div>\r\n          <Link to=\"/home/AddEmployee\" className=\"button is-success mr-1\">\r\n            Add Employee\r\n          </Link>\r\n          <button onClick={handleViewPDF} className=\"button is-info ml-1\">\r\n            View PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {!isMobile ? (\r\n        <div className=\"table-container overflow-x-auto\">\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Employee ID</th>\r\n                <th>Full Name</th>\r\n                <th>Email</th>\r\n                <th>Job Title</th>\r\n                <th>Position</th>\r\n                <th>Salary</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedUsers.length > 0 ? (\r\n                displayedUsers.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.full_name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      {editingRow === user.id ? (\r\n                        <select\r\n                          name=\"jobTitle\"\r\n                          value={editedData.jobTitle}\r\n                          onChange={handleChange}\r\n                          className=\"input\"\r\n                        >\r\n                          {jobTitles.map((title) => (\r\n                            <option key={title} value={title}>{title}</option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        user.Job_Title\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingRow === user.id ? (\r\n                        <select\r\n                          name=\"position\"\r\n                          value={editedData.position}\r\n                          onChange={handleChange}\r\n                          className=\"input\"\r\n                        >\r\n                          {positions.map((pos) => (\r\n                            <option key={pos} value={pos}>{pos}</option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        user.position\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingRow === user.id ? (\r\n                        <input\r\n                          type=\"number\"\r\n                          name=\"salary\"\r\n                          value={editedData.salary}\r\n                          onChange={handleChange}\r\n                          className=\"input\"\r\n                        />\r\n                      ) : (\r\n                        `â‚±${user.salary?.toLocaleString(\"en-PH\") || \"-\"}`\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingRow === user.id ? (\r\n                        <button\r\n                          onClick={() => handleSave(user.id)}\r\n                          className=\"button is-small is-success mr-2\"\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => handleEdit(user)}\r\n                          className=\"button is-small is-warning mr-2\"\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        onClick={() => openDelete(user)}\r\n                        className=\"button is-small is-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"has-text-centered\">No users found.</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : null}\r\n\r\n      <ConfirmBox\r\n        open={open}\r\n        closeDialog={() => setOpen(false)}\r\n        title={deleteData?.full_name}\r\n        empID={deleteData?.id}\r\n        deleteFunction={() => setOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import EmployePDF from \"../Printing/EmployeePDF\"; // âœ… Import the PDF component\r\n\r\n// const UserList = () => {\r\n//   const [users, setUser] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [entriesToShow, setEntriesToShow] = useState(10);\r\n\r\n//   useEffect(() => {\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:5000/users\");\r\n//       setUser(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/users/${id}`);\r\n//       getUsers();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Filter users based on search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n//       .toLowerCase()\r\n//       .includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Limit displayed entries based on selection\r\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       {/* Search Bar and Action Buttons */}\r\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input\"\r\n//           style={{ maxWidth: \"300px\" }}\r\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         <div>\r\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\r\n//             Add Employee\r\n//           </Link>\r\n\r\n//           <PDFDownloadLink\r\n//             document={<EmployePDF users={users} />}\r\n//             fileName=\"Employee_Report.pdf\"\r\n//             className=\"button is-info mr-3\"\r\n//           >\r\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\r\n//           </PDFDownloadLink>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Employee Table */}\r\n//       <table className=\"table is-striped is-fullwidth\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Employee ID</th>\r\n//             <th>Full Name</th>\r\n//             <th>Email</th>\r\n//             <th>Gender</th>\r\n//             <th>Job Title</th>\r\n//             <th>Position / Level</th>\r\n//             <th>Salary</th>\r\n//             <th>Annual Salary</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {displayedUsers.length > 0 ? (\r\n//             displayedUsers.map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.full_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//                 <td>{user.Job_Title}</td>\r\n//                 <td>{user.position}</td>\r\n//                 <td>\r\n//                   {user.salary\r\n//                     ? `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n//                         minimumFractionDigits: 2,\r\n//                       })}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   {user.anual_salary\r\n//                     ? `â‚±${parseFloat(user.anual_salary).toLocaleString(\r\n//                         \"en-PH\",\r\n//                         {\r\n//                           minimumFractionDigits: 2,\r\n//                         }\r\n//                       )}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   <Link\r\n//                     to={`edit/${user.id}`}\r\n//                     className=\"button is-small is-info mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button\r\n//                     onClick={() => deleteUser(user.id)}\r\n//                     className=\"button is-small is-danger\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"9\" className=\"has-text-centered\">\r\n//                 No users found.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Footer with Entry Filter */}\r\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\r\n//         <div>\r\n//           <label className=\"mr-2\">Show entries:</label>\r\n//           <div className=\"select\">\r\n//             <select\r\n//               value={entriesToShow}\r\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n//             >\r\n//               <option value=\"5\">5</option>\r\n//               <option value=\"10\">10</option>\r\n//               <option value=\"20\">20</option>\r\n//               <option value={filteredUsers.length}>All</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <p>\r\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"]},"metadata":{},"sourceType":"module"}