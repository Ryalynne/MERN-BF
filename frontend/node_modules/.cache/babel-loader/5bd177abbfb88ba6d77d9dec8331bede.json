{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Salary\\\\SalaryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport SalaryPDF from \"../Printing/SalaryPDF\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SalaryList() {\n  _s();\n\n  const [salaries, setSalaries] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingId, setEditingId] = useState(null);\n  const [editedSalary, setEditedSalary] = useState({});\n  useEffect(() => {\n    getSalaries();\n    getJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const getSalaries = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/salary\");\n      setSalaries(response.data);\n    } catch (error) {\n      console.error(\"Error fetching salaries:\", error);\n    }\n  };\n\n  const getJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setJobs(response.data);\n    } catch (error) {\n      console.error(\"Error fetching job titles:\", error);\n    }\n  };\n\n  const startEditing = salary => {\n    setEditingId(salary.id);\n    setEditedSalary({ ...salary\n    });\n  };\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedSalary({});\n  };\n\n  const handleEditChange = (e, field) => {\n    setEditedSalary({ ...editedSalary,\n      [field]: e.target.value\n    });\n  };\n\n  const saveSalary = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/salary/${id}`, editedSalary);\n      getSalaries();\n      setEditingId(null);\n    } catch (error) {\n      console.error(\"Error updating salary:\", error);\n    }\n  };\n\n  const filteredSalaries = salaries.filter(user => `${user.Job_Title} ${user.position}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow);\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(SalaryPDF, {\n      salaries: salaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 28\n    }, this)).toBlob();\n    const url = URL.createObjectURL(blob);\n    window.open(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input mb-3\",\n      placeholder: \"Search by Job Title or Position...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleViewPDF,\n      className: \"button is-info ml-3\",\n      children: \"View PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position / Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayedSalaries.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: editedSalary.Job_Title || \"\",\n                onChange: e => handleEditChange(e, \"Job_Title\"),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Job Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: job.Job_Title,\n                  children: job.Job_Title\n                }, job.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this) : user.Job_Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: editedSalary.position || \"\",\n              onChange: e => handleEditChange(e, \"position\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this) : user.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"input\",\n              value: editedSalary.salary || \"\",\n              onChange: e => handleEditChange(e, \"salary\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this) : `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n              minimumFractionDigits: 2\n            })}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-success mr-2\",\n                onClick: () => saveSalary(user.id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-danger\",\n                onClick: cancelEditing,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-small is-info\",\n              onClick: () => startEditing(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns is-multiline\",\n      children: displayedSalaries.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-header-title\",\n              children: user.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Salary ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 24\n              }, this), \" \", user.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Position:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 24\n              }, this), \" \", user.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Salary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 24\n              }, this), \" \", user.salary ? `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n                minimumFractionDigits: 2\n              })}` : \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/home/editSalary/${user.id}`,\n              className: \"card-footer-item button is-small is-info\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-2\",\n          children: \"Show entries:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: entriesToShow,\n            onChange: e => setEntriesToShow(Number(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"20\",\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: filteredSalaries.length,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Showing \", displayedSalaries.length, \" of \", filteredSalaries.length, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryList, \"GCr4Uc0OgWljHBLLv5IN3rzU72Y=\");\n\n_c = SalaryList;\nexport default SalaryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Salary/SalaryList.js"],"names":["React","useState","useEffect","axios","pdf","SalaryPDF","SalaryList","salaries","setSalaries","jobs","setJobs","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingId","setEditingId","editedSalary","setEditedSalary","getSalaries","getJobs","handleResize","addEventListener","removeEventListener","response","get","data","error","console","startEditing","salary","id","cancelEditing","handleEditChange","e","field","target","value","saveSalary","patch","filteredSalaries","filter","user","Job_Title","position","toLowerCase","includes","displayedSalaries","slice","handleViewPDF","blob","toBlob","url","URL","createObjectURL","open","map","job","parseFloat","toLocaleString","minimumFractionDigits","Number","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport SalaryPDF from \"../Printing/SalaryPDF\";\r\n\r\nfunction SalaryList() {\r\n  const [salaries, setSalaries] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editedSalary, setEditedSalary] = useState({});\r\n\r\n  useEffect(() => {\r\n    getSalaries();\r\n    getJobs();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const getSalaries = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/salary\");\r\n      setSalaries(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching salaries:\", error);\r\n    }\r\n  };\r\n\r\n  const getJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching job titles:\", error);\r\n    }\r\n  };\r\n\r\n  const startEditing = (salary) => {\r\n    setEditingId(salary.id);\r\n    setEditedSalary({ ...salary });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingId(null);\r\n    setEditedSalary({});\r\n  };\r\n\r\n  const handleEditChange = (e, field) => {\r\n    setEditedSalary({ ...editedSalary, [field]: e.target.value });\r\n  };\r\n\r\n  const saveSalary = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/salary/${id}`, editedSalary);\r\n      getSalaries();\r\n      setEditingId(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating salary:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredSalaries = salaries.filter((user) =>\r\n    `${user.Job_Title} ${user.position}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow);\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<SalaryPDF salaries={salaries} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input mb-3\"\r\n        placeholder=\"Search by Job Title or Position...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button onClick={handleViewPDF} className=\"button is-info ml-3\">\r\n        View PDF\r\n      </button>\r\n\r\n      {!isMobile ? (\r\n        <table className=\"table is-striped is-fullwidth\">\r\n          <thead>\r\n            <tr>\r\n              <th>Salary ID</th>\r\n              <th>Job Title</th>\r\n              <th>Position / Level</th>\r\n              <th>Salary</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayedSalaries.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>\r\n                  {editingId === user.id ? (\r\n                    <div className=\"select is-fullwidth\">\r\n                      <select\r\n                        value={editedSalary.Job_Title || \"\"}\r\n                        onChange={(e) => handleEditChange(e, \"Job_Title\")}\r\n                      >\r\n                        <option value=\"\">Select Job Title</option>\r\n                        {jobs.map((job) => (\r\n                          <option key={job.id} value={job.Job_Title}>\r\n                            {job.Job_Title}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  ) : (\r\n                    user.Job_Title\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editingId === user.id ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"input\"\r\n                      value={editedSalary.position || \"\"}\r\n                      onChange={(e) => handleEditChange(e, \"position\")}\r\n                    />\r\n                  ) : (\r\n                    user.position\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editingId === user.id ? (\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"input\"\r\n                      value={editedSalary.salary || \"\"}\r\n                      onChange={(e) => handleEditChange(e, \"salary\")}\r\n                    />\r\n                  ) : (\r\n                    `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n                      minimumFractionDigits: 2,\r\n                    })}`\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {editingId === user.id ? (\r\n                    <>\r\n                      <button\r\n                        className=\"button is-small is-success mr-2\"\r\n                        onClick={() => saveSalary(user.id)}\r\n                      >\r\n                        Save\r\n                      </button>\r\n                      <button\r\n                        className=\"button is-small is-danger\"\r\n                        onClick={cancelEditing}\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button\r\n                      className=\"button is-small is-info\"\r\n                      onClick={() => startEditing(user)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n          <div className=\"columns is-multiline\">\r\n            {displayedSalaries.map((user) => (\r\n              <div key={user.id} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">{user.Job_Title}</p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p><strong>Salary ID:</strong> {user.id}</p>\r\n                    <p><strong>Position:</strong> {user.position}</p>\r\n                    <p><strong>Salary:</strong> {user.salary ? `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", { minimumFractionDigits: 2 })}` : \"N/A\"}</p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link to={`/home/editSalary/${user.id}`} className=\"card-footer-item button is-small is-info\">\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Footer Controls */}\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select\r\n                value={entriesToShow}\r\n                onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n              >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value={filteredSalaries.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Showing {displayedSalaries.length} of {filteredSalaries.length} entries\r\n          </p>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default SalaryList;\r\n"]},"metadata":{},"sourceType":"module"}