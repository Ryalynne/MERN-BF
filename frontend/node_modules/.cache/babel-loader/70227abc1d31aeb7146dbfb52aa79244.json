{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [isModalActive, setIsModalActive] = useState(false);\n  const [editRow, setEditRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const [positions, setPositions] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  useEffect(() => {\n    getUsers();\n    fetchDepartments();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setDepartments(response.data);\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (editedData.job_id) {\n      fetchPositions(editedData.job_id);\n    }\n  }, [editedData.job_id]);\n\n  const fetchPositions = async job_id => {\n    try {\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${job_id}`);\n      setPositions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching positions:\", error);\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const handleEdit = user => {\n    setEditRow(user.id);\n    setEditedData({\n      full_name: user.full_name,\n      email: user.email,\n      job_id: user.job_id,\n      position_id: user.position_id,\n      salary: user.salary\n    });\n  };\n\n  const handleEditChange = (e, field) => {\n    const value = e.target.value;\n    setEditedData(prev => ({ ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSave = async id => {\n    try {\n      await axios.put(`http://localhost:5000/users/${id}`, editedData);\n      setEditRow(null);\n      getUsers();\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  const filteredUsers = users.filter(user => `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\n\n  const openDelete = user => {\n    setDeleteData(user);\n    setOpen(true);\n  };\n\n  const deleteUser = async () => {\n    if (!deleteData) return;\n\n    try {\n      await axios.delete(`http://localhost:5000/users/${deleteData.id}`);\n      setDeleteData(null);\n      setOpen(false);\n      getUsers();\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  };\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(EmployePDF, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 28\n    }, this)).toBlob();\n    const url = URL.createObjectURL(blob);\n    window.open(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"is-flex is-justify-content-space-between m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        style: {\n          maxWidth: \"300px\"\n        },\n        placeholder: \"Search by Full Name, Job Title or Position...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleViewPDF,\n        className: \"button is-info ml-1\",\n        children: \"View PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedUsers.map(user => {\n            var _user$salary;\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: editedData.full_name,\n                  onChange: e => handleEditChange(e, \"full_name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this) : user.full_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: editedData.email,\n                  onChange: e => handleEditChange(e, \"email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 44\n                }, this) : user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editedData.job_id,\n                  onChange: e => handleEditChange(e, \"job_id\"),\n                  children: departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: dep.id,\n                    children: dep.Job_Title\n                  }, dep.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 152\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 44\n                }, this) : user.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editedData.position_id,\n                  onChange: e => handleEditChange(e, \"position_id\"),\n                  children: positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pos.id,\n                    children: pos.position\n                  }, pos.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 160\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 44\n                }, this) : user.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"input\",\n                  value: editedData.salary,\n                  onChange: e => handleEditChange(e, \"salary\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 44\n                }, this) : `₱${((_user$salary = user.salary) === null || _user$salary === void 0 ? void 0 : _user$salary.toLocaleString()) || \"-\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editRow === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSave(user.id),\n                  className: \"button is-small is-success\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 44\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(user),\n                  className: \"button is-small is-info\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 143\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"XJWpoliJXGsyGkcIzb+rHh+aRkw=\");\n\n_c = UserList;\nexport default UserList; // import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\n// const UserList = () => {\n//   const [users, setUser] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [entriesToShow, setEntriesToShow] = useState(10);\n//   useEffect(() => {\n//     getUsers();\n//   }, []);\n//   const getUsers = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/users\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching users:\", error);\n//     }\n//   };\n//   const deleteUser = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/users/${id}`);\n//       getUsers();\n//     } catch (error) {\n//       console.error(\"Error deleting user:\", error);\n//     }\n//   };\n//   // Filter users based on search term\n//   const filteredUsers = users.filter((user) =>\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\n//       .toLowerCase()\n//       .includes(searchTerm.toLowerCase())\n//   );\n//   // Limit displayed entries based on selection\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\n//   return (\n//     <div className=\"container mt-5\">\n//       {/* Search Bar and Action Buttons */}\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"input\"\n//           style={{ maxWidth: \"300px\" }}\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <div>\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\n//             Add Employee\n//           </Link>\n//           <PDFDownloadLink\n//             document={<EmployePDF users={users} />}\n//             fileName=\"Employee_Report.pdf\"\n//             className=\"button is-info mr-3\"\n//           >\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\n//           </PDFDownloadLink>\n//         </div>\n//       </div>\n//       {/* Employee Table */}\n//       <table className=\"table is-striped is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>Employee ID</th>\n//             <th>Full Name</th>\n//             <th>Email</th>\n//             <th>Gender</th>\n//             <th>Job Title</th>\n//             <th>Position / Level</th>\n//             <th>Salary</th>\n//             <th>Annual Salary</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayedUsers.length > 0 ? (\n//             displayedUsers.map((user) => (\n//               <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.full_name}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.gender}</td>\n//                 <td>{user.Job_Title}</td>\n//                 <td>{user.position}</td>\n//                 <td>\n//                   {user.salary\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n//                         minimumFractionDigits: 2,\n//                       })}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   {user.anual_salary\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\n//                         \"en-PH\",\n//                         {\n//                           minimumFractionDigits: 2,\n//                         }\n//                       )}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   <Link\n//                     to={`edit/${user.id}`}\n//                     className=\"button is-small is-info mr-2\"\n//                   >\n//                     Edit\n//                   </Link>\n//                   <button\n//                     onClick={() => deleteUser(user.id)}\n//                     className=\"button is-small is-danger\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"9\" className=\"has-text-centered\">\n//                 No users found.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {/* Footer with Entry Filter */}\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\n//         <div>\n//           <label className=\"mr-2\">Show entries:</label>\n//           <div className=\"select\">\n//             <select\n//               value={entriesToShow}\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\n//             >\n//               <option value=\"5\">5</option>\n//               <option value=\"10\">10</option>\n//               <option value=\"20\">20</option>\n//               <option value={filteredUsers.length}>All</option>\n//             </select>\n//           </div>\n//         </div>\n//         <p>\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","AddEmployeeModal","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","isModalActive","setIsModalActive","editRow","setEditRow","editedData","setEditedData","positions","setPositions","departments","setDepartments","getUsers","fetchDepartments","handleResize","addEventListener","removeEventListener","response","get","data","error","console","job_id","fetchPositions","handleEdit","user","id","full_name","email","position_id","salary","handleEditChange","e","field","value","target","prev","handleSave","put","filteredUsers","filter","Job_Title","position","toLowerCase","includes","displayedUsers","slice","openDelete","deleteUser","delete","handleViewPDF","blob","toBlob","url","URL","createObjectURL","maxWidth","map","dep","pos","toLocaleString"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [isModalActive, setIsModalActive] = useState(false);\r\n  const [editRow, setEditRow] = useState(null);\r\n  const [editedData, setEditedData] = useState({});\r\n  const [positions, setPositions] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    fetchDepartments();\r\n\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editedData.job_id) {\r\n      fetchPositions(editedData.job_id);\r\n    }\r\n  }, [editedData.job_id]);\r\n\r\n  const fetchPositions = async (job_id) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/salary/getPosition/${job_id}`\r\n      );\r\n      setPositions(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching positions:\", error);\r\n    }\r\n  };\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setEditRow(user.id);\r\n    setEditedData({\r\n      full_name: user.full_name,\r\n      email: user.email,\r\n      job_id: user.job_id,\r\n      position_id: user.position_id,\r\n      salary: user.salary,\r\n    });\r\n  };\r\n\r\n  const handleEditChange = (e, field) => {\r\n    const value = e.target.value;\r\n    setEditedData((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/users/${id}`, editedData);\r\n      setEditRow(null);\r\n      getUsers();\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n  const openDelete = (user) => {\r\n    setDeleteData(user);\r\n    setOpen(true);\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    if (!deleteData) return;\r\n    try {\r\n      await axios.delete(`http://localhost:5000/users/${deleteData.id}`);\r\n      setDeleteData(null);\r\n      setOpen(false);\r\n      getUsers();\r\n    } catch (error) {\r\n      console.error(\"Error deleting user:\", error);\r\n    }\r\n  };\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<EmployePDF users={users} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"is-flex is-justify-content-space-between m-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          style={{ maxWidth: \"300px\" }}\r\n          placeholder=\"Search by Full Name, Job Title or Position...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button onClick={handleViewPDF} className=\"button is-info ml-1\">\r\n          View PDF\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"table-container overflow-x-auto\">\r\n        <table className=\"table is-striped is-fullwidth\">\r\n          <thead>\r\n            <tr>\r\n              <th>Employee ID</th>\r\n              <th>Full Name</th>\r\n              <th>Email</th>\r\n              <th>Job Title</th>\r\n              <th>Position</th>\r\n              <th>Salary</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayedUsers.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>\r\n                  {editRow === user.id ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"input\"\r\n                      value={editedData.full_name}\r\n                      onChange={(e) => handleEditChange(e, \"full_name\")}\r\n                    />\r\n                  ) : (\r\n                    user.full_name\r\n                  )}\r\n                </td>\r\n                <td>{editRow === user.id ? <input type=\"text\" className=\"input\" value={editedData.email} onChange={(e) => handleEditChange(e, \"email\")} /> : user.email}</td>\r\n                <td>{editRow === user.id ? <select value={editedData.job_id} onChange={(e) => handleEditChange(e, \"job_id\")}>{departments.map((dep) => <option key={dep.id} value={dep.id}>{dep.Job_Title}</option>)}</select> : user.Job_Title}</td>\r\n                <td>{editRow === user.id ? <select value={editedData.position_id} onChange={(e) => handleEditChange(e, \"position_id\")}>{positions.map((pos) => <option key={pos.id} value={pos.id}>{pos.position}</option>)}</select> : user.position}</td>\r\n                <td>{editRow === user.id ? <input type=\"number\" className=\"input\" value={editedData.salary} onChange={(e) => handleEditChange(e, \"salary\")} /> : `₱${user.salary?.toLocaleString() || \"-\"}`}</td>\r\n                <td>{editRow === user.id ? <button onClick={() => handleSave(user.id)} className=\"button is-small is-success\">Save</button> : <button onClick={() => handleEdit(user)} className=\"button is-small is-info\">Edit</button>}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\r\n\r\n// const UserList = () => {\r\n//   const [users, setUser] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [entriesToShow, setEntriesToShow] = useState(10);\r\n\r\n//   useEffect(() => {\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:5000/users\");\r\n//       setUser(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/users/${id}`);\r\n//       getUsers();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Filter users based on search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n//       .toLowerCase()\r\n//       .includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Limit displayed entries based on selection\r\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       {/* Search Bar and Action Buttons */}\r\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input\"\r\n//           style={{ maxWidth: \"300px\" }}\r\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         <div>\r\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\r\n//             Add Employee\r\n//           </Link>\r\n\r\n//           <PDFDownloadLink\r\n//             document={<EmployePDF users={users} />}\r\n//             fileName=\"Employee_Report.pdf\"\r\n//             className=\"button is-info mr-3\"\r\n//           >\r\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\r\n//           </PDFDownloadLink>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Employee Table */}\r\n//       <table className=\"table is-striped is-fullwidth\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Employee ID</th>\r\n//             <th>Full Name</th>\r\n//             <th>Email</th>\r\n//             <th>Gender</th>\r\n//             <th>Job Title</th>\r\n//             <th>Position / Level</th>\r\n//             <th>Salary</th>\r\n//             <th>Annual Salary</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {displayedUsers.length > 0 ? (\r\n//             displayedUsers.map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.full_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//                 <td>{user.Job_Title}</td>\r\n//                 <td>{user.position}</td>\r\n//                 <td>\r\n//                   {user.salary\r\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n//                         minimumFractionDigits: 2,\r\n//                       })}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   {user.anual_salary\r\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\r\n//                         \"en-PH\",\r\n//                         {\r\n//                           minimumFractionDigits: 2,\r\n//                         }\r\n//                       )}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   <Link\r\n//                     to={`edit/${user.id}`}\r\n//                     className=\"button is-small is-info mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button\r\n//                     onClick={() => deleteUser(user.id)}\r\n//                     className=\"button is-small is-danger\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"9\" className=\"has-text-centered\">\r\n//                 No users found.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Footer with Entry Filter */}\r\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\r\n//         <div>\r\n//           <label className=\"mr-2\">Show entries:</label>\r\n//           <div className=\"select\">\r\n//             <select\r\n//               value={entriesToShow}\r\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n//             >\r\n//               <option value=\"5\">5</option>\r\n//               <option value=\"10\">10</option>\r\n//               <option value=\"20\">20</option>\r\n//               <option value={filteredUsers.length}>All</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <p>\r\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"]},"metadata":{},"sourceType":"module"}