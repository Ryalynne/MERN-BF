{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\EditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUser = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [positions, setPositions] = useState([]);\n  const [position_id, setPositionId] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [departments, setDepartments] = useState([]);\n  const [dep_id, setDepId] = useState(\"\"); // Renamed selectDeptID to setDepId for consistency\n  // Update salary when position_id changes\n\n  useEffect(() => {\n    const selectedPosition = positions.find(pos => String(pos.id) === String(position_id));\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\n  }, [position_id, positions]); // Fetch user data on mount\n\n  useEffect(() => {\n    const getUserById = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/users/${id}`);\n        console.log(\"Full API Response:\", response.data);\n        setName(response.data.full_name);\n        setEmail(response.data.email);\n        setGender(response.data.gender);\n        setDepId(response.data.job_id ? String(response.data.job_id) : \"\"); // Ensure job_id is a string\n\n        setPositionId(response.data.salary_id ? String(response.data.salary_id) : \"\"); // Ensure salary_id is a string\n      } catch (error) {\n        console.error(\"Error fetching user:\", error);\n      }\n    };\n\n    getUserById();\n  }, [id]); // Fetch departments on mount\n\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/job\");\n        setDepartments(response.data);\n      } catch (error) {\n        console.error(\"Error fetching departments:\", error);\n      }\n    };\n\n    fetchDepartments();\n  }, []); // Fetch positions when dep_id changes\n\n  useEffect(() => {\n    if (!dep_id) {\n      setPositions([]);\n      setPositionId(\"\"); // Reset position_id when no job is selected\n\n      setSalary(\"\");\n      return;\n    }\n\n    const fetchPositions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\n        const fetchedPositions = response.data;\n        setPositions(fetchedPositions); // Check if current position_id is valid for the new job\n\n        const isCurrentPositionValid = fetchedPositions.some(pos => String(pos.id) === String(position_id));\n\n        if (!isCurrentPositionValid) {\n          setPositionId(\"\"); // Reset position_id if it's not valid for the new job\n\n          setSalary(\"\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching positions:\", error);\n        setPositions([]);\n        setPositionId(\"\");\n        setSalary(\"\");\n      }\n    };\n\n    fetchPositions();\n  }, [dep_id]);\n\n  const updateUser = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.patch(`http://localhost:5000/users/${id}`, {\n        name,\n        email,\n        gender,\n        position_id: position_id ? parseInt(position_id) : null,\n        // Convert to integer or null\n        job_id: dep_id ? parseInt(dep_id) : null // Include job_id in the update\n\n      });\n      navigate(\"/home/EmployeeList\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column is-half container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updateUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"input\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gender,\n                onChange: e => setGender(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: dep_id,\n                onChange: e => setDepId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Job Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.id,\n                  children: dep.Job_Title\n                }, dep.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: position_id,\n                onChange: e => setPositionId(e.target.value),\n                disabled: !dep_id || positions.length === 0,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pos.id,\n                  children: pos.position\n                }, pos.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: salary ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\n                minimumFractionDigits: 2\n              })}` : \"\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-success\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUser, \"uupU8bv6GlGWz0lvbES3bY5EaqE=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/EditUser.js"],"names":["React","useState","useEffect","axios","useNavigate","useParams","EditUser","name","setName","email","setEmail","gender","setGender","positions","setPositions","position_id","setPositionId","salary","setSalary","navigate","id","departments","setDepartments","dep_id","setDepId","selectedPosition","find","pos","String","getUserById","response","get","console","log","data","full_name","job_id","salary_id","error","fetchDepartments","fetchPositions","fetchedPositions","isCurrentPositionValid","some","updateUser","e","preventDefault","patch","parseInt","target","value","map","dep","Job_Title","length","position","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [positions, setPositions] = useState([]);\r\n  const [position_id, setPositionId] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [departments, setDepartments] = useState([]);\r\n  const [dep_id, setDepId] = useState(\"\"); // Renamed selectDeptID to setDepId for consistency\r\n\r\n  // Update salary when position_id changes\r\n  useEffect(() => {\r\n    const selectedPosition = positions.find(\r\n      (pos) => String(pos.id) === String(position_id)\r\n    );\r\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\r\n  }, [position_id, positions]);\r\n\r\n  // Fetch user data on mount\r\n  useEffect(() => {\r\n    const getUserById = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/users/${id}`);\r\n        console.log(\"Full API Response:\", response.data);\r\n        setName(response.data.full_name);\r\n        setEmail(response.data.email);\r\n        setGender(response.data.gender);\r\n        setDepId(response.data.job_id ? String(response.data.job_id) : \"\"); // Ensure job_id is a string\r\n        setPositionId(response.data.salary_id ? String(response.data.salary_id) : \"\"); // Ensure salary_id is a string\r\n      } catch (error) {\r\n        console.error(\"Error fetching user:\", error);\r\n      }\r\n    };\r\n\r\n    getUserById();\r\n  }, [id]);\r\n\r\n  // Fetch departments on mount\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/job\");\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching departments:\", error);\r\n      }\r\n    };\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  // Fetch positions when dep_id changes\r\n  useEffect(() => {\r\n    if (!dep_id) {\r\n      setPositions([]);\r\n      setPositionId(\"\"); // Reset position_id when no job is selected\r\n      setSalary(\"\");\r\n      return;\r\n    }\r\n\r\n    const fetchPositions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/salary/getPosition/${dep_id}`\r\n        );\r\n        const fetchedPositions = response.data;\r\n        setPositions(fetchedPositions);\r\n\r\n        // Check if current position_id is valid for the new job\r\n        const isCurrentPositionValid = fetchedPositions.some(\r\n          (pos) => String(pos.id) === String(position_id)\r\n        );\r\n        if (!isCurrentPositionValid) {\r\n          setPositionId(\"\"); // Reset position_id if it's not valid for the new job\r\n          setSalary(\"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching positions:\", error);\r\n        setPositions([]);\r\n        setPositionId(\"\");\r\n        setSalary(\"\");\r\n      }\r\n    };\r\n\r\n    fetchPositions();\r\n  }, [dep_id]);\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, {\r\n        name,\r\n        email,\r\n        gender,\r\n        position_id: position_id ? parseInt(position_id) : null, // Convert to integer or null\r\n        job_id: dep_id ? parseInt(dep_id) : null, // Include job_id in the update\r\n      });\r\n      navigate(\"/home/EmployeeList\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"column is-half container mt-5\">\r\n        <form onSubmit={updateUser}>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Name</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"Name\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Email</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"input\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Gender</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={gender}\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Gender</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Job Title</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={dep_id}\r\n                  onChange={(e) => setDepId(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Job Title</option>\r\n                  {departments.map((dep) => (\r\n                    <option key={dep.id} value={dep.id}>\r\n                      {dep.Job_Title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Position</label>\r\n            <div className=\"control\">\r\n              <div className=\"select is-fullwidth\">\r\n                <select\r\n                  value={position_id}\r\n                  onChange={(e) => setPositionId(e.target.value)}\r\n                  disabled={!dep_id || positions.length === 0}\r\n                >\r\n                  <option value=\"\">Select a position</option>\r\n                  {positions.map((pos) => (\r\n                    <option key={pos.id} value={pos.id}>\r\n                      {pos.position}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Salary</label>\r\n            <div className=\"control\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={\r\n                  salary\r\n                    ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}`\r\n                    : \"\"\r\n                }\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <button type=\"submit\" className=\"button is-success\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}