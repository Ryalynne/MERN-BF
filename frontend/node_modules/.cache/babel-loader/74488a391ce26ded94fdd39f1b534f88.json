{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Salary\\\\SalaryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport SalaryPDF from \"../Printing/SalaryPDF\";\nimport AddSalaryModal from \"../UI/Modal/AddSalaryModal\"; // Corrected typo in import\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SalaryList() {\n  _s();\n\n  // State Hooks\n  const [salaries, setSalaries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingId, setEditingId] = useState(null);\n  const [editedSalary, setEditedSalary] = useState({\n    job_id: \"\",\n    position: \"\",\n    salary: \"\"\n  });\n  const [jobs, setJobs] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [newSalary, setNewSalary] = useState({\n    job_id: \"\",\n    position: \"\",\n    salary: \"\"\n  });\n  const [addErrors, setAddErrors] = useState({\n    job_id: false,\n    position: false,\n    salary: false\n  });\n  const [editErrors, setEditErrors] = useState({\n    job_id: false,\n    position: false,\n    salary: false\n  });\n  const [isLoading, setIsLoading] = useState(false); // Added for loading state\n  // Effect Hook for Data Fetching and Resize Handling\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      await Promise.all([getSalaries(), getJobs()]);\n      setIsLoading(false);\n    };\n\n    fetchData();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Fetch Salary Records\n\n  const getSalaries = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/salary\");\n      setSalaries(response.data || []);\n    } catch (error) {\n      console.error(\"Error fetching salaries:\", error);\n      setSalaries([]);\n    }\n  }; // Fetch Job Titles\n\n\n  const getJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setJobs(response.data || []);\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n      setJobs([]);\n    }\n  }; // Filter and Paginate Salaries\n\n\n  const filteredSalaries = salaries.filter(salary => `${salary.Job_Title} ${salary.position}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow); // Generate and Open PDF\n\n  const handleViewPDF = async () => {\n    try {\n      const blob = await pdf( /*#__PURE__*/_jsxDEV(SalaryPDF, {\n        salaries: salaries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 30\n      }, this)).toBlob();\n      const url = URL.createObjectURL(blob);\n      window.open(url);\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n    }\n  }; // Editing Handlers\n\n\n  const startEditing = salary => {\n    const job = jobs.find(job => job.Job_Title === salary.Job_Title);\n    setEditingId(salary.id);\n    setEditedSalary({\n      job_id: job ? job.id : \"\",\n      position: salary.position || \"\",\n      salary: salary.salary || \"\"\n    });\n    setEditErrors({\n      job_id: false,\n      position: false,\n      salary: false\n    });\n  };\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedSalary({\n      job_id: \"\",\n      position: \"\",\n      salary: \"\"\n    });\n    setEditErrors({\n      job_id: false,\n      position: false,\n      salary: false\n    });\n  };\n\n  const handleEditChange = (e, field) => {\n    const value = e.target.value;\n    setEditedSalary(prev => ({ ...prev,\n      [field]: value\n    }));\n    setEditErrors(prev => ({ ...prev,\n      [field]: !value.trim()\n    }));\n  };\n\n  const saveSalary = async id => {\n    const errors = {\n      job_id: !editedSalary.job_id.trim(),\n      position: !editedSalary.position.trim(),\n      salary: !editedSalary.salary.trim()\n    };\n    setEditErrors(errors);\n    if (Object.values(errors).some(error => error)) return;\n\n    try {\n      await axios.patch(`http://localhost:5000/salary/${id}`, {\n        job_id: editedSalary.job_id,\n        position: editedSalary.position,\n        salary: editedSalary.salary\n      });\n      await getSalaries();\n      cancelEditing();\n    } catch (error) {\n      console.error(\"Error updating salary:\", error);\n    }\n  }; // Adding Handlers\n\n\n  const startAdding = () => setIsAdding(true);\n\n  const cancelAdding = () => {\n    setIsAdding(false);\n    setNewSalary({\n      job_id: \"\",\n      position: \"\",\n      salary: \"\"\n    });\n    setAddErrors({\n      job_id: false,\n      position: false,\n      salary: false\n    });\n  };\n\n  const handleNewChange = (e, field) => {\n    const value = e.target.value;\n    setNewSalary(prev => ({ ...prev,\n      [field]: value\n    }));\n    setAddErrors(prev => ({ ...prev,\n      [field]: !value.trim()\n    }));\n  };\n\n  const saveNewSalary = async () => {\n    const errors = {\n      job_id: !newSalary.job_id.trim(),\n      position: !newSalary.position.trim(),\n      salary: !newSalary.salary.trim()\n    };\n    setAddErrors(errors);\n    if (Object.values(errors).some(error => error)) return;\n\n    try {\n      await axios.post(\"http://localhost:5000/salary\", {\n        job_id: newSalary.job_id,\n        position: newSalary.position,\n        salary: newSalary.salary\n      });\n      await getSalaries();\n      cancelAdding();\n    } catch (error) {\n      console.error(\"Error adding salary:\", error);\n    }\n  }; // Render UI\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input mt-2\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 is-flex\",\n          children: [!isMobile && !isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-success ml-3\",\n            onClick: startAdding,\n            children: \"Add Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), isMobile && /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/AddSalary\",\n            className: \"button is-success ml-3\",\n            children: \"Add Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleViewPDF,\n            className: \"button is-info ml-3\",\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"has-text-white\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this) : !isMobile ?\n      /*#__PURE__*/\n\n      /* Desktop Table View */\n      _jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [isAdding && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select is-fullwidth\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: newSalary.job_id,\n                  onChange: e => handleNewChange(e, \"job_id\"),\n                  style: {\n                    borderColor: addErrors.job_id ? \"red\" : \"\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a Job\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: job.id,\n                    children: job.Job_Title\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: newSalary.position,\n                onChange: e => handleNewChange(e, \"position\"),\n                placeholder: \"Position\",\n                style: {\n                  borderColor: addErrors.position ? \"red\" : \"\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"input\",\n                value: newSalary.salary,\n                onChange: e => handleNewChange(e, \"salary\"),\n                placeholder: \"Salary\",\n                style: {\n                  borderColor: addErrors.salary ? \"red\" : \"\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-success mr-2\",\n                onClick: saveNewSalary,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-danger\",\n                onClick: cancelAdding,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), displayedSalaries.map(salary => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: salary.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select is-fullwidth\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editedSalary.job_id,\n                  onChange: e => handleEditChange(e, \"job_id\"),\n                  style: {\n                    borderColor: editErrors.job_id ? \"red\" : \"\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a Job\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 27\n                  }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: job.id,\n                    children: job.Job_Title\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 23\n              }, this) : salary.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: editedSalary.position,\n                onChange: e => handleEditChange(e, \"position\"),\n                style: {\n                  borderColor: editErrors.position ? \"red\" : \"\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 23\n              }, this) : salary.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"input\",\n                value: editedSalary.salary,\n                onChange: e => handleEditChange(e, \"salary\"),\n                style: {\n                  borderColor: editErrors.salary ? \"red\" : \"\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 23\n              }, this) : `₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", {\n                minimumFractionDigits: 2\n              })}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-success mr-2\",\n                  onClick: () => saveSalary(salary.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-danger\",\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-info\",\n                onClick: () => startEditing(salary),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this)]\n          }, salary.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n\n      /* Mobile Card View */\n      _jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: displayedSalaries.map(salary => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: salary.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Salary ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 24\n                }, this), \" \", salary.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Position:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 24\n                }, this), \" \", salary.position]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Salary:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 23\n                }, this), \" \", salary.salary ? `₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", {\n                  minimumFractionDigits: 2\n                })}` : \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/editSalary/${salary.id}`,\n                className: \"card-footer-item button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this)\n        }, salary.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-2\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entriesToShow,\n              onChange: e => setEntriesToShow(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: filteredSalaries.length,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", displayedSalaries.length, \" of \", filteredSalaries.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryList, \"FlTPeyB12NRwimgIA+hV9kgsuc4=\");\n\n_c = SalaryList;\nexport default SalaryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Salary/SalaryList.js"],"names":["React","useState","useEffect","axios","Link","pdf","SalaryPDF","AddSalaryModal","SalaryList","salaries","setSalaries","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingId","setEditingId","editedSalary","setEditedSalary","job_id","position","salary","jobs","setJobs","isAdding","setIsAdding","newSalary","setNewSalary","addErrors","setAddErrors","editErrors","setEditErrors","isLoading","setIsLoading","fetchData","Promise","all","getSalaries","getJobs","handleResize","addEventListener","removeEventListener","response","get","data","error","console","filteredSalaries","filter","Job_Title","toLowerCase","includes","displayedSalaries","slice","handleViewPDF","blob","toBlob","url","URL","createObjectURL","open","startEditing","job","find","id","cancelEditing","handleEditChange","e","field","value","target","prev","trim","saveSalary","errors","Object","values","some","patch","startAdding","cancelAdding","handleNewChange","saveNewSalary","post","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","borderColor","map","parseFloat","toLocaleString","minimumFractionDigits","Number","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport SalaryPDF from \"../Printing/SalaryPDF\";\r\nimport AddSalaryModal from \"../UI/Modal/AddSalaryModal\"; // Corrected typo in import\r\n\r\nfunction SalaryList() {\r\n  // State Hooks\r\n  const [salaries, setSalaries] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editedSalary, setEditedSalary] = useState({ job_id: \"\", position: \"\", salary: \"\" });\r\n  const [jobs, setJobs] = useState([]);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [newSalary, setNewSalary] = useState({ job_id: \"\", position: \"\", salary: \"\" });\r\n  const [addErrors, setAddErrors] = useState({ job_id: false, position: false, salary: false });\r\n  const [editErrors, setEditErrors] = useState({ job_id: false, position: false, salary: false });\r\n  const [isLoading, setIsLoading] = useState(false); // Added for loading state\r\n\r\n  // Effect Hook for Data Fetching and Resize Handling\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      await Promise.all([getSalaries(), getJobs()]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Fetch Salary Records\r\n  const getSalaries = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/salary\");\r\n      setSalaries(response.data || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching salaries:\", error);\r\n      setSalaries([]);\r\n    }\r\n  };\r\n\r\n  // Fetch Job Titles\r\n  const getJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setJobs(response.data || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n      setJobs([]);\r\n    }\r\n  };\r\n\r\n  // Filter and Paginate Salaries\r\n  const filteredSalaries = salaries.filter((salary) =>\r\n    `${salary.Job_Title} ${salary.position}`.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow);\r\n\r\n  // Generate and Open PDF\r\n  const handleViewPDF = async () => {\r\n    try {\r\n      const blob = await pdf(<SalaryPDF salaries={salaries} />).toBlob();\r\n      const url = URL.createObjectURL(blob);\r\n      window.open(url);\r\n    } catch (error) {\r\n      console.error(\"Error generating PDF:\", error);\r\n    }\r\n  };\r\n\r\n  // Editing Handlers\r\n  const startEditing = (salary) => {\r\n    const job = jobs.find((job) => job.Job_Title === salary.Job_Title);\r\n    setEditingId(salary.id);\r\n    setEditedSalary({\r\n      job_id: job ? job.id : \"\",\r\n      position: salary.position || \"\",\r\n      salary: salary.salary || \"\",\r\n    });\r\n    setEditErrors({ job_id: false, position: false, salary: false });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingId(null);\r\n    setEditedSalary({ job_id: \"\", position: \"\", salary: \"\" });\r\n    setEditErrors({ job_id: false, position: false, salary: false });\r\n  };\r\n\r\n  const handleEditChange = (e, field) => {\r\n    const value = e.target.value;\r\n    setEditedSalary((prev) => ({ ...prev, [field]: value }));\r\n    setEditErrors((prev) => ({ ...prev, [field]: !value.trim() }));\r\n  };\r\n\r\n  const saveSalary = async (id) => {\r\n    const errors = {\r\n      job_id: !editedSalary.job_id.trim(),\r\n      position: !editedSalary.position.trim(),\r\n      salary: !editedSalary.salary.trim(),\r\n    };\r\n    setEditErrors(errors);\r\n\r\n    if (Object.values(errors).some((error) => error)) return;\r\n\r\n    try {\r\n      await axios.patch(`http://localhost:5000/salary/${id}`, {\r\n        job_id: editedSalary.job_id,\r\n        position: editedSalary.position,\r\n        salary: editedSalary.salary,\r\n      });\r\n      await getSalaries();\r\n      cancelEditing();\r\n    } catch (error) {\r\n      console.error(\"Error updating salary:\", error);\r\n    }\r\n  };\r\n\r\n  // Adding Handlers\r\n  const startAdding = () => setIsAdding(true);\r\n\r\n  const cancelAdding = () => {\r\n    setIsAdding(false);\r\n    setNewSalary({ job_id: \"\", position: \"\", salary: \"\" });\r\n    setAddErrors({ job_id: false, position: false, salary: false });\r\n  };\r\n\r\n  const handleNewChange = (e, field) => {\r\n    const value = e.target.value;\r\n    setNewSalary((prev) => ({ ...prev, [field]: value }));\r\n    setAddErrors((prev) => ({ ...prev, [field]: !value.trim() }));\r\n  };\r\n\r\n  const saveNewSalary = async () => {\r\n    const errors = {\r\n      job_id: !newSalary.job_id.trim(),\r\n      position: !newSalary.position.trim(),\r\n      salary: !newSalary.salary.trim(),\r\n    };\r\n    setAddErrors(errors);\r\n\r\n    if (Object.values(errors).some((error) => error)) return;\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/salary\", {\r\n        job_id: newSalary.job_id,\r\n        position: newSalary.position,\r\n        salary: newSalary.salary,\r\n      });\r\n      await getSalaries();\r\n      cancelAdding();\r\n    } catch (error) {\r\n      console.error(\"Error adding salary:\", error);\r\n    }\r\n  };\r\n\r\n  // Render UI\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      {/* Background and Overlay */}\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div className=\"column container mt-5\" style={{ position: \"relative\", zIndex: 1 }}>\r\n        {/* Search and Controls */}\r\n        <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input mt-2\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div className=\"mt-2 is-flex\">\r\n            {!isMobile && !isAdding && (\r\n              <button className=\"button is-success ml-3\" onClick={startAdding}>\r\n                Add Position\r\n              </button>\r\n            )}\r\n            {isMobile && (\r\n              <Link to=\"/home/AddSalary\" className=\"button is-success ml-3\">\r\n                Add Position\r\n              </Link>\r\n            )}\r\n            <button onClick={handleViewPDF} className=\"button is-info ml-3\">\r\n              View PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Loading Indicator */}\r\n        {isLoading ? (\r\n          <p className=\"has-text-white\">Loading...</p>\r\n        ) : !isMobile ? (\r\n          /* Desktop Table View */\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Salary ID</th>\r\n                <th>Job Title</th>\r\n                <th>Position</th>\r\n                <th>Salary</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isAdding && (\r\n                <tr>\r\n                  <td>New</td>\r\n                  <td>\r\n                    <div className=\"select is-fullwidth\">\r\n                      <select\r\n                        value={newSalary.job_id}\r\n                        onChange={(e) => handleNewChange(e, \"job_id\")}\r\n                        style={{ borderColor: addErrors.job_id ? \"red\" : \"\" }}\r\n                      >\r\n                        <option value=\"\">Select a Job</option>\r\n                        {jobs.map((job) => (\r\n                          <option key={job.id} value={job.id}>\r\n                            {job.Job_Title}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"input\"\r\n                      value={newSalary.position}\r\n                      onChange={(e) => handleNewChange(e, \"position\")}\r\n                      placeholder=\"Position\"\r\n                      style={{ borderColor: addErrors.position ? \"red\" : \"\" }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"input\"\r\n                      value={newSalary.salary}\r\n                      onChange={(e) => handleNewChange(e, \"salary\")}\r\n                      placeholder=\"Salary\"\r\n                      style={{ borderColor: addErrors.salary ? \"red\" : \"\" }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button className=\"button is-small is-success mr-2\" onClick={saveNewSalary}>\r\n                      Save\r\n                    </button>\r\n                    <button className=\"button is-small is-danger\" onClick={cancelAdding}>\r\n                      Cancel\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {displayedSalaries.map((salary) => (\r\n                <tr key={salary.id}>\r\n                  <td>{salary.id}</td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={editedSalary.job_id}\r\n                          onChange={(e) => handleEditChange(e, \"job_id\")}\r\n                          style={{ borderColor: editErrors.job_id ? \"red\" : \"\" }}\r\n                        >\r\n                          <option value=\"\">Select a Job</option>\r\n                          {jobs.map((job) => (\r\n                            <option key={job.id} value={job.id}>\r\n                              {job.Job_Title}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    ) : (\r\n                      salary.Job_Title\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={editedSalary.position}\r\n                        onChange={(e) => handleEditChange(e, \"position\")}\r\n                        style={{ borderColor: editErrors.position ? \"red\" : \"\" }}\r\n                      />\r\n                    ) : (\r\n                      salary.position\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"input\"\r\n                        value={editedSalary.salary}\r\n                        onChange={(e) => handleEditChange(e, \"salary\")}\r\n                        style={{ borderColor: editErrors.salary ? \"red\" : \"\" }}\r\n                      />\r\n                    ) : (\r\n                      `₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", { minimumFractionDigits: 2 })}`\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <>\r\n                        <button\r\n                          className=\"button is-small is-success mr-2\"\r\n                          onClick={() => saveSalary(salary.id)}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                        <button className=\"button is-small is-danger\" onClick={cancelEditing}>\r\n                          Cancel\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button className=\"button is-small is-info\" onClick={() => startEditing(salary)}>\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          /* Mobile Card View */\r\n          <div className=\"columns is-multiline\">\r\n            {displayedSalaries.map((salary) => (\r\n              <div key={salary.id} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">{salary.Job_Title}</p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p><strong>Salary ID:</strong> {salary.id}</p>\r\n                    <p><strong>Position:</strong> {salary.position}</p>\r\n                    <p>\r\n                      <strong>Salary:</strong>{\" \"}\r\n                      {salary.salary\r\n                        ? `₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", { minimumFractionDigits: 2 })}`\r\n                        : \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link to={`/home/editSalary/${salary.id}`} className=\"card-footer-item button is-small is-info\">\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination Controls */}\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select value={entriesToShow} onChange={(e) => setEntriesToShow(Number(e.target.value))}>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value={filteredSalaries.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>Showing {displayedSalaries.length} of {filteredSalaries.length} entries</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalaryList;"]},"metadata":{},"sourceType":"module"}