{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Salary\\\\SalaryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport SalaryPDF from \"../Printing/SalaryPDF\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SalaryList() {\n  _s();\n\n  const [salaries, setSalaries] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingId, setEditingId] = useState(null);\n  const [editedSalary, setEditedSalary] = useState({});\n  const [newSalary, setNewSalary] = useState(null);\n  useEffect(() => {\n    fetchSalaries();\n    fetchJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchSalaries = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/salary\");\n      setSalaries(response.data);\n    } catch (error) {\n      console.error(\"Error fetching salaries:\", error);\n    }\n  };\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setJobs(response.data);\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n  };\n\n  const handleAddRow = () => {\n    setNewSalary({\n      job_id: \"\",\n      position: \"\",\n      salary: \"\"\n    });\n  };\n\n  const handleEditChange = function (e, field) {\n    let isNew = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const value = e.target.value;\n\n    if (isNew) {\n      setNewSalary(prev => ({ ...prev,\n        [field]: value\n      }));\n    } else {\n      setEditedSalary(prev => ({ ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const saveSalary = async function (id) {\n    let isNew = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    try {\n      if (isNew) {\n        await axios.post(\"http://localhost:5000/salary\", newSalary);\n        setNewSalary(null);\n      } else {\n        await axios.patch(`http://localhost:5000/salary/${id}`, editedSalary);\n        setEditingId(null);\n      }\n\n      fetchSalaries();\n    } catch (error) {\n      console.error(\"Error saving salary:\", error);\n    }\n  };\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(SalaryPDF, {\n      salaries: salaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }, this)).toBlob();\n    const url = URL.createObjectURL(blob);\n    window.open(url, \"_blank\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"is-flex is-justify-content-space-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        placeholder: \"Search by Job Title or Position...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-success\",\n        onClick: handleAddRow,\n        children: \"Add Job Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-info\",\n        onClick: handleViewPDF,\n        children: \"View PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position / Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [newSalary && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"select is-fullwidth\",\n              value: newSalary.job_id,\n              onChange: e => handleEditChange(e, \"job_id\", true),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: job.id,\n                children: job.Job_Title\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: newSalary.position,\n              onChange: e => handleEditChange(e, \"position\", true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"input\",\n              value: newSalary.salary,\n              onChange: e => handleEditChange(e, \"salary\", true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-success\",\n              onClick: () => saveSalary(null, true),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), salaries.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.Job_Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n              minimumFractionDigits: 2\n            })}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-small is-info\",\n              onClick: () => setEditingId(user.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryList, \"CzQSb+0IxwfADMx/x9koWsv7+20=\");\n\n_c = SalaryList;\nexport default SalaryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Salary/SalaryList.js"],"names":["React","useState","useEffect","axios","pdf","SalaryPDF","SalaryList","salaries","setSalaries","jobs","setJobs","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingId","setEditingId","editedSalary","setEditedSalary","newSalary","setNewSalary","fetchSalaries","fetchJobs","handleResize","addEventListener","removeEventListener","response","get","data","error","console","handleAddRow","job_id","position","salary","handleEditChange","e","field","isNew","value","target","prev","saveSalary","id","post","patch","handleViewPDF","blob","toBlob","url","URL","createObjectURL","open","map","job","Job_Title","user","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport SalaryPDF from \"../Printing/SalaryPDF\";\r\n\r\nfunction SalaryList() {\r\n  const [salaries, setSalaries] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editedSalary, setEditedSalary] = useState({});\r\n  const [newSalary, setNewSalary] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSalaries();\r\n    fetchJobs();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchSalaries = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/salary\");\r\n      setSalaries(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching salaries:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setJobs(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    setNewSalary({ job_id: \"\", position: \"\", salary: \"\" });\r\n  };\r\n\r\n  const handleEditChange = (e, field, isNew = false) => {\r\n    const value = e.target.value;\r\n    if (isNew) {\r\n      setNewSalary((prev) => ({ ...prev, [field]: value }));\r\n    } else {\r\n      setEditedSalary((prev) => ({ ...prev, [field]: value }));\r\n    }\r\n  };\r\n\r\n  const saveSalary = async (id, isNew = false) => {\r\n    try {\r\n      if (isNew) {\r\n        await axios.post(\"http://localhost:5000/salary\", newSalary);\r\n        setNewSalary(null);\r\n      } else {\r\n        await axios.patch(`http://localhost:5000/salary/${id}`, editedSalary);\r\n        setEditingId(null);\r\n      }\r\n      fetchSalaries();\r\n    } catch (error) {\r\n      console.error(\"Error saving salary:\", error);\r\n    }\r\n  };\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<SalaryPDF salaries={salaries} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Search by Job Title or Position...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button className=\"button is-success\" onClick={handleAddRow}>\r\n          Add Job Salary\r\n        </button>\r\n        <button className=\"button is-info\" onClick={handleViewPDF}>\r\n          View PDF\r\n        </button>\r\n      </div>\r\n\r\n      <table className=\"table is-striped is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>Job Title</th>\r\n            <th>Position / Level</th>\r\n            <th>Salary</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {newSalary && (\r\n            <tr>\r\n              <td>\r\n                <select\r\n                  className=\"select is-fullwidth\"\r\n                  value={newSalary.job_id}\r\n                  onChange={(e) => handleEditChange(e, \"job_id\", true)}\r\n                >\r\n                  <option value=\"\">Select Job</option>\r\n                  {jobs.map((job) => (\r\n                    <option key={job.id} value={job.id}>\r\n                      {job.Job_Title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  value={newSalary.position}\r\n                  onChange={(e) => handleEditChange(e, \"position\", true)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"input\"\r\n                  value={newSalary.salary}\r\n                  onChange={(e) => handleEditChange(e, \"salary\", true)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button className=\"button is-success\" onClick={() => saveSalary(null, true)}>\r\n                  Save\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          )}\r\n\r\n          {salaries.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.Job_Title}</td>\r\n              <td>{user.position}</td>\r\n              <td>{`â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", { minimumFractionDigits: 2 })}`}</td>\r\n              <td>\r\n                <button\r\n                  className=\"button is-small is-info\"\r\n                  onClick={() => setEditingId(user.id)}\r\n                >\r\n                  Edit\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalaryList;\r\n"]},"metadata":{},"sourceType":"module"}