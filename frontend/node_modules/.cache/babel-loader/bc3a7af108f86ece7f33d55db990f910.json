{"ast":null,"code":"/**\r\n * Expose `isUrl`.\r\n */\nmodule.exports = isUrl;\n/**\r\n * RegExps.\r\n * A URL must match #1 and then at least one of #2/#3.\r\n * Use two levels of REs to avoid REDOS.\r\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/;\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n/**\r\n * Loosely validate a URL `string`.\r\n *\r\n * @param {String} string\r\n * @return {Boolean}\r\n */\n\nfunction isUrl(string) {\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  var match = string.match(protocolAndDomainRE);\n\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) || nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/is-url/index.js"],"names":["module","exports","isUrl","protocolAndDomainRE","localhostDomainRE","nonLocalhostDomainRE","string","match","everythingAfterProtocol","test"],"mappings":"AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,sBAA1B;AAEA,IAAIC,iBAAiB,GAAG,qCAAxB;AACA,IAAIC,oBAAoB,GAAG,oBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASH,KAAT,CAAeI,MAAf,EAAsB;AACpB,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAO,KAAP;AACD;;AAED,MAAIC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAaJ,mBAAb,CAAZ;;AACA,MAAI,CAACI,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AAED,MAAIC,uBAAuB,GAAGD,KAAK,CAAC,CAAD,CAAnC;;AACA,MAAI,CAACC,uBAAL,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAIJ,iBAAiB,CAACK,IAAlB,CAAuBD,uBAAvB,KACAH,oBAAoB,CAACI,IAArB,CAA0BD,uBAA1B,CADJ,EACwD;AACtD,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["\r\n/**\r\n * Expose `isUrl`.\r\n */\r\n\r\nmodule.exports = isUrl;\r\n\r\n/**\r\n * RegExps.\r\n * A URL must match #1 and then at least one of #2/#3.\r\n * Use two levels of REs to avoid REDOS.\r\n */\r\n\r\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\r\n\r\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/\r\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\r\n\r\n/**\r\n * Loosely validate a URL `string`.\r\n *\r\n * @param {String} string\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isUrl(string){\r\n  if (typeof string !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  var match = string.match(protocolAndDomainRE);\r\n  if (!match) {\r\n    return false;\r\n  }\r\n\r\n  var everythingAfterProtocol = match[1];\r\n  if (!everythingAfterProtocol) {\r\n    return false;\r\n  }\r\n\r\n  if (localhostDomainRE.test(everythingAfterProtocol) ||\r\n      nonLocalhostDomainRE.test(everythingAfterProtocol)) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}