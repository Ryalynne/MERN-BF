{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [departments, setDepartments] = useState([]);\n  const [positions, setPositions] = useState({});\n  const [editingUser, setEditingUser] = useState(null);\n  useEffect(() => {\n    getUsers();\n    fetchDepartments();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setDepartments(response.data);\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error);\n    }\n  };\n\n  const fetchPositions = async dep_id => {\n    try {\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\n      setPositions(prev => ({ ...prev,\n        [dep_id]: response.data\n      }));\n    } catch (error) {\n      console.error(\"Error fetching positions:\", error);\n    }\n  };\n\n  const handleEdit = user => {\n    setEditingUser(user);\n    fetchPositions(user.job_id);\n  };\n\n  const handleChange = (e, field) => {\n    setEditingUser({ ...editingUser,\n      [field]: e.target.value\n    });\n  };\n\n  const handleSave = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/users/${id}`, {\n        full_name: editingUser.full_name,\n        email: editingUser.email,\n        job_id: editingUser.job_id,\n        position_id: editingUser.position_id\n      });\n      setEditingUser(null);\n      getUsers();\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  const filteredUsers = users.filter(user => `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between m-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Full Name, Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/AddEmployee\",\n            className: \"button is-success mr-1\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-striped is-fullwidth\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: displayedUsers.length > 0 ? displayedUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (editingUser === null || editingUser === void 0 ? void 0 : editingUser.id) === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: editingUser.full_name,\n                  onChange: e => handleChange(e, \"full_name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this) : user.full_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (editingUser === null || editingUser === void 0 ? void 0 : editingUser.id) === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"input\",\n                  value: editingUser.email,\n                  onChange: e => handleChange(e, \"email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 25\n                }, this) : user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (editingUser === null || editingUser === void 0 ? void 0 : editingUser.id) === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input\",\n                  value: editingUser.job_id,\n                  onChange: e => {\n                    handleChange(e, \"job_id\");\n                    fetchPositions(e.target.value);\n                  },\n                  children: departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: dep.id,\n                    children: dep.Job_Title\n                  }, dep.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this) : user.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (editingUser === null || editingUser === void 0 ? void 0 : editingUser.id) === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input\",\n                  value: editingUser.position_id,\n                  onChange: e => handleChange(e, \"position_id\"),\n                  children: (positions[editingUser.job_id] || []).map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pos.id,\n                    children: pos.position\n                  }, pos.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this) : user.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(editingUser === null || editingUser === void 0 ? void 0 : editingUser.id) === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSave(user.id),\n                  className: \"button is-small is-success\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(user),\n                  className: \"button is-small is-info mr-2\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setOpen(true) && setDeleteData(user),\n                  className: \"button is-small is-danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"has-text-centered\",\n                children: \"No users found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmBox, {\n        open: open,\n        closeDialog: () => setOpen(false),\n        title: deleteData === null || deleteData === void 0 ? void 0 : deleteData.full_name,\n        empID: deleteData === null || deleteData === void 0 ? void 0 : deleteData.id,\n        deleteFunction: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"oMPfRbg2IZS/8weo0zGovt8xvm4=\");\n\n_c = UserList;\nexport default UserList; // import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\n// const UserList = () => {\n//   const [users, setUser] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [entriesToShow, setEntriesToShow] = useState(10);\n//   useEffect(() => {\n//     getUsers();\n//   }, []);\n//   const getUsers = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/users\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching users:\", error);\n//     }\n//   };\n//   const deleteUser = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/users/${id}`);\n//       getUsers();\n//     } catch (error) {\n//       console.error(\"Error deleting user:\", error);\n//     }\n//   };\n//   // Filter users based on search term\n//   const filteredUsers = users.filter((user) =>\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\n//       .toLowerCase()\n//       .includes(searchTerm.toLowerCase())\n//   );\n//   // Limit displayed entries based on selection\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\n//   return (\n//     <div className=\"container mt-5\">\n//       {/* Search Bar and Action Buttons */}\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"input\"\n//           style={{ maxWidth: \"300px\" }}\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <div>\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\n//             Add Employee\n//           </Link>\n//           <PDFDownloadLink\n//             document={<EmployePDF users={users} />}\n//             fileName=\"Employee_Report.pdf\"\n//             className=\"button is-info mr-3\"\n//           >\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\n//           </PDFDownloadLink>\n//         </div>\n//       </div>\n//       {/* Employee Table */}\n//       <table className=\"table is-striped is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>Employee ID</th>\n//             <th>Full Name</th>\n//             <th>Email</th>\n//             <th>Gender</th>\n//             <th>Job Title</th>\n//             <th>Position / Level</th>\n//             <th>Salary</th>\n//             <th>Annual Salary</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayedUsers.length > 0 ? (\n//             displayedUsers.map((user) => (\n//               <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.full_name}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.gender}</td>\n//                 <td>{user.Job_Title}</td>\n//                 <td>{user.position}</td>\n//                 <td>\n//                   {user.salary\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n//                         minimumFractionDigits: 2,\n//                       })}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   {user.anual_salary\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\n//                         \"en-PH\",\n//                         {\n//                           minimumFractionDigits: 2,\n//                         }\n//                       )}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   <Link\n//                     to={`edit/${user.id}`}\n//                     className=\"button is-small is-info mr-2\"\n//                   >\n//                     Edit\n//                   </Link>\n//                   <button\n//                     onClick={() => deleteUser(user.id)}\n//                     className=\"button is-small is-danger\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"9\" className=\"has-text-centered\">\n//                 No users found.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {/* Footer with Entry Filter */}\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\n//         <div>\n//           <label className=\"mr-2\">Show entries:</label>\n//           <div className=\"select\">\n//             <select\n//               value={entriesToShow}\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\n//             >\n//               <option value=\"5\">5</option>\n//               <option value=\"10\">10</option>\n//               <option value=\"20\">20</option>\n//               <option value={filteredUsers.length}>All</option>\n//             </select>\n//           </div>\n//         </div>\n//         <p>\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","departments","setDepartments","positions","setPositions","editingUser","setEditingUser","getUsers","fetchDepartments","handleResize","addEventListener","removeEventListener","response","get","data","error","console","fetchPositions","dep_id","prev","handleEdit","user","job_id","handleChange","e","field","target","value","handleSave","id","patch","full_name","email","position_id","filteredUsers","filter","Job_Title","position","toLowerCase","includes","displayedUsers","slice","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","length","map","dep","pos"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [positions, setPositions] = useState({});\r\n  const [editingUser, setEditingUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    fetchDepartments();\r\n\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchPositions = async (dep_id) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/salary/getPosition/${dep_id}`\r\n      );\r\n      setPositions((prev) => ({ ...prev, [dep_id]: response.data }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching positions:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setEditingUser(user);\r\n    fetchPositions(user.job_id);\r\n  };\r\n\r\n  const handleChange = (e, field) => {\r\n    setEditingUser({ ...editingUser, [field]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, {\r\n        full_name: editingUser.full_name,\r\n        email: editingUser.email,\r\n        job_id: editingUser.job_id,\r\n        position_id: editingUser.position_id,\r\n      });\r\n      setEditingUser(null);\r\n      getUsers();\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      {/* Background */}\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div className=\"column container mt-5\" style={{ position: \"relative\", zIndex: 1 }}>\r\n        <div className=\"is-flex is-justify-content-space-between m-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Full Name, Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div>\r\n            <Link to=\"/home/AddEmployee\" className=\"button is-success mr-1\">\r\n              Add Employee\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"table-container overflow-x-auto\">\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Employee ID</th>\r\n                <th>Full Name</th>\r\n                <th>Email</th>\r\n                <th>Job Title</th>\r\n                <th>Position</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedUsers.length > 0 ? (\r\n                displayedUsers.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>\r\n                      {editingUser?.id === user.id ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"input\"\r\n                          value={editingUser.full_name}\r\n                          onChange={(e) => handleChange(e, \"full_name\")}\r\n                        />\r\n                      ) : (\r\n                        user.full_name\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingUser?.id === user.id ? (\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"input\"\r\n                          value={editingUser.email}\r\n                          onChange={(e) => handleChange(e, \"email\")}\r\n                        />\r\n                      ) : (\r\n                        user.email\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingUser?.id === user.id ? (\r\n                        <select\r\n                          className=\"input\"\r\n                          value={editingUser.job_id}\r\n                          onChange={(e) => {\r\n                            handleChange(e, \"job_id\");\r\n                            fetchPositions(e.target.value);\r\n                          }}\r\n                        >\r\n                          {departments.map((dep) => (\r\n                            <option key={dep.id} value={dep.id}>\r\n                              {dep.Job_Title}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        user.Job_Title\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingUser?.id === user.id ? (\r\n                        <select\r\n                          className=\"input\"\r\n                          value={editingUser.position_id}\r\n                          onChange={(e) => handleChange(e, \"position_id\")}\r\n                        >\r\n                          {(positions[editingUser.job_id] || []).map((pos) => (\r\n                            <option key={pos.id} value={pos.id}>\r\n                              {pos.position}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        user.position\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingUser?.id === user.id ? (\r\n                        <button\r\n                          onClick={() => handleSave(user.id)}\r\n                          className=\"button is-small is-success\"\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => handleEdit(user)}\r\n                          className=\"button is-small is-info mr-2\"\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        onClick={() => setOpen(true) && setDeleteData(user)}\r\n                        className=\"button is-small is-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"has-text-centered\">\r\n                    No users found.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <ConfirmBox\r\n          open={open}\r\n          closeDialog={() => setOpen(false)}\r\n          title={deleteData?.full_name}\r\n          empID={deleteData?.id}\r\n          deleteFunction={() => {}}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\r\n\r\n// const UserList = () => {\r\n//   const [users, setUser] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [entriesToShow, setEntriesToShow] = useState(10);\r\n\r\n//   useEffect(() => {\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:5000/users\");\r\n//       setUser(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/users/${id}`);\r\n//       getUsers();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Filter users based on search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n//       .toLowerCase()\r\n//       .includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Limit displayed entries based on selection\r\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       {/* Search Bar and Action Buttons */}\r\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input\"\r\n//           style={{ maxWidth: \"300px\" }}\r\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         <div>\r\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\r\n//             Add Employee\r\n//           </Link>\r\n\r\n//           <PDFDownloadLink\r\n//             document={<EmployePDF users={users} />}\r\n//             fileName=\"Employee_Report.pdf\"\r\n//             className=\"button is-info mr-3\"\r\n//           >\r\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\r\n//           </PDFDownloadLink>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Employee Table */}\r\n//       <table className=\"table is-striped is-fullwidth\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Employee ID</th>\r\n//             <th>Full Name</th>\r\n//             <th>Email</th>\r\n//             <th>Gender</th>\r\n//             <th>Job Title</th>\r\n//             <th>Position / Level</th>\r\n//             <th>Salary</th>\r\n//             <th>Annual Salary</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {displayedUsers.length > 0 ? (\r\n//             displayedUsers.map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.full_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//                 <td>{user.Job_Title}</td>\r\n//                 <td>{user.position}</td>\r\n//                 <td>\r\n//                   {user.salary\r\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n//                         minimumFractionDigits: 2,\r\n//                       })}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   {user.anual_salary\r\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\r\n//                         \"en-PH\",\r\n//                         {\r\n//                           minimumFractionDigits: 2,\r\n//                         }\r\n//                       )}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   <Link\r\n//                     to={`edit/${user.id}`}\r\n//                     className=\"button is-small is-info mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button\r\n//                     onClick={() => deleteUser(user.id)}\r\n//                     className=\"button is-small is-danger\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"9\" className=\"has-text-centered\">\r\n//                 No users found.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Footer with Entry Filter */}\r\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\r\n//         <div>\r\n//           <label className=\"mr-2\">Show entries:</label>\r\n//           <div className=\"select\">\r\n//             <select\r\n//               value={entriesToShow}\r\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n//             >\r\n//               <option value=\"5\">5</option>\r\n//               <option value=\"10\">10</option>\r\n//               <option value=\"20\">20</option>\r\n//               <option value={filteredUsers.length}>All</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <p>\r\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"]},"metadata":{},"sourceType":"module"}