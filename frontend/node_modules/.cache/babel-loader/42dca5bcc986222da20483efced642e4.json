{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\page\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:5000/auth/login', {\n        // Ensure correct URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('authToken', data.token);\n        login(); // Update auth context\n\n        navigate('/home');\n      } else {\n        const errorData = await response.json();\n        console.error(\"Login failed:\", errorData); // Log error details for debugging\n\n        alert(errorData.message || 'Invalid credentials');\n      }\n    } catch (err) {\n      console.error(\"Error during login:\", err);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"hnHou3HvR1dzM0hwPYHhH5cBqKI=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/page/LoginPage.js"],"names":["React","useState","useNavigate","useAuth","LoginPage","email","setEmail","password","setPassword","navigate","login","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","errorData","console","error","alert","message","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/authContext';\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/auth/login', { // Ensure correct URL\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem('authToken', data.token);\r\n        login(); // Update auth context\r\n        navigate('/home');\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error(\"Login failed:\", errorData); // Log error details for debugging\r\n        alert(errorData.message || 'Invalid credentials');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error during login:\", err);\r\n      alert('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin-container\">\r\n      <h2>Sign In</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Sign In</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"]},"metadata":{},"sourceType":"module"}