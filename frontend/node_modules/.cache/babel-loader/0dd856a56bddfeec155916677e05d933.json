{"ast":null,"code":"import { Base } from './Base.js';\nexport class Optional extends Base {\n  constructor(type) {\n    let condition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    super();\n    this.type = type;\n    this.condition = condition;\n  }\n\n  decode(stream, parent) {\n    let {\n      condition\n    } = this;\n\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.decode(stream, parent);\n    }\n  }\n\n  size(val, parent) {\n    let {\n      condition\n    } = this;\n\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.size(val, parent);\n    } else {\n      return 0;\n    }\n  }\n\n  encode(stream, val, parent) {\n    let {\n      condition\n    } = this;\n\n    if (typeof condition === 'function') {\n      condition = condition.call(parent, parent);\n    }\n\n    if (condition) {\n      return this.type.encode(stream, val, parent);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/restructure/src/Optional.js"],"names":["Base","Optional","constructor","type","condition","decode","stream","parent","call","size","val","encode"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,WAAnB;AAEA,OAAO,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;AACjCE,EAAAA,WAAW,CAACC,IAAD,EAAyB;AAAA,QAAlBC,SAAkB,uEAAN,IAAM;AAClC;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACD;;AAEDC,EAAAA,MAAM,CAACC,MAAD,EAASC,MAAT,EAAiB;AACrB,QAAI;AAAEH,MAAAA;AAAF,QAAgB,IAApB;;AACA,QAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnCA,MAAAA,SAAS,GAAGA,SAAS,CAACI,IAAV,CAAeD,MAAf,EAAuBA,MAAvB,CAAZ;AACD;;AAED,QAAIH,SAAJ,EAAe;AACb,aAAO,KAAKD,IAAL,CAAUE,MAAV,CAAiBC,MAAjB,EAAyBC,MAAzB,CAAP;AACD;AACF;;AAEDE,EAAAA,IAAI,CAACC,GAAD,EAAMH,MAAN,EAAc;AAChB,QAAI;AAAEH,MAAAA;AAAF,QAAgB,IAApB;;AACA,QAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnCA,MAAAA,SAAS,GAAGA,SAAS,CAACI,IAAV,CAAeD,MAAf,EAAuBA,MAAvB,CAAZ;AACD;;AAED,QAAIH,SAAJ,EAAe;AACb,aAAO,KAAKD,IAAL,CAAUM,IAAV,CAAeC,GAAf,EAAoBH,MAApB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF;;AAEDI,EAAAA,MAAM,CAACL,MAAD,EAASI,GAAT,EAAcH,MAAd,EAAsB;AAC1B,QAAI;AAAEH,MAAAA;AAAF,QAAgB,IAApB;;AACA,QAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnCA,MAAAA,SAAS,GAAGA,SAAS,CAACI,IAAV,CAAeD,MAAf,EAAuBA,MAAvB,CAAZ;AACD;;AAED,QAAIH,SAAJ,EAAe;AACb,aAAO,KAAKD,IAAL,CAAUQ,MAAV,CAAiBL,MAAjB,EAAyBI,GAAzB,EAA8BH,MAA9B,CAAP;AACD;AACF;;AAxCgC","sourcesContent":["import {Base} from './Base.js';\r\n\r\nexport class Optional extends Base {\r\n  constructor(type, condition = true) {\r\n    super();\r\n    this.type = type;\r\n    this.condition = condition;\r\n  }\r\n\r\n  decode(stream, parent) {\r\n    let { condition } = this;\r\n    if (typeof condition === 'function') {\r\n      condition = condition.call(parent, parent);\r\n    }\r\n\r\n    if (condition) {\r\n      return this.type.decode(stream, parent);\r\n    }\r\n  }\r\n\r\n  size(val, parent) {\r\n    let { condition } = this;\r\n    if (typeof condition === 'function') {\r\n      condition = condition.call(parent, parent);\r\n    }\r\n\r\n    if (condition) {\r\n      return this.type.size(val, parent);\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  encode(stream, val, parent) {\r\n    let { condition } = this;\r\n    if (typeof condition === 'function') {\r\n      condition = condition.call(parent, parent);\r\n    }\r\n\r\n    if (condition) {\r\n      return this.type.encode(stream, val, parent);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}