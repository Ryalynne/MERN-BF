{"ast":null,"code":"const namedEdges = {\n  start: 0,\n  center: 0.5,\n  end: 1\n};\n\nfunction resolveEdge(edge, length) {\n  let inset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let delta = 0;\n  /**\r\n   * If we have this edge defined as a preset, replace the definition\r\n   * with the numerical value.\r\n   */\n\n  if (edge in namedEdges) {\n    edge = namedEdges[edge];\n  }\n  /**\r\n   * Handle unit values\r\n   */\n\n\n  if (typeof edge === \"string\") {\n    const asNumber = parseFloat(edge);\n\n    if (edge.endsWith(\"px\")) {\n      delta = asNumber;\n    } else if (edge.endsWith(\"%\")) {\n      edge = asNumber / 100;\n    } else if (edge.endsWith(\"vw\")) {\n      delta = asNumber / 100 * document.documentElement.clientWidth;\n    } else if (edge.endsWith(\"vh\")) {\n      delta = asNumber / 100 * document.documentElement.clientHeight;\n    } else {\n      edge = asNumber;\n    }\n  }\n  /**\r\n   * If the edge is defined as a number, handle as a progress value.\r\n   */\n\n\n  if (typeof edge === \"number\") {\n    delta = length * edge;\n  }\n\n  return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs"],"names":["namedEdges","start","center","end","resolveEdge","edge","length","inset","delta","asNumber","parseFloat","endsWith","document","documentElement","clientWidth","clientHeight"],"mappings":"AAAA,MAAMA,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,CADQ;AAEfC,EAAAA,MAAM,EAAE,GAFO;AAGfC,EAAAA,GAAG,EAAE;AAHU,CAAnB;;AAKA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAA8C;AAAA,MAAXC,KAAW,uEAAH,CAAG;AAC1C,MAAIC,KAAK,GAAG,CAAZ;AACA;AACJ;AACA;AACA;;AACI,MAAIH,IAAI,IAAIL,UAAZ,EAAwB;AACpBK,IAAAA,IAAI,GAAGL,UAAU,CAACK,IAAD,CAAjB;AACH;AACD;AACJ;AACA;;;AACI,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,UAAMI,QAAQ,GAAGC,UAAU,CAACL,IAAD,CAA3B;;AACA,QAAIA,IAAI,CAACM,QAAL,CAAc,IAAd,CAAJ,EAAyB;AACrBH,MAAAA,KAAK,GAAGC,QAAR;AACH,KAFD,MAGK,IAAIJ,IAAI,CAACM,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACzBN,MAAAA,IAAI,GAAGI,QAAQ,GAAG,GAAlB;AACH,KAFI,MAGA,IAAIJ,IAAI,CAACM,QAAL,CAAc,IAAd,CAAJ,EAAyB;AAC1BH,MAAAA,KAAK,GAAIC,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBC,WAApD;AACH,KAFI,MAGA,IAAIT,IAAI,CAACM,QAAL,CAAc,IAAd,CAAJ,EAAyB;AAC1BH,MAAAA,KAAK,GAAIC,QAAQ,GAAG,GAAZ,GAAmBG,QAAQ,CAACC,eAAT,CAAyBE,YAApD;AACH,KAFI,MAGA;AACDV,MAAAA,IAAI,GAAGI,QAAP;AACH;AACJ;AACD;AACJ;AACA;;;AACI,MAAI,OAAOJ,IAAP,KAAgB,QAApB,EAA8B;AAC1BG,IAAAA,KAAK,GAAGF,MAAM,GAAGD,IAAjB;AACH;;AACD,SAAOE,KAAK,GAAGC,KAAf;AACH;;AAED,SAASR,UAAT,EAAqBI,WAArB","sourcesContent":["const namedEdges = {\r\n    start: 0,\r\n    center: 0.5,\r\n    end: 1,\r\n};\r\nfunction resolveEdge(edge, length, inset = 0) {\r\n    let delta = 0;\r\n    /**\r\n     * If we have this edge defined as a preset, replace the definition\r\n     * with the numerical value.\r\n     */\r\n    if (edge in namedEdges) {\r\n        edge = namedEdges[edge];\r\n    }\r\n    /**\r\n     * Handle unit values\r\n     */\r\n    if (typeof edge === \"string\") {\r\n        const asNumber = parseFloat(edge);\r\n        if (edge.endsWith(\"px\")) {\r\n            delta = asNumber;\r\n        }\r\n        else if (edge.endsWith(\"%\")) {\r\n            edge = asNumber / 100;\r\n        }\r\n        else if (edge.endsWith(\"vw\")) {\r\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\r\n        }\r\n        else if (edge.endsWith(\"vh\")) {\r\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\r\n        }\r\n        else {\r\n            edge = asNumber;\r\n        }\r\n    }\r\n    /**\r\n     * If the edge is defined as a number, handle as a progress value.\r\n     */\r\n    if (typeof edge === \"number\") {\r\n        delta = length * edge;\r\n    }\r\n    return inset + delta;\r\n}\r\n\r\nexport { namedEdges, resolveEdge };\r\n"]},"metadata":{},"sourceType":"module"}