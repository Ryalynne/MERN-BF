{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\JobTitle\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DepartList() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingJobId, setEditingJobId] = useState(null);\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\n  const [newJobTitle, setNewJobTitle] = useState(\"\");\n  const [isAdding, setIsAdding] = useState(false);\n  const [error, setError] = useState(false); // Validation state for new job title\n\n  useEffect(() => {\n    fetchJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      console.log(\"Raw GET response:\", response);\n      console.log(\"Fetched jobs data:\", response.data);\n\n      if (!response.data) {\n        console.error(\"API returned null or undefined\");\n        setJobs([]);\n        return;\n      }\n\n      const data = Array.isArray(response.data) ? response.data : [];\n      const sanitizedJobs = data.filter(job => job !== null && typeof job === \"object\").map(job => {\n        const title = job.Job_Title || job.job_title || job.Department_Name || job.department_name || \"\";\n        const id = job.id || job.ID || Date.now() + Math.random();\n        return {\n          id,\n          Job_Title: title\n        };\n      });\n      console.log(\"Sanitized jobs:\", sanitizedJobs);\n      setJobs(sanitizedJobs);\n    } catch (error) {\n      console.error(\"Error fetching job titles:\", error);\n      setJobs([]);\n    }\n  };\n\n  const startAdding = () => {\n    setIsAdding(true);\n    setNewJobTitle(\"\");\n    setError(false); // Reset error on start\n  };\n\n  const cancelAdding = () => {\n    setIsAdding(false);\n    setNewJobTitle(\"\");\n    setError(false); // Reset error on cancel\n  };\n\n  const saveNewJob = async () => {\n    if (!newJobTitle.trim()) {\n      setError(true); // Set error if field is empty\n\n      return;\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/job\", {\n        Department_Name: newJobTitle\n      });\n      setNewJobTitle(\"\");\n      console.log(\"POST Response:\", response.data);\n\n      if (!response.data || typeof response.data !== \"object\") {\n        console.error(\"Invalid POST response:\", response.data);\n        fetchJobs();\n        return;\n      }\n\n      fetchJobs();\n      setIsAdding(false);\n      setError(false); // Reset error on success\n\n      alert(\"Job Title added successfully!\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      console.error(\"Error adding job title:\", error);\n      alert(\"Failed to add Job Title: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  };\n\n  const startEditing = job => {\n    setEditingJobId(job.id);\n    setEditedJobTitle(job.Job_Title || \"\");\n  };\n\n  const cancelEditing = () => {\n    setEditingJobId(null);\n    setEditedJobTitle(\"\");\n  };\n\n  const saveJobTitle = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/job/${id}`, {\n        job_title: editedJobTitle\n      });\n      setJobs(jobs.map(job => job.id === id ? { ...job,\n        Job_Title: editedJobTitle\n      } : job));\n      setEditingJobId(null);\n      alert(\"Job title updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating job title:\", error);\n      alert(\"Failed to update job title\");\n    }\n  };\n\n  const handleNewJobChange = e => {\n    setNewJobTitle(e.target.value);\n\n    if (e.target.value.trim()) {\n      setError(false); // Clear error when user starts typing valid input\n    }\n  };\n\n  const filteredJobs = jobs.filter(job => job && typeof job === \"object\").filter(job => (job.Job_Title || \"\").toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search Job Title...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), !isMobile && !isAdding && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-success ml-3\",\n          onClick: startAdding,\n          children: \"Add Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home/AddJob\",\n          className: \"button is-success ml-3\",\n          children: \"Add Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [isAdding && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: newJobTitle,\n                onChange: handleNewJobChange,\n                placeholder: \"Enter new job title\",\n                style: {\n                  borderColor: error ? \"red\" : \"\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-success mr-2\",\n                onClick: saveNewJob,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-danger\",\n                onClick: cancelAdding,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.id || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: editedJobTitle,\n                onChange: e => setEditedJobTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this) : job.Job_Title || \"Untitled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingJobId === job.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-success mr-2\",\n                  onClick: () => saveJobTitle(job.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-danger\",\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-info mr-2\",\n                onClick: () => startEditing(job),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, job.id || Math.random(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: displayedJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: job.Job_Title || \"Untitled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subtitle is-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Job ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), \" \", job.id || \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/editJobTitle/${job.id}`,\n                className: \"card-footer-item button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)\n        }, job.id || Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-2\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entriesToShow,\n              onChange: e => setEntriesToShow(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: filteredJobs.length,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", displayedJobs.length, \" of \", filteredJobs.length, \" entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartList, \"e+M8UEsh5Qnb7DXSWKLiy+UuhdM=\");\n\n_c = DepartList;\nexport default DepartList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/JobTitle/JobList.js"],"names":["React","useState","useEffect","axios","Link","DepartList","jobs","setJobs","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingJobId","setEditingJobId","editedJobTitle","setEditedJobTitle","newJobTitle","setNewJobTitle","isAdding","setIsAdding","error","setError","fetchJobs","handleResize","addEventListener","removeEventListener","response","get","console","log","data","Array","isArray","sanitizedJobs","filter","job","map","title","Job_Title","job_title","Department_Name","department_name","id","ID","Date","now","Math","random","startAdding","cancelAdding","saveNewJob","trim","post","alert","message","startEditing","cancelEditing","saveJobTitle","patch","handleNewJobChange","e","target","value","filteredJobs","toLowerCase","includes","displayedJobs","slice","position","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","borderColor","Number","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DepartList() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingJobId, setEditingJobId] = useState(null);\r\n  const [editedJobTitle, setEditedJobTitle] = useState(\"\");\r\n  const [newJobTitle, setNewJobTitle] = useState(\"\");\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [error, setError] = useState(false); // Validation state for new job title\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      console.log(\"Raw GET response:\", response);\r\n      console.log(\"Fetched jobs data:\", response.data);\r\n\r\n      if (!response.data) {\r\n        console.error(\"API returned null or undefined\");\r\n        setJobs([]);\r\n        return;\r\n      }\r\n\r\n      const data = Array.isArray(response.data) ? response.data : [];\r\n      const sanitizedJobs = data\r\n        .filter((job) => job !== null && typeof job === \"object\")\r\n        .map((job) => {\r\n          const title =\r\n            job.Job_Title ||\r\n            job.job_title ||\r\n            job.Department_Name ||\r\n            job.department_name ||\r\n            \"\";\r\n          const id = job.id || job.ID || Date.now() + Math.random();\r\n          return { id, Job_Title: title };\r\n        });\r\n\r\n      console.log(\"Sanitized jobs:\", sanitizedJobs);\r\n      setJobs(sanitizedJobs);\r\n    } catch (error) {\r\n      console.error(\"Error fetching job titles:\", error);\r\n      setJobs([]);\r\n    }\r\n  };\r\n\r\n  const startAdding = () => {\r\n    setIsAdding(true);\r\n    setNewJobTitle(\"\");\r\n    setError(false); // Reset error on start\r\n  };\r\n\r\n  const cancelAdding = () => {\r\n    setIsAdding(false);\r\n    setNewJobTitle(\"\");\r\n    setError(false); // Reset error on cancel\r\n  };\r\n\r\n  const saveNewJob = async () => {\r\n    if (!newJobTitle.trim()) {\r\n      setError(true); // Set error if field is empty\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/job\", {\r\n        Department_Name: newJobTitle,\r\n      });\r\n      setNewJobTitle(\"\");\r\n      console.log(\"POST Response:\", response.data);\r\n\r\n      if (!response.data || typeof response.data !== \"object\") {\r\n        console.error(\"Invalid POST response:\", response.data);\r\n        fetchJobs();\r\n        return;\r\n      }\r\n\r\n      fetchJobs();\r\n      setIsAdding(false);\r\n      setError(false); // Reset error on success\r\n      alert(\"Job Title added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding job title:\", error);\r\n      alert(\r\n        \"Failed to add Job Title: \" +\r\n          (error.response?.data?.message || error.message)\r\n      );\r\n    }\r\n  };\r\n\r\n  const startEditing = (job) => {\r\n    setEditingJobId(job.id);\r\n    setEditedJobTitle(job.Job_Title || \"\");\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingJobId(null);\r\n    setEditedJobTitle(\"\");\r\n  };\r\n\r\n  const saveJobTitle = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/job/${id}`, {\r\n        job_title: editedJobTitle,\r\n      });\r\n      setJobs(\r\n        jobs.map((job) =>\r\n          job.id === id ? { ...job, Job_Title: editedJobTitle } : job\r\n        )\r\n      );\r\n      setEditingJobId(null);\r\n      alert(\"Job title updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating job title:\", error);\r\n      alert(\"Failed to update job title\");\r\n    }\r\n  };\r\n\r\n  const handleNewJobChange = (e) => {\r\n    setNewJobTitle(e.target.value);\r\n    if (e.target.value.trim()) {\r\n      setError(false); // Clear error when user starts typing valid input\r\n    }\r\n  };\r\n\r\n  const filteredJobs = jobs\r\n    .filter((job) => job && typeof job === \"object\")\r\n    .filter((job) =>\r\n      (job.Job_Title || \"\").toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  const displayedJobs = filteredJobs.slice(0, entriesToShow);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div\r\n        className=\"column container mt-5\"\r\n        style={{ position: \"relative\", zIndex: 1 }}\r\n      >\r\n        <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search Job Title...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          {!isMobile && !isAdding && (\r\n            <button className=\"button is-success ml-3\" onClick={startAdding}>\r\n              Add Job Title\r\n            </button>\r\n          )}\r\n          {isMobile && (\r\n            <Link to=\"/home/AddJob\" className=\"button is-success ml-3\">\r\n              Add Job Title\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        {!isMobile ? (\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Job ID</th>\r\n                <th>Job Title</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isAdding && (\r\n                <tr>\r\n                  <td>New</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"input\"\r\n                      value={newJobTitle}\r\n                      onChange={handleNewJobChange}\r\n                      placeholder=\"Enter new job title\"\r\n                      style={{ borderColor: error ? \"red\" : \"\" }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"button is-small is-success mr-2\"\r\n                      onClick={saveNewJob}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                    <button\r\n                      className=\"button is-small is-danger\"\r\n                      onClick={cancelAdding}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {displayedJobs.map((job) => (\r\n                <tr key={job.id || Math.random()}>\r\n                  <td>{job.id || \"N/A\"}</td>\r\n                  <td>\r\n                    {editingJobId === job.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={editedJobTitle}\r\n                        onChange={(e) => setEditedJobTitle(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      job.Job_Title || \"Untitled\"\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingJobId === job.id ? (\r\n                      <>\r\n                        <button\r\n                          className=\"button is-small is-success mr-2\"\r\n                          onClick={() => saveJobTitle(job.id)}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                        <button\r\n                          className=\"button is-small is-danger\"\r\n                          onClick={cancelEditing}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button\r\n                        className=\"button is-small is-info mr-2\"\r\n                        onClick={() => startEditing(job)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"columns is-multiline\">\r\n            {displayedJobs.map((job) => (\r\n              <div key={job.id || Math.random()} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                      {job.Job_Title || \"Untitled\"}\r\n                    </p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p className=\"subtitle is-6\">\r\n                      <strong>Job ID:</strong> {job.id || \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/editJobTitle/${job.id}`}\r\n                      className=\"card-footer-item button is-small is-info\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select\r\n                value={entriesToShow}\r\n                onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n              >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value={filteredJobs.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Showing {displayedJobs.length} of {filteredJobs.length} entries\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DepartList;"]},"metadata":{},"sourceType":"module"}