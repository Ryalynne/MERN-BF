{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingUserId, setEditingUserId] = useState(null);\n  const [editedUser, setEditedUser] = useState({});\n  const [departments, setDepartments] = useState([]);\n  const [positions, setPositions] = useState([]);\n  useEffect(() => {\n    getUsers();\n    fetchDepartments();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useEffect(() => {\n    if (editedUser.job_id) {\n      fetchPositions(editedUser.job_id);\n    }\n  }, [editedUser.job_id]);\n  useEffect(() => {\n    const selectedPosition = positions.find(pos => String(pos.id) === String(editedUser.salary_id));\n    setEditedUser(prev => ({ ...prev,\n      salary: selectedPosition ? selectedPosition.salary : \"\"\n    }));\n  }, [editedUser.salary_id, positions]);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      setDepartments(response.data);\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error);\n    }\n  };\n\n  const fetchPositions = async dep_id => {\n    try {\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\n      setPositions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching positions:\", error);\n    }\n  };\n\n  const startEditing = user => {\n    setEditingUserId(user.id);\n    setEditedUser(user);\n    fetchPositions(user.job_id);\n  };\n\n  const cancelEditing = () => {\n    setEditingUserId(null);\n    setEditedUser({});\n  };\n\n  const saveUser = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/users/${id}`, editedUser);\n      setUsers(users.map(user => user.id === id ? { ...user,\n        ...editedUser\n      } : user));\n      setEditingUserId(null);\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between m-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Full Name, Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => {\n            var _editedUser$salary;\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"input\",\n                  value: editedUser.full_name || \"\",\n                  onChange: e => setEditedUser({ ...editedUser,\n                    full_name: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this) : user.full_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input\",\n                  value: editedUser.job_id || \"\",\n                  onChange: e => setEditedUser({ ...editedUser,\n                    job_id: e.target.value\n                  }),\n                  children: departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: dep.id,\n                    children: dep.Job_Title\n                  }, dep.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this) : user.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"input\",\n                  value: editedUser.salary_id || \"\",\n                  onChange: e => setEditedUser({ ...editedUser,\n                    salary_id: e.target.value\n                  }),\n                  children: positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pos.id,\n                    children: pos.position\n                  }, pos.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this) : user.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u20B1\", ((_editedUser$salary = editedUser.salary) === null || _editedUser$salary === void 0 ? void 0 : _editedUser$salary.toLocaleString(\"en-PH\")) || \"-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button is-small is-success mr-2\",\n                    onClick: () => saveUser(user.id),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button is-small is-danger\",\n                    onClick: cancelEditing,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-info mr-2\",\n                  onClick: () => startEditing(user),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"YvtunPClcsepLZziiXy6a31Rm38=\");\n\n_c = UserList;\nexport default UserList; // import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\n// const UserList = () => {\n//   const [users, setUser] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [entriesToShow, setEntriesToShow] = useState(10);\n//   useEffect(() => {\n//     getUsers();\n//   }, []);\n//   const getUsers = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/users\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching users:\", error);\n//     }\n//   };\n//   const deleteUser = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/users/${id}`);\n//       getUsers();\n//     } catch (error) {\n//       console.error(\"Error deleting user:\", error);\n//     }\n//   };\n//   // Filter users based on search term\n//   const filteredUsers = users.filter((user) =>\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\n//       .toLowerCase()\n//       .includes(searchTerm.toLowerCase())\n//   );\n//   // Limit displayed entries based on selection\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\n//   return (\n//     <div className=\"container mt-5\">\n//       {/* Search Bar and Action Buttons */}\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"input\"\n//           style={{ maxWidth: \"300px\" }}\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <div>\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\n//             Add Employee\n//           </Link>\n//           <PDFDownloadLink\n//             document={<EmployePDF users={users} />}\n//             fileName=\"Employee_Report.pdf\"\n//             className=\"button is-info mr-3\"\n//           >\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\n//           </PDFDownloadLink>\n//         </div>\n//       </div>\n//       {/* Employee Table */}\n//       <table className=\"table is-striped is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>Employee ID</th>\n//             <th>Full Name</th>\n//             <th>Email</th>\n//             <th>Gender</th>\n//             <th>Job Title</th>\n//             <th>Position / Level</th>\n//             <th>Salary</th>\n//             <th>Annual Salary</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayedUsers.length > 0 ? (\n//             displayedUsers.map((user) => (\n//               <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.full_name}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.gender}</td>\n//                 <td>{user.Job_Title}</td>\n//                 <td>{user.position}</td>\n//                 <td>\n//                   {user.salary\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n//                         minimumFractionDigits: 2,\n//                       })}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   {user.anual_salary\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\n//                         \"en-PH\",\n//                         {\n//                           minimumFractionDigits: 2,\n//                         }\n//                       )}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   <Link\n//                     to={`edit/${user.id}`}\n//                     className=\"button is-small is-info mr-2\"\n//                   >\n//                     Edit\n//                   </Link>\n//                   <button\n//                     onClick={() => deleteUser(user.id)}\n//                     className=\"button is-small is-danger\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"9\" className=\"has-text-centered\">\n//                 No users found.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {/* Footer with Entry Filter */}\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\n//         <div>\n//           <label className=\"mr-2\">Show entries:</label>\n//           <div className=\"select\">\n//             <select\n//               value={entriesToShow}\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\n//             >\n//               <option value=\"5\">5</option>\n//               <option value=\"10\">10</option>\n//               <option value=\"20\">20</option>\n//               <option value={filteredUsers.length}>All</option>\n//             </select>\n//           </div>\n//         </div>\n//         <p>\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","editingUserId","setEditingUserId","editedUser","setEditedUser","departments","setDepartments","positions","setPositions","getUsers","fetchDepartments","handleResize","addEventListener","removeEventListener","job_id","fetchPositions","selectedPosition","find","pos","String","id","salary_id","prev","salary","response","get","data","error","console","dep_id","startEditing","user","cancelEditing","saveUser","patch","map","position","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","maxWidth","e","target","value","full_name","email","dep","Job_Title","toLocaleString"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n  const [editedUser, setEditedUser] = useState({});\r\n  const [departments, setDepartments] = useState([]);\r\n  const [positions, setPositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    fetchDepartments();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (editedUser.job_id) {\r\n      fetchPositions(editedUser.job_id);\r\n    }\r\n  }, [editedUser.job_id]);\r\n\r\n  useEffect(() => {\r\n    const selectedPosition = positions.find(pos => String(pos.id) === String(editedUser.salary_id));\r\n    setEditedUser(prev => ({ ...prev, salary: selectedPosition ? selectedPosition.salary : \"\" }));\r\n  }, [editedUser.salary_id, positions]);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchPositions = async (dep_id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\r\n      setPositions(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching positions:\", error);\r\n    }\r\n  };\r\n\r\n  const startEditing = (user) => {\r\n    setEditingUserId(user.id);\r\n    setEditedUser(user);\r\n    fetchPositions(user.job_id);\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingUserId(null);\r\n    setEditedUser({});\r\n  };\r\n\r\n  const saveUser = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, editedUser);\r\n      setUsers(users.map(user => (user.id === id ? { ...user, ...editedUser } : user)));\r\n      setEditingUserId(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div className=\"column container mt-5\" style={{ position: \"relative\", zIndex: 1 }}>\r\n        <div className=\"is-flex is-justify-content-space-between m-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Full Name, Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {!isMobile ? (\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Employee ID</th>\r\n                <th>Full Name</th>\r\n                <th>Email</th>\r\n                <th>Job Title</th>\r\n                <th>Position</th>\r\n                <th>Salary</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={editedUser.full_name || \"\"}\r\n                        onChange={(e) => setEditedUser({ ...editedUser, full_name: e.target.value })}\r\n                      />\r\n                    ) : (\r\n                      user.full_name\r\n                    )}\r\n                  </td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <select\r\n                        className=\"input\"\r\n                        value={editedUser.job_id || \"\"}\r\n                        onChange={(e) => setEditedUser({ ...editedUser, job_id: e.target.value })}\r\n                      >\r\n                        {departments.map(dep => (\r\n                          <option key={dep.id} value={dep.id}>{dep.Job_Title}</option>\r\n                        ))}\r\n                      </select>\r\n                    ) : (\r\n                      user.Job_Title\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <select\r\n                        className=\"input\"\r\n                        value={editedUser.salary_id || \"\"}\r\n                        onChange={(e) => setEditedUser({ ...editedUser, salary_id: e.target.value })}\r\n                      >\r\n                        {positions.map(pos => (\r\n                          <option key={pos.id} value={pos.id}>{pos.position}</option>\r\n                        ))}\r\n                      </select>\r\n                    ) : (\r\n                      user.position\r\n                    )}\r\n                  </td>\r\n                  <td>₱{editedUser.salary?.toLocaleString(\"en-PH\") || \"-\"}</td>\r\n                  <td>\r\n                    {editingUserId === user.id ? (\r\n                      <>\r\n                        <button className=\"button is-small is-success mr-2\" onClick={() => saveUser(user.id)}>Save</button>\r\n                        <button className=\"button is-small is-danger\" onClick={cancelEditing}>Cancel</button>\r\n                      </>\r\n                    ) : (\r\n                      <button className=\"button is-small is-info mr-2\" onClick={() => startEditing(user)}>Edit</button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\r\n\r\n// const UserList = () => {\r\n//   const [users, setUser] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [entriesToShow, setEntriesToShow] = useState(10);\r\n\r\n//   useEffect(() => {\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:5000/users\");\r\n//       setUser(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/users/${id}`);\r\n//       getUsers();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Filter users based on search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n//       .toLowerCase()\r\n//       .includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Limit displayed entries based on selection\r\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       {/* Search Bar and Action Buttons */}\r\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input\"\r\n//           style={{ maxWidth: \"300px\" }}\r\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         <div>\r\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\r\n//             Add Employee\r\n//           </Link>\r\n\r\n//           <PDFDownloadLink\r\n//             document={<EmployePDF users={users} />}\r\n//             fileName=\"Employee_Report.pdf\"\r\n//             className=\"button is-info mr-3\"\r\n//           >\r\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\r\n//           </PDFDownloadLink>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Employee Table */}\r\n//       <table className=\"table is-striped is-fullwidth\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Employee ID</th>\r\n//             <th>Full Name</th>\r\n//             <th>Email</th>\r\n//             <th>Gender</th>\r\n//             <th>Job Title</th>\r\n//             <th>Position / Level</th>\r\n//             <th>Salary</th>\r\n//             <th>Annual Salary</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {displayedUsers.length > 0 ? (\r\n//             displayedUsers.map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.full_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//                 <td>{user.Job_Title}</td>\r\n//                 <td>{user.position}</td>\r\n//                 <td>\r\n//                   {user.salary\r\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n//                         minimumFractionDigits: 2,\r\n//                       })}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   {user.anual_salary\r\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\r\n//                         \"en-PH\",\r\n//                         {\r\n//                           minimumFractionDigits: 2,\r\n//                         }\r\n//                       )}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   <Link\r\n//                     to={`edit/${user.id}`}\r\n//                     className=\"button is-small is-info mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button\r\n//                     onClick={() => deleteUser(user.id)}\r\n//                     className=\"button is-small is-danger\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"9\" className=\"has-text-centered\">\r\n//                 No users found.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Footer with Entry Filter */}\r\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\r\n//         <div>\r\n//           <label className=\"mr-2\">Show entries:</label>\r\n//           <div className=\"select\">\r\n//             <select\r\n//               value={entriesToShow}\r\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n//             >\r\n//               <option value=\"5\">5</option>\r\n//               <option value=\"10\">10</option>\r\n//               <option value=\"20\">20</option>\r\n//               <option value={filteredUsers.length}>All</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <p>\r\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"]},"metadata":{},"sourceType":"module"}