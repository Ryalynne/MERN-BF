{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Salary\\\\SalaryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport SalaryPDF from \"../Printing/SalaryPDF\";\nimport AddSalaryModal from \"../UI/Modal/AddSalaryModel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SalaryList() {\n  _s();\n\n  // State Hooks\n  const [salaries, setSalaries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [editingId, setEditingId] = useState(null);\n  const [editedSalary, setEditedSalary] = useState({});\n  const [jobs, setJobs] = useState([]);\n  const [isModalActive, setIsModalActive] = useState(false); // Modal state\n  // Normalize salary data to handle nulls consistently\n\n  const normalizeSalary = salary => ({\n    id: salary.id || null,\n    Job_Title: salary.Job_Title || \"Untitled\",\n    position: salary.position || \"N/A\",\n    salary: salary.salary || \"0\"\n  }); // Effect Hook for fetching data and handling resize\n\n\n  useEffect(() => {\n    fetchSalaries();\n    fetchJobs();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Fetch salary data from API\n\n  const fetchSalaries = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/salary\");\n      console.log(\"Fetched salaries:\", response.data);\n      const sanitizedSalaries = (response.data || []).map(normalizeSalary);\n      setSalaries(sanitizedSalaries);\n    } catch (error) {\n      console.error(\"Error fetching salaries:\", error);\n      setSalaries([]);\n    }\n  }; // Fetch job titles from API\n\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/job\");\n      console.log(\"Fetched jobs:\", response.data);\n      setJobs(response.data || []);\n    } catch (error) {\n      console.error(\"Error fetching job titles:\", error);\n      setJobs([]);\n    }\n  }; // Filter and slice salaries for display\n\n\n  const filteredSalaries = salaries.filter(salary => `${salary.Job_Title} ${salary.position}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow); // Generate and open salary list PDF\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(SalaryPDF, {\n      salaries: salaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 28\n    }, this)).toBlob();\n    const url = URL.createObjectURL(blob);\n    window.open(url);\n  }; // Start inline editing for a salary record\n\n\n  const startEditing = salary => {\n    console.log(\"Editing Salary:\", salary);\n    const job = jobs.find(j => j.Job_Title === salary.Job_Title);\n    setEditingId(salary.id);\n    setEditedSalary({\n      job_id: job ? job.id : \"\",\n      position: salary.position || \"\",\n      salary: salary.salary || \"\"\n    });\n  }; // Cancel editing\n\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedSalary({});\n  }; // Handle input changes in edit form\n\n\n  const handleEditChange = (e, field) => {\n    const value = e.target.value;\n    console.log(`Edit Field: ${field}, Value: ${value}`);\n    setEditedSalary(prev => ({ ...prev,\n      [field]: value\n    }));\n  }; // Save updated salary record (old update function revised)\n\n\n  const saveSalary = async id => {\n    const updatedSalary = {\n      depId: editedSalary.job_id || null,\n      // Match your API's expected key\n      position: editedSalary.position || \"N/A\",\n      salary: editedSalary.salary || \"0\"\n    };\n\n    if (!updatedSalary.depId) {\n      alert(\"Job Title is required\");\n      return;\n    }\n\n    console.log(\"Saving Salary Payload:\", updatedSalary);\n\n    try {\n      await axios.patch(`http://localhost:5000/salary/${id}`, updatedSalary);\n      await fetchSalaries(); // Refresh data\n\n      setEditingId(null);\n      alert(\"Salary updated successfully!\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n\n      console.error(\"Error updating salary:\", error);\n      alert(\"Failed to update salary: \" + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n    }\n  }; // Handle modal close and refresh data if needed\n\n\n  const handleModalClose = () => {\n    setIsModalActive(false);\n    fetchSalaries(); // Refresh salaries after adding via modal\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        zIndex: -2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input mt-2\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 is-flex\",\n          children: [isMobile ? /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/AddSalary\",\n            className: \"button is-success ml-3\",\n            children: \"Add Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-success ml-3\",\n              onClick: () => setIsModalActive(true),\n              children: \"Add Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddSalaryModal, {\n              isOpen: isModalActive,\n              onClose: handleModalClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleViewPDF,\n            className: \"button is-info ml-3\",\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position / Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedSalaries.map(salary => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: salary.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select is-fullwidth\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editedSalary.job_id || \"\",\n                  onChange: e => handleEditChange(e, \"job_id\"),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a job\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: job.id,\n                    children: job.Job_Title\n                  }, job.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this) : salary.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: editedSalary.position || \"\",\n                onChange: e => handleEditChange(e, \"position\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this) : salary.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"input\",\n                value: editedSalary.salary || \"\",\n                onChange: e => handleEditChange(e, \"salary\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this) : `₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", {\n                minimumFractionDigits: 2\n              })}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === salary.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-success mr-2\",\n                  onClick: () => saveSalary(salary.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"button is-small is-danger\",\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button is-small is-info\",\n                onClick: () => startEditing(salary),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, salary.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: displayedSalaries.map(salary => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: salary.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Salary ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), \" \", salary.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Position:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this), \" \", salary.position]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Salary:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this), \" \", `₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", {\n                  minimumFractionDigits: 2\n                })}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/editSalary/${salary.id}`,\n                className: \"card-footer-item button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)\n        }, salary.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-2\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entriesToShow,\n              onChange: e => setEntriesToShow(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: filteredSalaries.length,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", displayedSalaries.length, \" of \", filteredSalaries.length, \" \", \"entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryList, \"C5WiihdycB8IlBsBsqW+VMUY5SE=\");\n\n_c = SalaryList;\nexport default SalaryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Salary/SalaryList.js"],"names":["React","useState","useEffect","axios","Link","pdf","SalaryPDF","AddSalaryModal","SalaryList","salaries","setSalaries","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingId","setEditingId","editedSalary","setEditedSalary","jobs","setJobs","isModalActive","setIsModalActive","normalizeSalary","salary","id","Job_Title","position","fetchSalaries","fetchJobs","handleResize","addEventListener","removeEventListener","response","get","console","log","data","sanitizedSalaries","map","error","filteredSalaries","filter","toLowerCase","includes","displayedSalaries","slice","handleViewPDF","blob","toBlob","url","URL","createObjectURL","open","startEditing","job","find","j","job_id","cancelEditing","handleEditChange","e","field","value","target","prev","saveSalary","updatedSalary","depId","alert","patch","message","handleModalClose","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","parseFloat","toLocaleString","minimumFractionDigits","Number","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,QAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACgB,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,KAAD,CAAlD,CAToB,CASuC;AAE3D;;AACA,QAAM0B,eAAe,GAAIC,MAAD,KAAa;AACnCC,IAAAA,EAAE,EAAED,MAAM,CAACC,EAAP,IAAa,IADkB;AAEnCC,IAAAA,SAAS,EAAEF,MAAM,CAACE,SAAP,IAAoB,UAFI;AAGnCC,IAAAA,QAAQ,EAAEH,MAAM,CAACG,QAAP,IAAmB,KAHM;AAInCH,IAAAA,MAAM,EAAEA,MAAM,CAACA,MAAP,IAAiB;AAJU,GAAb,CAAxB,CAZoB,CAmBpB;;;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,aAAa;AACbC,IAAAA,SAAS;;AAET,UAAMC,YAAY,GAAG,MAAMlB,WAAW,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAtC;;AACAD,IAAAA,MAAM,CAACkB,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMjB,MAAM,CAACmB,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GAPQ,EAON,EAPM,CAAT,CApBoB,CA6BpB;;AACA,QAAMF,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAN,CAAU,8BAAV,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,QAAQ,CAACI,IAA1C;AACA,YAAMC,iBAAiB,GAAG,CAACL,QAAQ,CAACI,IAAT,IAAiB,EAAlB,EAAsBE,GAAtB,CAA0BhB,eAA1B,CAA1B;AACAjB,MAAAA,WAAW,CAACgC,iBAAD,CAAX;AACD,KALD,CAKE,OAAOE,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACK,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACAlC,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAVD,CA9BoB,CA0CpB;;;AACA,QAAMuB,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAN,CAAU,2BAAV,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,QAAQ,CAACI,IAAtC;AACAjB,MAAAA,OAAO,CAACa,QAAQ,CAACI,IAAT,IAAiB,EAAlB,CAAP;AACD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACK,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACApB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GATD,CA3CoB,CAsDpB;;;AACA,QAAMqB,gBAAgB,GAAGpC,QAAQ,CAACqC,MAAT,CAAiBlB,MAAD,IACtC,GAAEA,MAAM,CAACE,SAAU,IAAGF,MAAM,CAACG,QAAS,EAAvC,CACGgB,WADH,GAEGC,QAFH,CAEYrC,UAAU,CAACoC,WAAX,EAFZ,CADuB,CAAzB;AAKA,QAAME,iBAAiB,GAAGJ,gBAAgB,CAACK,KAAjB,CAAuB,CAAvB,EAA0BrC,aAA1B,CAA1B,CA5DoB,CA8DpB;;AACA,QAAMsC,aAAa,GAAG,YAAY;AAChC,UAAMC,IAAI,GAAG,MAAM/C,GAAG,eAAC,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEI;AAArB;AAAA;AAAA;AAAA;AAAA,YAAD,CAAH,CAAuC4C,MAAvC,EAAnB;AACA,UAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAZ;AACAnC,IAAAA,MAAM,CAACwC,IAAP,CAAYH,GAAZ;AACD,GAJD,CA/DoB,CAqEpB;;;AACA,QAAMI,YAAY,GAAI9B,MAAD,IAAY;AAC/BW,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BZ,MAA/B;AACA,UAAM+B,GAAG,GAAGpC,IAAI,CAACqC,IAAL,CAAWC,CAAD,IAAOA,CAAC,CAAC/B,SAAF,KAAgBF,MAAM,CAACE,SAAxC,CAAZ;AACAV,IAAAA,YAAY,CAACQ,MAAM,CAACC,EAAR,CAAZ;AACAP,IAAAA,eAAe,CAAC;AACdwC,MAAAA,MAAM,EAAEH,GAAG,GAAGA,GAAG,CAAC9B,EAAP,GAAY,EADT;AAEdE,MAAAA,QAAQ,EAAEH,MAAM,CAACG,QAAP,IAAmB,EAFf;AAGdH,MAAAA,MAAM,EAAEA,MAAM,CAACA,MAAP,IAAiB;AAHX,KAAD,CAAf;AAKD,GATD,CAtEoB,CAiFpB;;;AACA,QAAMmC,aAAa,GAAG,MAAM;AAC1B3C,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAHD,CAlFoB,CAuFpB;;;AACA,QAAM0C,gBAAgB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrC,UAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAc0B,KAAM,YAAWC,KAAM,EAAlD;AACA7C,IAAAA,eAAe,CAAE+C,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACH,KAAD,GAASC;AAApB,KAAX,CAAD,CAAf;AACD,GAJD,CAxFoB,CA8FpB;;;AACA,QAAMG,UAAU,GAAG,MAAOzC,EAAP,IAAc;AAC/B,UAAM0C,aAAa,GAAG;AACpBC,MAAAA,KAAK,EAAEnD,YAAY,CAACyC,MAAb,IAAuB,IADV;AACgB;AACpC/B,MAAAA,QAAQ,EAAEV,YAAY,CAACU,QAAb,IAAyB,KAFf;AAGpBH,MAAAA,MAAM,EAAEP,YAAY,CAACO,MAAb,IAAuB;AAHX,KAAtB;;AAMA,QAAI,CAAC2C,aAAa,CAACC,KAAnB,EAA0B;AACxBC,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA;AACD;;AAEDlC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC+B,aAAtC;;AACA,QAAI;AACF,YAAMpE,KAAK,CAACuE,KAAN,CAAa,gCAA+B7C,EAAG,EAA/C,EAAkD0C,aAAlD,CAAN;AACA,YAAMvC,aAAa,EAAnB,CAFE,CAEqB;;AACvBZ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAqD,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,KALD,CAKE,OAAO7B,KAAP,EAAc;AAAA;;AACdL,MAAAA,OAAO,CAACK,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA6B,MAAAA,KAAK,CACH,+BACG,oBAAA7B,KAAK,CAACP,QAAN,4FAAgBI,IAAhB,8EAAsBkC,OAAtB,KAAiC/B,KAAK,CAAC+B,OAD1C,CADG,CAAL;AAID;AACF,GAzBD,CA/FoB,CA0HpB;;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BlD,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAM,IAAAA,aAAa,GAFgB,CAEZ;AAClB,GAHD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,4BAEE;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,QAAQ,EAAE,OADL;AAEL8C,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,MAAM,EAAE,OALH;AAMLC,QAAAA,eAAe,EAAE,yBANZ;AAOLC,QAAAA,cAAc,EAAE,OAPX;AAQLC,QAAAA,kBAAkB,EAAE,QARf;AASLC,QAAAA,gBAAgB,EAAE,WATb;AAULC,QAAAA,oBAAoB,EAAE,OAVjB;AAWLC,QAAAA,MAAM,EAAE,CAAC;AAXJ;AADT;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE;AACE,MAAA,KAAK,EAAE;AACLvD,QAAAA,QAAQ,EAAE,OADL;AAEL8C,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLC,QAAAA,MAAM,EAAE,OALH;AAMLO,QAAAA,UAAU,EAAE,oBANP;AAOLD,QAAAA,MAAM,EAAE,CAAC;AAPJ;AADT;AAAA;AAAA;AAAA;AAAA,YAlBF,eA+BE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,KAAK,EAAE;AAAEvD,QAAAA,QAAQ,EAAE,UAAZ;AAAwBuD,QAAAA,MAAM,EAAE;AAAhC,OAA9C;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,iEAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,KAAK,EAAE;AAAEE,YAAAA,QAAQ,EAAE;AAAZ,WAHT;AAIE,UAAA,WAAW,EAAC,oCAJd;AAKE,UAAA,KAAK,EAAE7E,UALT;AAME,UAAA,QAAQ,EAAGsD,CAAD,IAAOrD,aAAa,CAACqD,CAAC,CAACG,MAAF,CAASD,KAAV;AANhC;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,qBACGpD,QAAQ,gBACP,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,iBAAT;AAA2B,YAAA,SAAS,EAAC,wBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,gBAKP;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,wBADZ;AAEE,cAAA,OAAO,EAAE,MAAMW,gBAAgB,CAAC,IAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,cAAD;AACE,cAAA,MAAM,EAAED,aADV;AAEE,cAAA,OAAO,EAAEmD;AAFX;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,0BANJ,eAmBE;AAAQ,YAAA,OAAO,EAAEzB,aAAjB;AAAgC,YAAA,SAAS,EAAC,qBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAqCG,CAACpC,QAAD,gBACC;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBACGkC,iBAAiB,CAACN,GAAlB,CAAuBf,MAAD,iBACrB;AAAA,oCACE;AAAA,wBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBACGV,SAAS,KAAKS,MAAM,CAACC,EAArB,gBACC;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,uCACE;AACE,kBAAA,KAAK,EAAER,YAAY,CAACyC,MAAb,IAAuB,EADhC;AAEE,kBAAA,QAAQ,EAAGG,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAI,QAAJ,CAFnC;AAGE,kBAAA,QAAQ,MAHV;AAAA,0CAKE;AAAQ,oBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,EAMG1C,IAAI,CAACoB,GAAL,CAAUgB,GAAD,iBACR;AAAqB,oBAAA,KAAK,EAAEA,GAAG,CAAC9B,EAAhC;AAAA,8BACG8B,GAAG,CAAC7B;AADP,qBAAa6B,GAAG,CAAC9B,EAAjB;AAAA;AAAA;AAAA;AAAA,0BADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADD,GAgBCD,MAAM,CAACE;AAjBX;AAAA;AAAA;AAAA;AAAA,oBAFF,eAsBE;AAAA,wBACGX,SAAS,KAAKS,MAAM,CAACC,EAArB,gBACC;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,OAFZ;AAGE,gBAAA,KAAK,EAAER,YAAY,CAACU,QAAb,IAAyB,EAHlC;AAIE,gBAAA,QAAQ,EAAGkC,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAI,UAAJ;AAJnC;AAAA;AAAA;AAAA;AAAA,sBADD,GAQCrC,MAAM,CAACG;AATX;AAAA;AAAA;AAAA;AAAA,oBAtBF,eAkCE;AAAA,wBACGZ,SAAS,KAAKS,MAAM,CAACC,EAArB,gBACC;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,OAFZ;AAGE,gBAAA,KAAK,EAAER,YAAY,CAACO,MAAb,IAAuB,EAHhC;AAIE,gBAAA,QAAQ,EAAGqC,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAI,QAAJ;AAJnC;AAAA;AAAA;AAAA;AAAA,sBADD,GAQE,IAAGwB,UAAU,CAAC7D,MAAM,CAACA,MAAR,CAAV,CAA0B8D,cAA1B,CAAyC,OAAzC,EAAkD;AACpDC,gBAAAA,qBAAqB,EAAE;AAD6B,eAAlD,CAED;AAXP;AAAA;AAAA;AAAA;AAAA,oBAlCF,eAgDE;AAAA,wBACGxE,SAAS,KAAKS,MAAM,CAACC,EAArB,gBACC;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,iCADZ;AAEE,kBAAA,OAAO,EAAE,MAAMyC,UAAU,CAAC1C,MAAM,CAACC,EAAR,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE;AACE,kBAAA,SAAS,EAAC,2BADZ;AAEE,kBAAA,OAAO,EAAEkC,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA,8BADD,gBAgBC;AACE,gBAAA,SAAS,EAAC,yBADZ;AAEE,gBAAA,OAAO,EAAE,MAAML,YAAY,CAAC9B,MAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,oBAhDF;AAAA,aAASA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBA2FC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGoB,iBAAiB,CAACN,GAAlB,CAAuBf,MAAD,iBACrB;AAAqB,UAAA,SAAS,EAAC,cAA/B;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,mBAAb;AAAA,0BAAkCA,MAAM,CAACE;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC+BF,MAAM,CAACC,EADtC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC8BD,MAAM,CAACG,QADrC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAC2B,GAD3B,EAEI,IAAG0D,UAAU,CAAC7D,MAAM,CAACA,MAAR,CAAV,CAA0B8D,cAA1B,CAAyC,OAAzC,EAAkD;AACrDC,kBAAAA,qBAAqB,EAAE;AAD8B,iBAAlD,CAEF,EAJL;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAkBE;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAG,oBAAmB/D,MAAM,CAACC,EAAG,EADpC;AAEE,gBAAA,SAAS,EAAC,0CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAUD,MAAM,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAhIJ,eAoKE;AAAK,QAAA,SAAS,EAAC,sGAAf;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE;AACE,cAAA,KAAK,EAAEhB,aADT;AAEE,cAAA,QAAQ,EAAGoD,CAAD,IAAOnD,gBAAgB,CAAC8E,MAAM,CAAC3B,CAAC,CAACG,MAAF,CAASD,KAAV,CAAP,CAFnC;AAAA,sCAIE;AAAQ,gBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAQ,gBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAQ,gBAAA,KAAK,EAAEtB,gBAAgB,CAACgD,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AAAA,iCACW5C,iBAAiB,CAAC4C,MAD7B,UACyChD,gBAAgB,CAACgD,MAD1D,EACkE,GADlE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cApKF;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2ND;;GA3VQrF,U;;KAAAA,U;AA6VT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport SalaryPDF from \"../Printing/SalaryPDF\";\r\nimport AddSalaryModal from \"../UI/Modal/AddSalaryModel\";\r\n\r\nfunction SalaryList() {\r\n  // State Hooks\r\n  const [salaries, setSalaries] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editedSalary, setEditedSalary] = useState({});\r\n  const [jobs, setJobs] = useState([]);\r\n  const [isModalActive, setIsModalActive] = useState(false); // Modal state\r\n\r\n  // Normalize salary data to handle nulls consistently\r\n  const normalizeSalary = (salary) => ({\r\n    id: salary.id || null,\r\n    Job_Title: salary.Job_Title || \"Untitled\",\r\n    position: salary.position || \"N/A\",\r\n    salary: salary.salary || \"0\",\r\n  });\r\n\r\n  // Effect Hook for fetching data and handling resize\r\n  useEffect(() => {\r\n    fetchSalaries();\r\n    fetchJobs();\r\n\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Fetch salary data from API\r\n  const fetchSalaries = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/salary\");\r\n      console.log(\"Fetched salaries:\", response.data);\r\n      const sanitizedSalaries = (response.data || []).map(normalizeSalary);\r\n      setSalaries(sanitizedSalaries);\r\n    } catch (error) {\r\n      console.error(\"Error fetching salaries:\", error);\r\n      setSalaries([]);\r\n    }\r\n  };\r\n\r\n  // Fetch job titles from API\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      console.log(\"Fetched jobs:\", response.data);\r\n      setJobs(response.data || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching job titles:\", error);\r\n      setJobs([]);\r\n    }\r\n  };\r\n\r\n  // Filter and slice salaries for display\r\n  const filteredSalaries = salaries.filter((salary) =>\r\n    `${salary.Job_Title} ${salary.position}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow);\r\n\r\n  // Generate and open salary list PDF\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<SalaryPDF salaries={salaries} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url);\r\n  };\r\n\r\n  // Start inline editing for a salary record\r\n  const startEditing = (salary) => {\r\n    console.log(\"Editing Salary:\", salary);\r\n    const job = jobs.find((j) => j.Job_Title === salary.Job_Title);\r\n    setEditingId(salary.id);\r\n    setEditedSalary({\r\n      job_id: job ? job.id : \"\",\r\n      position: salary.position || \"\",\r\n      salary: salary.salary || \"\",\r\n    });\r\n  };\r\n\r\n  // Cancel editing\r\n  const cancelEditing = () => {\r\n    setEditingId(null);\r\n    setEditedSalary({});\r\n  };\r\n\r\n  // Handle input changes in edit form\r\n  const handleEditChange = (e, field) => {\r\n    const value = e.target.value;\r\n    console.log(`Edit Field: ${field}, Value: ${value}`);\r\n    setEditedSalary((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  // Save updated salary record (old update function revised)\r\n  const saveSalary = async (id) => {\r\n    const updatedSalary = {\r\n      depId: editedSalary.job_id || null, // Match your API's expected key\r\n      position: editedSalary.position || \"N/A\",\r\n      salary: editedSalary.salary || \"0\",\r\n    };\r\n\r\n    if (!updatedSalary.depId) {\r\n      alert(\"Job Title is required\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Saving Salary Payload:\", updatedSalary);\r\n    try {\r\n      await axios.patch(`http://localhost:5000/salary/${id}`, updatedSalary);\r\n      await fetchSalaries(); // Refresh data\r\n      setEditingId(null);\r\n      alert(\"Salary updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating salary:\", error);\r\n      alert(\r\n        \"Failed to update salary: \" +\r\n          (error.response?.data?.message || error.message)\r\n      );\r\n    }\r\n  };\r\n\r\n  // Handle modal close and refresh data if needed\r\n  const handleModalClose = () => {\r\n    setIsModalActive(false);\r\n    fetchSalaries(); // Refresh salaries after adding via modal\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      {/* Full-Screen Background */}\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      {/* Dark Overlay */}\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"column container mt-5\" style={{ position: \"relative\", zIndex: 1 }}>\r\n        {/* Search and Action Buttons */}\r\n        <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input mt-2\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div className=\"mt-2 is-flex\">\r\n            {isMobile ? (\r\n              <Link to=\"/home/AddSalary\" className=\"button is-success ml-3\">\r\n                Add Position\r\n              </Link>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  className=\"button is-success ml-3\"\r\n                  onClick={() => setIsModalActive(true)}\r\n                >\r\n                  Add Position\r\n                </button>\r\n                <AddSalaryModal\r\n                  isOpen={isModalActive}\r\n                  onClose={handleModalClose}\r\n                />\r\n              </>\r\n            )}\r\n            <button onClick={handleViewPDF} className=\"button is-info ml-3\">\r\n              View PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Table View (Desktop) */}\r\n        {!isMobile ? (\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Salary ID</th>\r\n                <th>Job Title</th>\r\n                <th>Position / Level</th>\r\n                <th>Salary</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedSalaries.map((salary) => (\r\n                <tr key={salary.id}>\r\n                  <td>{salary.id}</td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={editedSalary.job_id || \"\"}\r\n                          onChange={(e) => handleEditChange(e, \"job_id\")}\r\n                          required\r\n                        >\r\n                          <option value=\"\">Select a job</option>\r\n                          {jobs.map((job) => (\r\n                            <option key={job.id} value={job.id}>\r\n                              {job.Job_Title}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    ) : (\r\n                      salary.Job_Title\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={editedSalary.position || \"\"}\r\n                        onChange={(e) => handleEditChange(e, \"position\")}\r\n                      />\r\n                    ) : (\r\n                      salary.position\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"input\"\r\n                        value={editedSalary.salary || \"\"}\r\n                        onChange={(e) => handleEditChange(e, \"salary\")}\r\n                      />\r\n                    ) : (\r\n                      `₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}`\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === salary.id ? (\r\n                      <>\r\n                        <button\r\n                          className=\"button is-small is-success mr-2\"\r\n                          onClick={() => saveSalary(salary.id)}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                        <button\r\n                          className=\"button is-small is-danger\"\r\n                          onClick={cancelEditing}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button\r\n                        className=\"button is-small is-info\"\r\n                        onClick={() => startEditing(salary)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"columns is-multiline\">\r\n            {displayedSalaries.map((salary) => (\r\n              <div key={salary.id} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">{salary.Job_Title}</p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p>\r\n                      <strong>Salary ID:</strong> {salary.id}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Position:</strong> {salary.position}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Salary:</strong>{\" \"}\r\n                      {`₱${parseFloat(salary.salary).toLocaleString(\"en-PH\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}`}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/editSalary/${salary.id}`}\r\n                      className=\"card-footer-item button is-small is-info\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Footer Controls */}\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select\r\n                value={entriesToShow}\r\n                onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n              >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value={filteredSalaries.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Showing {displayedSalaries.length} of {filteredSalaries.length}{\" \"}\r\n            entries\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalaryList;"]},"metadata":{},"sourceType":"module"}