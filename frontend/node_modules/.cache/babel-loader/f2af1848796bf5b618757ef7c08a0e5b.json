{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Salary\\\\SalaryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport SalaryPDF from \"../Printing/SalaryPDF\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SalaryList() {\n  _s();\n\n  //list of salaries\n  const [salaries, setSalary] = useState([]); //search\n\n  const [searchTerm, setSearchTerm] = useState(\"\"); //data to show\n\n  const [entriesToShow, setEntriesToShow] = useState(10); //mobile verson or not mobile\n\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768); //edit row\n\n  const [editingId, setEditingId] = useState(null);\n  const [editedData, setEditedData] = useState({});\n\n  const handleEdit = user => {\n    setEditingId(user.id);\n    setEditedSalary({ ...user\n    });\n  };\n\n  const handleSave = async id => {\n    try {\n      await axios.patch(`http://localhost:5000/salary/${id}`, {\n        position: editedSalary.position,\n        salary: editedSalary.salary\n      });\n      setEditingId(null);\n      getUsers();\n    } catch (error) {\n      console.error(\"Error updating salary:\", error);\n    }\n  }; //handle the mobile or web\n\n\n  useEffect(() => {\n    getUsers();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/salary\");\n      setSalary(response.data);\n    } catch (error) {\n      console.error(\"Error fetching salaries:\", error);\n    }\n  };\n\n  const filteredSalaries = salaries.filter(user => `${user.Job_Title} ${user.position}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow);\n\n  const handleViewPDF = async () => {\n    const blob = await pdf( /*#__PURE__*/_jsxDEV(SalaryPDF, {\n      salaries: salaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }, this)).toBlob();\n    const url = URL.createObjectURL(blob);\n    window.open(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: \"url('/loginBanner.jpg')\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        // Makes it responsive when scrolling\n        zIndex: -2 // Push it to the back\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        // Dark overlay\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column container mt-5\",\n      style: {\n        position: \"relative\",\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input mt-2\",\n          style: {\n            maxWidth: \"300px\"\n          },\n          placeholder: \"Search by Job Title or Position...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/AddSalary\",\n            className: \"button is-success\",\n            children: \"Add Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleViewPDF,\n            className: \"button is-info ml-3\",\n            children: \"View PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), !isMobile ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position / Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displayedSalaries.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedSalary.position,\n                onChange: e => setEditedSalary({ ...editedSalary,\n                  position: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this) : user.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: editedSalary.salary,\n                onChange: e => setEditedSalary({ ...editedSalary,\n                  salary: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 23\n              }, this) : user.salary ? `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n                minimumFractionDigits: 2\n              })}` : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingId === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSave(user.id),\n                className: \"button is-small is-success\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(user),\n                className: \"button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: displayedSalaries.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: user.Job_Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Salary ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), \" \", user.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Position:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this), \" \", user.position]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Salary:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this), \" \", user.salary ? `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n                  minimumFractionDigits: 2\n                })}` : \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/editSalary/${user.id}`,\n                className: \"card-footer-item button is-small is-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-2\",\n            children: \"Show entries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entriesToShow,\n              onChange: e => setEntriesToShow(Number(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"20\",\n                children: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: filteredSalaries.length,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", displayedSalaries.length, \" of \", filteredSalaries.length, \" \", \"entries\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SalaryList, \"Agz9GCyHAvB4EayVoocLx9VPO1s=\");\n\n_c = SalaryList;\nexport default SalaryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalaryList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Salary/SalaryList.js"],"names":["React","useState","useEffect","axios","Link","pdf","SalaryPDF","SalaryList","salaries","setSalary","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","isMobile","setIsMobile","window","innerWidth","editingId","setEditingId","editedData","setEditedData","handleEdit","user","id","setEditedSalary","handleSave","patch","position","editedSalary","salary","getUsers","error","console","handleResize","addEventListener","removeEventListener","response","get","data","filteredSalaries","filter","Job_Title","toLowerCase","includes","displayedSalaries","slice","handleViewPDF","blob","toBlob","url","URL","createObjectURL","open","top","left","width","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","zIndex","background","maxWidth","e","target","value","map","parseFloat","toLocaleString","minimumFractionDigits","Number","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport SalaryPDF from \"../Printing/SalaryPDF\";\r\n\r\nfunction SalaryList() {\r\n  //list of salaries\r\n  const [salaries, setSalary] = useState([]);\r\n  //search\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  //data to show\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  //mobile verson or not mobile\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n\r\n  //edit row\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editedData, setEditedData] = useState({});\r\n\r\n  const handleEdit = (user) => {\r\n    setEditingId(user.id);\r\n    setEditedSalary({ ...user });\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/salary/${id}`, {\r\n        position: editedSalary.position,\r\n        salary: editedSalary.salary,\r\n      });\r\n      setEditingId(null);\r\n      getUsers();\r\n    } catch (error) {\r\n      console.error(\"Error updating salary:\", error);\r\n    }\r\n  };\r\n\r\n  //handle the mobile or web\r\n  useEffect(() => {\r\n    getUsers();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/salary\");\r\n      setSalary(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching salaries:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredSalaries = salaries.filter((user) =>\r\n    `${user.Job_Title} ${user.position}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedSalaries = filteredSalaries.slice(0, entriesToShow);\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<SalaryPDF salaries={salaries} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      {/* Full-Screen Background with Responsive Fix */}\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\", // Makes it responsive when scrolling\r\n          zIndex: -2, // Push it to the back\r\n        }}\r\n      />\r\n      {/* Dark Overlay for Readability */}\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\", // Dark overlay\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <div\r\n        className=\"column container mt-5\"\r\n        style={{ position: \"relative\", zIndex: 1 }}\r\n      >\r\n        <div className=\"is-flex is-justify-content-space-between mb-3 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input mt-2\"\r\n            style={{ maxWidth: \"300px\" }}\r\n            placeholder=\"Search by Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div className=\"mt-2\">\r\n            <Link to=\"/home/AddSalary\" className=\"button is-success\">\r\n              Add Position\r\n            </Link>\r\n            <button onClick={handleViewPDF} className=\"button is-info ml-3\">\r\n              View PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Responsive Table & Cards */}\r\n        {!isMobile ? (\r\n          <table className=\"table is-striped is-fullwidth\">\r\n            <thead>\r\n              <tr>\r\n                <th>Salary ID</th>\r\n                <th>Job Title</th>\r\n                <th>Position / Level</th>\r\n                <th>Salary</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayedSalaries.map((user) => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.Job_Title}</td>\r\n                  <td>\r\n                    {editingId === user.id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editedSalary.position}\r\n                        onChange={(e) =>\r\n                          setEditedSalary({\r\n                            ...editedSalary,\r\n                            position: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      user.position\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === user.id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        value={editedSalary.salary}\r\n                        onChange={(e) =>\r\n                          setEditedSalary({\r\n                            ...editedSalary,\r\n                            salary: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    ) : user.salary ? (\r\n                      `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n                        minimumFractionDigits: 2,\r\n                      })}`\r\n                    ) : (\r\n                      \"N/A\"\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingId === user.id ? (\r\n                      <button\r\n                        onClick={() => handleSave(user.id)}\r\n                        className=\"button is-small is-success\"\r\n                      >\r\n                        Save\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => handleEdit(user)}\r\n                        className=\"button is-small is-info\"\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div className=\"columns is-multiline\">\r\n            {displayedSalaries.map((user) => (\r\n              <div key={user.id} className=\"column is-12\">\r\n                <div className=\"card\">\r\n                  <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">{user.Job_Title}</p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p>\r\n                      <strong>Salary ID:</strong> {user.id}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Position:</strong> {user.position}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Salary:</strong>{\" \"}\r\n                      {user.salary\r\n                        ? `â‚±${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n                            minimumFractionDigits: 2,\r\n                          })}`\r\n                        : \"N/A\"}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/editSalary/${user.id}`}\r\n                      className=\"card-footer-item button is-small is-info\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Footer Controls */}\r\n        <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3 is-flex-wrap-wrap has-text-white\">\r\n          <div>\r\n            <label className=\"mr-2\">Show entries:</label>\r\n            <div className=\"select\">\r\n              <select\r\n                value={entriesToShow}\r\n                onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n              >\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value={filteredSalaries.length}>All</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <p>\r\n            Showing {displayedSalaries.length} of {filteredSalaries.length}{\" \"}\r\n            entries\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalaryList;\r\n"]},"metadata":{},"sourceType":"module"}