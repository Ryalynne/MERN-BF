{"ast":null,"code":"import * as r from \"restructure\";\nimport { concatenateUint8Arrays, readUInt8 } from \"./utils.js\";\n\nclass HuffmanTableElements {\n  decode(stream, parent) {\n    const tables = {};\n    let buffer = stream.buffer.slice(stream.pos, stream.pos + parent.length - 2);\n\n    while (buffer.length > 0) {\n      let offset = 1;\n      const elements = [];\n      const identifier = readUInt8(buffer, 0);\n      const lengths = buffer.slice(offset, offset + 16);\n      offset += 16;\n\n      for (const length of lengths) {\n        elements.push(buffer.slice(offset, offset + length));\n        offset += length;\n      }\n\n      buffer = buffer.slice(offset);\n      tables[identifier] = concatenateUint8Arrays(elements);\n    }\n\n    stream.pos += parent.length - 2;\n    return tables;\n  }\n\n}\n\nconst DefineHuffmanTableMarker = {\n  name: () => \"DHT\",\n  length: r.uint16be,\n  tables: new HuffmanTableElements()\n};\nexport default DefineHuffmanTableMarker;","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/jay-peg/src/markers/dht.js"],"names":["r","concatenateUint8Arrays","readUInt8","HuffmanTableElements","decode","stream","parent","tables","buffer","slice","pos","length","offset","elements","identifier","lengths","push","DefineHuffmanTableMarker","name","uint16be"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,aAAnB;AACA,SAASC,sBAAT,EAAiCC,SAAjC,QAAkD,YAAlD;;AAEA,MAAMC,oBAAN,CAA2B;AACzBC,EAAAA,MAAM,CAACC,MAAD,EAASC,MAAT,EAAiB;AACrB,UAAMC,MAAM,GAAG,EAAf;AAEA,QAAIC,MAAM,GAAGH,MAAM,CAACG,MAAP,CAAcC,KAAd,CACXJ,MAAM,CAACK,GADI,EAEXL,MAAM,CAACK,GAAP,GAAaJ,MAAM,CAACK,MAApB,GAA6B,CAFlB,CAAb;;AAKA,WAAOH,MAAM,CAACG,MAAP,GAAgB,CAAvB,EAA0B;AACxB,UAAIC,MAAM,GAAG,CAAb;AAEA,YAAMC,QAAQ,GAAG,EAAjB;AACA,YAAMC,UAAU,GAAGZ,SAAS,CAACM,MAAD,EAAS,CAAT,CAA5B;AACA,YAAMO,OAAO,GAAGP,MAAM,CAACC,KAAP,CAAaG,MAAb,EAAqBA,MAAM,GAAG,EAA9B,CAAhB;AAEAA,MAAAA,MAAM,IAAI,EAAV;;AAEA,WAAK,MAAMD,MAAX,IAAqBI,OAArB,EAA8B;AAC5BF,QAAAA,QAAQ,CAACG,IAAT,CAAcR,MAAM,CAACC,KAAP,CAAaG,MAAb,EAAqBA,MAAM,GAAGD,MAA9B,CAAd;AACAC,QAAAA,MAAM,IAAID,MAAV;AACD;;AAEDH,MAAAA,MAAM,GAAGA,MAAM,CAACC,KAAP,CAAaG,MAAb,CAAT;AAEAL,MAAAA,MAAM,CAACO,UAAD,CAAN,GAAqBb,sBAAsB,CAACY,QAAD,CAA3C;AACD;;AAEDR,IAAAA,MAAM,CAACK,GAAP,IAAcJ,MAAM,CAACK,MAAP,GAAgB,CAA9B;AAEA,WAAOJ,MAAP;AACD;;AA/BwB;;AAkC3B,MAAMU,wBAAwB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,MAAM,KADmB;AAE/BP,EAAAA,MAAM,EAAEX,CAAC,CAACmB,QAFqB;AAG/BZ,EAAAA,MAAM,EAAE,IAAIJ,oBAAJ;AAHuB,CAAjC;AAMA,eAAec,wBAAf","sourcesContent":["import * as r from \"restructure\";\r\nimport { concatenateUint8Arrays, readUInt8 } from \"./utils.js\";\r\n\r\nclass HuffmanTableElements {\r\n  decode(stream, parent) {\r\n    const tables = {};\r\n\r\n    let buffer = stream.buffer.slice(\r\n      stream.pos,\r\n      stream.pos + parent.length - 2,\r\n    );\r\n\r\n    while (buffer.length > 0) {\r\n      let offset = 1;\r\n\r\n      const elements = [];\r\n      const identifier = readUInt8(buffer, 0);\r\n      const lengths = buffer.slice(offset, offset + 16);\r\n\r\n      offset += 16;\r\n\r\n      for (const length of lengths) {\r\n        elements.push(buffer.slice(offset, offset + length));\r\n        offset += length;\r\n      }\r\n\r\n      buffer = buffer.slice(offset);\r\n\r\n      tables[identifier] = concatenateUint8Arrays(elements);\r\n    }\r\n\r\n    stream.pos += parent.length - 2;\r\n\r\n    return tables;\r\n  }\r\n}\r\n\r\nconst DefineHuffmanTableMarker = {\r\n  name: () => \"DHT\",\r\n  length: r.uint16be,\r\n  tables: new HuffmanTableElements(),\r\n};\r\n\r\nexport default DefineHuffmanTableMarker;\r\n"]},"metadata":{},"sourceType":"module"}