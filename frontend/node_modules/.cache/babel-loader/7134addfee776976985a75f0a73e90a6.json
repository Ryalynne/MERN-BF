{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUser = () => {\n  _s();\n\n  const [full_name, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [departments, setDepartments] = useState([]);\n  const [dep_id, setDepId] = useState(\"\");\n  const [positions, setPositions] = useState([]);\n  const [position_id, setPositionId] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchUserData();\n    fetchDepartments();\n  }, [id]);\n  useEffect(() => {\n    if (dep_id) {\n      fetchPositions(dep_id);\n    } else {\n      setPositions([]);\n      setPositionId(\"\");\n      setSalary(\"\");\n    }\n  }, [dep_id]);\n  useEffect(() => {\n    const selectedPosition = positions.find(pos => String(pos.id) === String(position_id));\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\n  }, [position_id, positions]); // Fetch User Data\n\n  const fetchUserData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/users/${id}`);\n      const user = response.data;\n      setFullName(user.full_name);\n      setEmail(user.email);\n      setGender(user.gender);\n      setDepId(user.job_id);\n      setPositionId(user.salary_id);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n    }\n  };\n\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/departments\");\n      setDepartments(response.data);\n    } catch (error) {\n      console.error(\"Error fetching departments:\", error);\n    }\n  };\n\n  const fetchPositions = async departmentId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${departmentId}`);\n      setPositions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching positions:\", error);\n    }\n  };\n\n  const updateUser = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.patch(`http://localhost:5000/users/${id}`, {\n        full_name,\n        email,\n        gender,\n        job_id: dep_id,\n        salary_id: position_id\n      });\n      navigate(\"/home/Employee\");\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column is-half container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateUser,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            value: full_name,\n            onChange: e => setFullName(e.target.value),\n            placeholder: \"Enter full name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"input\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select is-fullwidth\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: gender,\n              onChange: e => setGender(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select is-fullwidth\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: dep_id,\n              onChange: e => setDepId(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: dep.id,\n                children: dep.Job_Title\n              }, dep.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select is-fullwidth\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: position_id,\n              onChange: e => setPositionId(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pos.id,\n                children: pos.position\n              }, pos.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Salary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            value: salary ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\n              minimumFractionDigits: 2\n            })}` : \"\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button is-success\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUser, \"Zbhq2HC9f80PA2pltWfGYJo/l+c=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditUser;\nexport default EditUser; // import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\n// const UserList = () => {\n//   const [users, setUser] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [entriesToShow, setEntriesToShow] = useState(10);\n//   useEffect(() => {\n//     getUsers();\n//   }, []);\n//   const getUsers = async () => {\n//     try {\n//       const response = await axios.get(\"http://localhost:5000/users\");\n//       setUser(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching users:\", error);\n//     }\n//   };\n//   const deleteUser = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/users/${id}`);\n//       getUsers();\n//     } catch (error) {\n//       console.error(\"Error deleting user:\", error);\n//     }\n//   };\n//   // Filter users based on search term\n//   const filteredUsers = users.filter((user) =>\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\n//       .toLowerCase()\n//       .includes(searchTerm.toLowerCase())\n//   );\n//   // Limit displayed entries based on selection\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\n//   return (\n//     <div className=\"container mt-5\">\n//       {/* Search Bar and Action Buttons */}\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\n//         <input\n//           type=\"text\"\n//           className=\"input\"\n//           style={{ maxWidth: \"300px\" }}\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <div>\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\n//             Add Employee\n//           </Link>\n//           <PDFDownloadLink\n//             document={<EmployePDF users={users} />}\n//             fileName=\"Employee_Report.pdf\"\n//             className=\"button is-info mr-3\"\n//           >\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\n//           </PDFDownloadLink>\n//         </div>\n//       </div>\n//       {/* Employee Table */}\n//       <table className=\"table is-striped is-fullwidth\">\n//         <thead>\n//           <tr>\n//             <th>Employee ID</th>\n//             <th>Full Name</th>\n//             <th>Email</th>\n//             <th>Gender</th>\n//             <th>Job Title</th>\n//             <th>Position / Level</th>\n//             <th>Salary</th>\n//             <th>Annual Salary</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {displayedUsers.length > 0 ? (\n//             displayedUsers.map((user) => (\n//               <tr key={user.id}>\n//                 <td>{user.id}</td>\n//                 <td>{user.full_name}</td>\n//                 <td>{user.email}</td>\n//                 <td>{user.gender}</td>\n//                 <td>{user.Job_Title}</td>\n//                 <td>{user.position}</td>\n//                 <td>\n//                   {user.salary\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\n//                         minimumFractionDigits: 2,\n//                       })}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   {user.anual_salary\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\n//                         \"en-PH\",\n//                         {\n//                           minimumFractionDigits: 2,\n//                         }\n//                       )}`\n//                     : \"\"}\n//                 </td>\n//                 <td>\n//                   <Link\n//                     to={`edit/${user.id}`}\n//                     className=\"button is-small is-info mr-2\"\n//                   >\n//                     Edit\n//                   </Link>\n//                   <button\n//                     onClick={() => deleteUser(user.id)}\n//                     className=\"button is-small is-danger\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"9\" className=\"has-text-centered\">\n//                 No users found.\n//               </td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       {/* Footer with Entry Filter */}\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\n//         <div>\n//           <label className=\"mr-2\">Show entries:</label>\n//           <div className=\"select\">\n//             <select\n//               value={entriesToShow}\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\n//             >\n//               <option value=\"5\">5</option>\n//               <option value=\"10\">10</option>\n//               <option value=\"20\">20</option>\n//               <option value={filteredUsers.length}>All</option>\n//             </select>\n//           </div>\n//         </div>\n//         <p>\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n// export default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","useNavigate","useParams","EditUser","full_name","setFullName","email","setEmail","gender","setGender","departments","setDepartments","dep_id","setDepId","positions","setPositions","position_id","setPositionId","salary","setSalary","navigate","id","fetchUserData","fetchDepartments","fetchPositions","selectedPosition","find","pos","String","response","get","user","data","job_id","salary_id","error","console","departmentId","updateUser","e","preventDefault","patch","target","value","map","dep","Job_Title","position","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditUser = () => {\r\n  const [full_name, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [departments, setDepartments] = useState([]);\r\n  const [dep_id, setDepId] = useState(\"\");\r\n  const [positions, setPositions] = useState([]);\r\n  const [position_id, setPositionId] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n    fetchDepartments();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (dep_id) {\r\n      fetchPositions(dep_id);\r\n    } else {\r\n      setPositions([]);\r\n      setPositionId(\"\");\r\n      setSalary(\"\");\r\n    }\r\n  }, [dep_id]);\r\n\r\n  useEffect(() => {\r\n    const selectedPosition = positions.find((pos) => String(pos.id) === String(position_id));\r\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\r\n  }, [position_id, positions]);\r\n\r\n  // Fetch User Data\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/users/${id}`);\r\n      const user = response.data;\r\n      setFullName(user.full_name);\r\n      setEmail(user.email);\r\n      setGender(user.gender);\r\n      setDepId(user.job_id);\r\n      setPositionId(user.salary_id);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/departments\");\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching departments:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchPositions = async (departmentId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/salary/getPosition/${departmentId}`);\r\n      setPositions(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching positions:\", error);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, {\r\n        full_name,\r\n        email,\r\n        gender,\r\n        job_id: dep_id,\r\n        salary_id: position_id,\r\n      });\r\n      navigate(\"/home/Employee\");\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"column is-half container mt-5\">\r\n      <form onSubmit={updateUser}>\r\n        <div className=\"field\">\r\n          <label className=\"label\">Full Name</label>\r\n          <div className=\"control\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              value={full_name}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n              placeholder=\"Enter full name\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label className=\"label\">Email</label>\r\n          <div className=\"control\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"input\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label className=\"label\">Gender</label>\r\n          <div className=\"control\">\r\n            <div className=\"select is-fullwidth\">\r\n              <select value={gender} onChange={(e) => setGender(e.target.value)} required>\r\n                <option value=\"\">Select Gender</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label className=\"label\">Job Title</label>\r\n          <div className=\"control\">\r\n            <div className=\"select is-fullwidth\">\r\n              <select value={dep_id} onChange={(e) => setDepId(e.target.value)} required>\r\n                <option value=\"\">Select Job Title</option>\r\n                {departments.map((dep) => (\r\n                  <option key={dep.id} value={dep.id}>\r\n                    {dep.Job_Title}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label className=\"label\">Position</label>\r\n          <div className=\"control\">\r\n            <div className=\"select is-fullwidth\">\r\n              <select\r\n                value={position_id}\r\n                onChange={(e) => setPositionId(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Select Position</option>\r\n                {positions.map((pos) => (\r\n                  <option key={pos.id} value={pos.id}>\r\n                    {pos.position}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <label className=\"label\">Salary</label>\r\n          <div className=\"control\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input\"\r\n              value={\r\n                salary\r\n                  ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\r\n                      minimumFractionDigits: 2,\r\n                    })}`\r\n                  : \"\"\r\n              }\r\n              disabled\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <button type=\"submit\" className=\"button is-success\">\r\n            Update\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\r\n\r\n// const UserList = () => {\r\n//   const [users, setUser] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [entriesToShow, setEntriesToShow] = useState(10);\r\n\r\n//   useEffect(() => {\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:5000/users\");\r\n//       setUser(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/users/${id}`);\r\n//       getUsers();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Filter users based on search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n//       .toLowerCase()\r\n//       .includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Limit displayed entries based on selection\r\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       {/* Search Bar and Action Buttons */}\r\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input\"\r\n//           style={{ maxWidth: \"300px\" }}\r\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         <div>\r\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\r\n//             Add Employee\r\n//           </Link>\r\n\r\n//           <PDFDownloadLink\r\n//             document={<EmployePDF users={users} />}\r\n//             fileName=\"Employee_Report.pdf\"\r\n//             className=\"button is-info mr-3\"\r\n//           >\r\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\r\n//           </PDFDownloadLink>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Employee Table */}\r\n//       <table className=\"table is-striped is-fullwidth\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Employee ID</th>\r\n//             <th>Full Name</th>\r\n//             <th>Email</th>\r\n//             <th>Gender</th>\r\n//             <th>Job Title</th>\r\n//             <th>Position / Level</th>\r\n//             <th>Salary</th>\r\n//             <th>Annual Salary</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {displayedUsers.length > 0 ? (\r\n//             displayedUsers.map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.full_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//                 <td>{user.Job_Title}</td>\r\n//                 <td>{user.position}</td>\r\n//                 <td>\r\n//                   {user.salary\r\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n//                         minimumFractionDigits: 2,\r\n//                       })}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   {user.anual_salary\r\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\r\n//                         \"en-PH\",\r\n//                         {\r\n//                           minimumFractionDigits: 2,\r\n//                         }\r\n//                       )}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   <Link\r\n//                     to={`edit/${user.id}`}\r\n//                     className=\"button is-small is-info mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button\r\n//                     onClick={() => deleteUser(user.id)}\r\n//                     className=\"button is-small is-danger\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"9\" className=\"has-text-centered\">\r\n//                 No users found.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Footer with Entry Filter */}\r\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\r\n//         <div>\r\n//           <label className=\"mr-2\">Show entries:</label>\r\n//           <div className=\"select\">\r\n//             <select\r\n//               value={entriesToShow}\r\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n//             >\r\n//               <option value=\"5\">5</option>\r\n//               <option value=\"10\">10</option>\r\n//               <option value=\"20\">20</option>\r\n//               <option value={filteredUsers.length}>All</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <p>\r\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n"]},"metadata":{},"sourceType":"module"}