{"ast":null,"code":"const saveSalary = async id => {\n  var _editedSalary$Positio;\n\n  const dep_id = editedSalary.dep_id ? Number(editedSalary.dep_id) : null; // Convert to number\n\n  const Position = ((_editedSalary$Positio = editedSalary.Position) === null || _editedSalary$Positio === void 0 ? void 0 : _editedSalary$Positio.trim()) || \"\";\n  const Salary = editedSalary.Salary ? parseFloat(editedSalary.Salary) : null;\n\n  if (!dep_id || !Position || Salary === null) {\n    setEditErrors({\n      dep_id: !dep_id,\n      Position: !Position,\n      Salary: Salary === null\n    });\n    console.log(\"Validation failed:\", {\n      dep_id,\n      Position,\n      Salary\n    });\n    return;\n  }\n\n  try {\n    const payload = {\n      dep_id,\n      Position,\n      Salary\n    };\n    console.log(\"Saving salary with ID:\", id, \"Payload:\", payload);\n    await axios.patch(`http://localhost:5000/salary/${id}`, payload);\n    await getUsers(); // Refresh list after update\n\n    setEditingId(null);\n    setEditedSalary({});\n    setEditErrors({\n      dep_id: false,\n      Position: false,\n      Salary: false\n    });\n    console.log(\"Salary updated successfully\");\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n\n    console.error(\"Error updating salary:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    alert(\"Failed to update salary: \" + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n  }\n};","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Salary/SalaryList.js"],"names":["saveSalary","id","dep_id","editedSalary","Number","Position","trim","Salary","parseFloat","setEditErrors","console","log","payload","axios","patch","getUsers","setEditingId","setEditedSalary","error","response","data","message","alert"],"mappings":"AAAA,MAAMA,UAAU,GAAG,MAAOC,EAAP,IAAc;AAAA;;AAC/B,QAAMC,MAAM,GAAGC,YAAY,CAACD,MAAb,GAAsBE,MAAM,CAACD,YAAY,CAACD,MAAd,CAA5B,GAAoD,IAAnE,CAD+B,CAC0C;;AACzE,QAAMG,QAAQ,GAAG,0BAAAF,YAAY,CAACE,QAAb,gFAAuBC,IAAvB,OAAiC,EAAlD;AACA,QAAMC,MAAM,GAAGJ,YAAY,CAACI,MAAb,GAAsBC,UAAU,CAACL,YAAY,CAACI,MAAd,CAAhC,GAAwD,IAAvE;;AAEA,MAAI,CAACL,MAAD,IAAW,CAACG,QAAZ,IAAwBE,MAAM,KAAK,IAAvC,EAA6C;AAC3CE,IAAAA,aAAa,CAAC;AACZP,MAAAA,MAAM,EAAE,CAACA,MADG;AAEZG,MAAAA,QAAQ,EAAE,CAACA,QAFC;AAGZE,MAAAA,MAAM,EAAEA,MAAM,KAAK;AAHP,KAAD,CAAb;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC;AAAET,MAAAA,MAAF;AAAUG,MAAAA,QAAV;AAAoBE,MAAAA;AAApB,KAAlC;AACA;AACD;;AAED,MAAI;AACF,UAAMK,OAAO,GAAG;AAAEV,MAAAA,MAAF;AAAUG,MAAAA,QAAV;AAAoBE,MAAAA;AAApB,KAAhB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCV,EAAtC,EAA0C,UAA1C,EAAsDW,OAAtD;AAEA,UAAMC,KAAK,CAACC,KAAN,CAAa,gCAA+Bb,EAAG,EAA/C,EAAkDW,OAAlD,CAAN;AACA,UAAMG,QAAQ,EAAd,CALE,CAKgB;;AAElBC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAR,IAAAA,aAAa,CAAC;AAAEP,MAAAA,MAAM,EAAE,KAAV;AAAiBG,MAAAA,QAAQ,EAAE,KAA3B;AAAkCE,MAAAA,MAAM,EAAE;AAA1C,KAAD,CAAb;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,GAZD,CAYE,OAAOO,KAAP,EAAc;AAAA;;AACdR,IAAAA,OAAO,CAACQ,KAAR,CAAc,wBAAd,EAAwC,oBAAAA,KAAK,CAACC,QAAN,oEAAgBC,IAAhB,KAAwBF,KAAK,CAACG,OAAtE;AACAC,IAAAA,KAAK,CAAC,+BAA+B,qBAAAJ,KAAK,CAACC,QAAN,+FAAgBC,IAAhB,gFAAsBC,OAAtB,KAAiCH,KAAK,CAACG,OAAtE,CAAD,CAAL;AACD;AACF,CA/BD","sourcesContent":["const saveSalary = async (id) => {\r\n  const dep_id = editedSalary.dep_id ? Number(editedSalary.dep_id) : null; // Convert to number\r\n  const Position = editedSalary.Position?.trim() || \"\";\r\n  const Salary = editedSalary.Salary ? parseFloat(editedSalary.Salary) : null;\r\n\r\n  if (!dep_id || !Position || Salary === null) {\r\n    setEditErrors({\r\n      dep_id: !dep_id,\r\n      Position: !Position,\r\n      Salary: Salary === null\r\n    });\r\n    console.log(\"Validation failed:\", { dep_id, Position, Salary });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const payload = { dep_id, Position, Salary };\r\n    console.log(\"Saving salary with ID:\", id, \"Payload:\", payload);\r\n\r\n    await axios.patch(`http://localhost:5000/salary/${id}`, payload);\r\n    await getUsers(); // Refresh list after update\r\n\r\n    setEditingId(null);\r\n    setEditedSalary({});\r\n    setEditErrors({ dep_id: false, Position: false, Salary: false });\r\n\r\n    console.log(\"Salary updated successfully\");\r\n  } catch (error) {\r\n    console.error(\"Error updating salary:\", error.response?.data || error.message);\r\n    alert(\"Failed to update salary: \" + (error.response?.data?.message || error.message));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}