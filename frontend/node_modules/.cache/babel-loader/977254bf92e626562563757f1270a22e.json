{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport EmployePDF from \"../Printing/EmployeePDF\";\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [entriesToShow, setEntriesToShow] = useState(10);\n  const [deleteData, setDeleteData] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n  const [isModalActive, setIsModalActive] = useState(false);\n  const [editingUserId, setEditingUserId] = useState(null);\n  const [editedUser, setEditedUser] = useState({});\n  const jobTitles = [\"Software Engineer\", \"Project Manager\", \"HR Manager\"];\n  const positions = [\"Junior\", \"Mid\", \"Senior\"];\n  useEffect(() => {\n    getUsers();\n\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/users\");\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n\n  const startEditing = user => {\n    setEditingUserId(user.id);\n    setEditedUser({ ...user\n    });\n  };\n\n  const cancelEditing = () => {\n    setEditingUserId(null);\n    setEditedUser({});\n  };\n\n  const saveUser = async () => {\n    try {\n      await axios.put(`http://localhost:5000/users/${editingUserId}`, editedUser);\n      getUsers();\n      setEditingUserId(null);\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  const filteredUsers = users.filter(user => `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`.toLowerCase().includes(searchTerm.toLowerCase()));\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-striped is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Annual Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayedUsers.map(user => {\n          var _user$salary, _user$anual_salary;\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input\",\n                value: editedUser.full_name,\n                onChange: e => setEditedUser({ ...editedUser,\n                  full_name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this) : user.full_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"input\",\n                value: editedUser.email,\n                onChange: e => setEditedUser({ ...editedUser,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this) : user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editedUser.Job_Title,\n                  onChange: e => setEditedUser({ ...editedUser,\n                    Job_Title: e.target.value\n                  }),\n                  children: jobTitles.map(title => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: title,\n                    children: title\n                  }, title, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this) : user.Job_Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: editedUser.position,\n                  onChange: e => setEditedUser({ ...editedUser,\n                    position: e.target.value\n                  }),\n                  children: positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pos,\n                    children: pos\n                  }, pos, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this) : user.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"input\",\n                value: editedUser.salary,\n                onChange: e => setEditedUser({ ...editedUser,\n                  salary: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this) : `â‚±${((_user$salary = user.salary) === null || _user$salary === void 0 ? void 0 : _user$salary.toLocaleString(\"en-PH\")) || \"-\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"input\",\n                value: editedUser.anual_salary,\n                onChange: e => setEditedUser({ ...editedUser,\n                  anual_salary: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this) : `â‚±${((_user$anual_salary = user.anual_salary) === null || _user$anual_salary === void 0 ? void 0 : _user$anual_salary.toLocaleString(\"en-PH\")) || \"-\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editingUserId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: saveUser,\n                  className: \"button is-small is-success mr-2\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: cancelEditing,\n                  className: \"button is-small is-danger\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEditing(user),\n                  className: \"button is-small is-info mr-2\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openDelete(user),\n                  className: \"button is-small is-danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"vSSDldhjJ4EbPY3NGbYedGJ2KcA=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/UserList.js"],"names":["React","useState","useEffect","axios","Link","pdf","EmployePDF","ConfirmBox","AddEmployeeModal","UserList","users","setUsers","searchTerm","setSearchTerm","entriesToShow","setEntriesToShow","deleteData","setDeleteData","open","setOpen","isMobile","setIsMobile","window","innerWidth","isModalActive","setIsModalActive","editingUserId","setEditingUserId","editedUser","setEditedUser","jobTitles","positions","getUsers","handleResize","addEventListener","removeEventListener","response","get","data","error","console","startEditing","user","id","cancelEditing","saveUser","put","filteredUsers","filter","full_name","email","Job_Title","position","toLowerCase","includes","displayedUsers","slice","map","e","target","value","title","pos","salary","toLocaleString","anual_salary","openDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\nimport AddEmployeeModal from \"../UI/Modal/AddEmployee\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [entriesToShow, setEntriesToShow] = useState(10);\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [isModalActive, setIsModalActive] = useState(false);\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n  const [editedUser, setEditedUser] = useState({});\r\n\r\n  const jobTitles = [\"Software Engineer\", \"Project Manager\", \"HR Manager\"];\r\n  const positions = [\"Junior\", \"Mid\", \"Senior\"];\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n    }\r\n  };\r\n\r\n  const startEditing = (user) => {\r\n    setEditingUserId(user.id);\r\n    setEditedUser({ ...user });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingUserId(null);\r\n    setEditedUser({});\r\n  };\r\n\r\n  const saveUser = async () => {\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:5000/users/${editingUserId}`,\r\n        editedUser\r\n      );\r\n      getUsers();\r\n      setEditingUserId(null);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) =>\r\n    `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n  return (\r\n    <div className=\"table-container overflow-x-auto\">\r\n      <table className=\"table is-striped is-fullwidth\">\r\n        <thead>\r\n          <tr>\r\n            <th>Employee ID</th>\r\n            <th>Full Name</th>\r\n            <th>Email</th>\r\n            <th>Job Title</th>\r\n            <th>Position</th>\r\n            <th>Salary</th>\r\n            <th>Annual Salary</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {displayedUsers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>\r\n                {editingUserId === user.id ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    value={editedUser.full_name}\r\n                    onChange={(e) =>\r\n                      setEditedUser({ ...editedUser, full_name: e.target.value })\r\n                    }\r\n                  />\r\n                ) : (\r\n                  user.full_name\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingUserId === user.id ? (\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"input\"\r\n                    value={editedUser.email}\r\n                    onChange={(e) =>\r\n                      setEditedUser({ ...editedUser, email: e.target.value })\r\n                    }\r\n                  />\r\n                ) : (\r\n                  user.email\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingUserId === user.id ? (\r\n                  <div className=\"select\">\r\n                    <select\r\n                      value={editedUser.Job_Title}\r\n                      onChange={(e) =>\r\n                        setEditedUser({ ...editedUser, Job_Title: e.target.value })\r\n                      }\r\n                    >\r\n                      {jobTitles.map((title) => (\r\n                        <option key={title} value={title}>\r\n                          {title}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                ) : (\r\n                  user.Job_Title\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingUserId === user.id ? (\r\n                  <div className=\"select\">\r\n                    <select\r\n                      value={editedUser.position}\r\n                      onChange={(e) =>\r\n                        setEditedUser({ ...editedUser, position: e.target.value })\r\n                      }\r\n                    >\r\n                      {positions.map((pos) => (\r\n                        <option key={pos} value={pos}>\r\n                          {pos}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                ) : (\r\n                  user.position\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingUserId === user.id ? (\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"input\"\r\n                    value={editedUser.salary}\r\n                    onChange={(e) =>\r\n                      setEditedUser({ ...editedUser, salary: e.target.value })\r\n                    }\r\n                  />\r\n                ) : (\r\n                  `â‚±${user.salary?.toLocaleString(\"en-PH\") || \"-\"}`\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingUserId === user.id ? (\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"input\"\r\n                    value={editedUser.anual_salary}\r\n                    onChange={(e) =>\r\n                      setEditedUser({ ...editedUser, anual_salary: e.target.value })\r\n                    }\r\n                  />\r\n                ) : (\r\n                  `â‚±${user.anual_salary?.toLocaleString(\"en-PH\") || \"-\"}`\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editingUserId === user.id ? (\r\n                  <>\r\n                    <button onClick={saveUser} className=\"button is-small is-success mr-2\">\r\n                      Save\r\n                    </button>\r\n                    <button onClick={cancelEditing} className=\"button is-small is-danger\">\r\n                      Cancel\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      onClick={() => startEditing(user)}\r\n                      className=\"button is-small is-info mr-2\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => openDelete(user)}\r\n                      className=\"button is-small is-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}