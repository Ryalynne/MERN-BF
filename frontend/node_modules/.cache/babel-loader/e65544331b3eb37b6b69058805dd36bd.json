{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\PROGRAMMING\\\\MERN\\\\frontend\\\\src\\\\components\\\\Employee\\\\EditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUser = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [positions, setPositions] = useState([]);\n  const [position_id, setPositionId] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [departments, setDepartments] = useState([]);\n  const [dep_id, setDepId] = useState(\"\"); // Renamed for consistency\n\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Update salary when position_id changes\n\n  useEffect(() => {\n    const selectedPosition = positions.find(pos => String(pos.id) === String(position_id));\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\n  }, [position_id, positions]); // Fetch all initial data (user, departments, positions)\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        setLoading(true); // Fetch departments\n\n        const deptResponse = await axios.get(\"http://localhost:5000/job\");\n        setDepartments(deptResponse.data); // Fetch user data\n\n        const userResponse = await axios.get(`http://localhost:5000/users/${id}`);\n        console.log(\"User API Response:\", userResponse.data);\n        setName(userResponse.data.full_name || \"\");\n        setEmail(userResponse.data.email || \"\");\n        setGender(userResponse.data.gender || \"\");\n        const jobId = userResponse.data.job_id ? String(userResponse.data.job_id) : \"\";\n        setDepId(jobId);\n        const posId = userResponse.data.salary_id ? String(userResponse.data.salary_id) : \"\";\n        setPositionId(posId); // Fetch positions if job_id exists\n\n        if (jobId) {\n          const posResponse = await axios.get(`http://localhost:5000/salary/getPosition/${jobId}`);\n          console.log(\"Positions for job\", jobId, \":\", posResponse.data);\n          setPositions(posResponse.data); // Validate position_id against fetched positions\n\n          const isValidPosition = posResponse.data.some(pos => String(pos.id) === String(posId));\n\n          if (!isValidPosition) {\n            setPositionId(\"\"); // Reset if invalid\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching initial data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchInitialData();\n  }, [id]); // Fetch positions when dep_id changes (after initial load)\n\n  useEffect(() => {\n    if (!dep_id || loading) {\n      return; // Skip if no dep_id or still loading initial data\n    }\n\n    const fetchPositions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/salary/getPosition/${dep_id}`);\n        const fetchedPositions = response.data;\n        console.log(\"Positions updated for job\", dep_id, \":\", fetchedPositions);\n        setPositions(fetchedPositions); // Reset position_id if it's not valid for the new job\n\n        const isCurrentPositionValid = fetchedPositions.some(pos => String(pos.id) === String(position_id));\n\n        if (!isCurrentPositionValid) {\n          setPositionId(\"\");\n          setSalary(\"\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching positions:\", error);\n        setPositions([]);\n        setPositionId(\"\");\n        setSalary(\"\");\n      }\n    };\n\n    fetchPositions();\n  }, [dep_id, loading]);\n\n  const updateUser = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.patch(`http://localhost:5000/users/${id}`, {\n        name,\n        email,\n        gender,\n        position_id: position_id ? parseInt(position_id) : null,\n        job_id: dep_id ? parseInt(dep_id) : null // Include job_id\n\n      });\n      navigate(\"/home/EmployeeList\");\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column is-half container mt-5\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updateUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"input\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: gender,\n                onChange: e => setGender(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: dep_id,\n                onChange: e => setDepId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Job Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this), departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: dep.id,\n                  children: dep.Job_Title\n                }, dep.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select is-fullwidth\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                required: true,\n                value: position_id,\n                onChange: e => setPositionId(e.target.value),\n                disabled: !dep_id || positions.length === 0,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), positions.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pos.id,\n                  children: pos.position\n                }, pos.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input\",\n              value: salary ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\n                minimumFractionDigits: 2\n              })}` : \"\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button is-success\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUser, \"0MLTwEDt2NfQiEPa1wtmPwV3boE=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/MERN/frontend/src/components/Employee/EditUser.js"],"names":["React","useState","useEffect","axios","useNavigate","useParams","EditUser","name","setName","email","setEmail","gender","setGender","positions","setPositions","position_id","setPositionId","salary","setSalary","departments","setDepartments","dep_id","setDepId","loading","setLoading","navigate","id","selectedPosition","find","pos","String","fetchInitialData","deptResponse","get","data","userResponse","console","log","full_name","jobId","job_id","posId","salary_id","posResponse","isValidPosition","some","error","fetchPositions","response","fetchedPositions","isCurrentPositionValid","updateUser","e","preventDefault","patch","parseInt","target","value","map","dep","Job_Title","length","position","parseFloat","toLocaleString","minimumFractionDigits"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [positions, setPositions] = useState([]);\r\n  const [position_id, setPositionId] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const [departments, setDepartments] = useState([]);\r\n  const [dep_id, setDepId] = useState(\"\"); // Renamed for consistency\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  // Update salary when position_id changes\r\n  useEffect(() => {\r\n    const selectedPosition = positions.find(\r\n      (pos) => String(pos.id) === String(position_id)\r\n    );\r\n    setSalary(selectedPosition ? selectedPosition.salary : \"\");\r\n  }, [position_id, positions]);\r\n\r\n  // Fetch all initial data (user, departments, positions)\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Fetch departments\r\n        const deptResponse = await axios.get(\"http://localhost:5000/job\");\r\n        setDepartments(deptResponse.data);\r\n\r\n        // Fetch user data\r\n        const userResponse = await axios.get(`http://localhost:5000/users/${id}`);\r\n        console.log(\"User API Response:\", userResponse.data);\r\n        setName(userResponse.data.full_name || \"\");\r\n        setEmail(userResponse.data.email || \"\");\r\n        setGender(userResponse.data.gender || \"\");\r\n        const jobId = userResponse.data.job_id ? String(userResponse.data.job_id) : \"\";\r\n        setDepId(jobId);\r\n        const posId = userResponse.data.salary_id ? String(userResponse.data.salary_id) : \"\";\r\n        setPositionId(posId);\r\n\r\n        // Fetch positions if job_id exists\r\n        if (jobId) {\r\n          const posResponse = await axios.get(\r\n            `http://localhost:5000/salary/getPosition/${jobId}`\r\n          );\r\n          console.log(\"Positions for job\", jobId, \":\", posResponse.data);\r\n          setPositions(posResponse.data);\r\n\r\n          // Validate position_id against fetched positions\r\n          const isValidPosition = posResponse.data.some(\r\n            (pos) => String(pos.id) === String(posId)\r\n          );\r\n          if (!isValidPosition) {\r\n            setPositionId(\"\"); // Reset if invalid\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching initial data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, [id]);\r\n\r\n  // Fetch positions when dep_id changes (after initial load)\r\n  useEffect(() => {\r\n    if (!dep_id || loading) {\r\n      return; // Skip if no dep_id or still loading initial data\r\n    }\r\n\r\n    const fetchPositions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:5000/salary/getPosition/${dep_id}`\r\n        );\r\n        const fetchedPositions = response.data;\r\n        console.log(\"Positions updated for job\", dep_id, \":\", fetchedPositions);\r\n        setPositions(fetchedPositions);\r\n\r\n        // Reset position_id if it's not valid for the new job\r\n        const isCurrentPositionValid = fetchedPositions.some(\r\n          (pos) => String(pos.id) === String(position_id)\r\n        );\r\n        if (!isCurrentPositionValid) {\r\n          setPositionId(\"\");\r\n          setSalary(\"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching positions:\", error);\r\n        setPositions([]);\r\n        setPositionId(\"\");\r\n        setSalary(\"\");\r\n      }\r\n    };\r\n\r\n    fetchPositions();\r\n  }, [dep_id, loading]);\r\n\r\n  const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(`http://localhost:5000/users/${id}`, {\r\n        name,\r\n        email,\r\n        gender,\r\n        position_id: position_id ? parseInt(position_id) : null,\r\n        job_id: dep_id ? parseInt(dep_id) : null, // Include job_id\r\n      });\r\n      navigate(\"/home/EmployeeList\");\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"column is-half container mt-5\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <form onSubmit={updateUser}>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Name</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder=\"Name\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Email</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"input\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Gender</label>\r\n              <div className=\"control\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select\r\n                    value={gender}\r\n                    onChange={(e) => setGender(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Gender</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Job Title</label>\r\n              <div className=\"control\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select\r\n                    value={dep_id}\r\n                    onChange={(e) => setDepId(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select Job Title</option>\r\n                    {departments.map((dep) => (\r\n                      <option key={dep.id} value={dep.id}>\r\n                        {dep.Job_Title}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Position</label>\r\n              <div className=\"control\">\r\n                <div className=\"select is-fullwidth\">\r\n                  <select\r\n                    required\r\n                    value={position_id}\r\n                    onChange={(e) => setPositionId(e.target.value)}\r\n                    disabled={!dep_id || positions.length === 0}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select a position</option>\r\n                    {positions.map((pos) => (\r\n                      <option key={pos.id} value={pos.id}>\r\n                        {pos.position}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Salary</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  value={\r\n                    salary\r\n                      ? `₱${parseFloat(salary).toLocaleString(\"en-PH\", {\r\n                          minimumFractionDigits: 2,\r\n                        })}`\r\n                      : \"\"\r\n                  }\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <button type=\"submit\" className=\"button is-success\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}