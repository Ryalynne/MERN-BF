{"ast":null,"code":"import { frame } from 'motion-dom';\nimport { useMotionValueEvent } from '../utils/use-motion-value-event.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n/**\r\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\r\n *\r\n * ```javascript\r\n * const x = useMotionValue(0)\r\n * const xVelocity = useVelocity(x)\r\n * const xAcceleration = useVelocity(xVelocity)\r\n * ```\r\n *\r\n * @public\r\n */\n\nfunction useVelocity(value) {\n  const velocity = useMotionValue(value.getVelocity());\n\n  const updateVelocity = () => {\n    const latest = value.getVelocity();\n    velocity.set(latest);\n    /**\r\n     * If we still have velocity, schedule an update for the next frame\r\n     * to keep checking until it is zero.\r\n     */\n\n    if (latest) frame.update(updateVelocity);\n  };\n\n  useMotionValueEvent(value, \"change\", () => {\n    // Schedule an update to this value at the end of the current frame.\n    frame.update(updateVelocity, false, true);\n  });\n  return velocity;\n}\n\nexport { useVelocity };","map":{"version":3,"sources":["C:/Users/PC/Documents/PROGRAMMING/New folder/MERN-BF/frontend/node_modules/framer-motion/dist/es/value/use-velocity.mjs"],"names":["frame","useMotionValueEvent","useMotionValue","useVelocity","value","velocity","getVelocity","updateVelocity","latest","set","update"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,qCAApC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,QAAQ,GAAGH,cAAc,CAACE,KAAK,CAACE,WAAN,EAAD,CAA/B;;AACA,QAAMC,cAAc,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAGJ,KAAK,CAACE,WAAN,EAAf;AACAD,IAAAA,QAAQ,CAACI,GAAT,CAAaD,MAAb;AACA;AACR;AACA;AACA;;AACQ,QAAIA,MAAJ,EACIR,KAAK,CAACU,MAAN,CAAaH,cAAb;AACP,GATD;;AAUAN,EAAAA,mBAAmB,CAACG,KAAD,EAAQ,QAAR,EAAkB,MAAM;AACvC;AACAJ,IAAAA,KAAK,CAACU,MAAN,CAAaH,cAAb,EAA6B,KAA7B,EAAoC,IAApC;AACH,GAHkB,CAAnB;AAIA,SAAOF,QAAP;AACH;;AAED,SAASF,WAAT","sourcesContent":["import { frame } from 'motion-dom';\r\nimport { useMotionValueEvent } from '../utils/use-motion-value-event.mjs';\r\nimport { useMotionValue } from './use-motion-value.mjs';\r\n\r\n/**\r\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\r\n *\r\n * ```javascript\r\n * const x = useMotionValue(0)\r\n * const xVelocity = useVelocity(x)\r\n * const xAcceleration = useVelocity(xVelocity)\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useVelocity(value) {\r\n    const velocity = useMotionValue(value.getVelocity());\r\n    const updateVelocity = () => {\r\n        const latest = value.getVelocity();\r\n        velocity.set(latest);\r\n        /**\r\n         * If we still have velocity, schedule an update for the next frame\r\n         * to keep checking until it is zero.\r\n         */\r\n        if (latest)\r\n            frame.update(updateVelocity);\r\n    };\r\n    useMotionValueEvent(value, \"change\", () => {\r\n        // Schedule an update to this value at the end of the current frame.\r\n        frame.update(updateVelocity, false, true);\r\n    });\r\n    return velocity;\r\n}\r\n\r\nexport { useVelocity };\r\n"]},"metadata":{},"sourceType":"module"}