[{"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\index.js":"1","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\App.js":"2","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\AddUser.js":"3","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\UserList.js":"4","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\EditUser.js":"5","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\JobList.js":"6","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\AddJob.js":"7","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\EditJob.js":"8","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\AddSalary.js":"9","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\SalaryList.js":"10","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\EditSalary.js":"11","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Printing\\SalaryPDF.js":"12","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Printing\\EmployeePDF.js":"13","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Printing\\styles.js":"14","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Navbar.js":"15","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\ConfirmBox.js":"16","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Footer.js":"17","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\page\\LoginPage.js":"18","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\page\\HomePage.js":"19","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\context\\authContext.js":"20","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\page\\RegisterPage.js":"21","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Resume.js":"22","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\AddDeptModal.js":"23","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\AddSalaryModel.js":"24","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\AddEmployee.js":"25","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\index.js":"26","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\App.js":"27","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\context\\authContext.js":"28","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\page\\HomePage.js":"29","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\page\\LoginPage.js":"30","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\page\\RegisterPage.js":"31","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Employee\\EditUser.js":"32","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Employee\\UserList.js":"33","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Employee\\AddUser.js":"34","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Salary\\AddSalary.js":"35","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\JobTitle\\EditJob.js":"36","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\JobTitle\\JobList.js":"37","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\JobTitle\\AddJob.js":"38","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Salary\\SalaryList.js":"39","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Resume.js":"40","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Salary\\EditSalary.js":"41","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Footer.js":"42","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Navbar.js":"43","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Printing\\EmployeePDF.js":"44","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Printing\\SalaryPDF.js":"45","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Modal\\ConfirmBox.js":"46","C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Printing\\styles.js":"47"},{"size":240,"mtime":1741058153252,"results":"48","hashOfConfig":"49"},{"size":1231,"mtime":1741835279282,"results":"50","hashOfConfig":"49"},{"size":6086,"mtime":1741923275507,"results":"51","hashOfConfig":"49"},{"size":37538,"mtime":1741960801179,"results":"52","hashOfConfig":"49"},{"size":10316,"mtime":1741954604839,"results":"53","hashOfConfig":"49"},{"size":13005,"mtime":1741960281033,"results":"54","hashOfConfig":"49"},{"size":1305,"mtime":1741923215123,"results":"55","hashOfConfig":"49"},{"size":1810,"mtime":1741939381152,"results":"56","hashOfConfig":"49"},{"size":3099,"mtime":1741934414459,"results":"57","hashOfConfig":"49"},{"size":18129,"mtime":1741960292710,"results":"58","hashOfConfig":"49"},{"size":3662,"mtime":1741939562150,"results":"59","hashOfConfig":"49"},{"size":1893,"mtime":1741945652769,"results":"60","hashOfConfig":"49"},{"size":2089,"mtime":1741910987730,"results":"61","hashOfConfig":"49"},{"size":2192,"mtime":1741763293171,"results":"62","hashOfConfig":"49"},{"size":4157,"mtime":1741868355130,"results":"63","hashOfConfig":"49"},{"size":1934,"mtime":1741841455952,"results":"64","hashOfConfig":"49"},{"size":338,"mtime":1741605558765,"results":"65","hashOfConfig":"49"},{"size":5135,"mtime":1741835592883,"results":"66","hashOfConfig":"49"},{"size":1700,"mtime":1741834463772,"results":"67","hashOfConfig":"49"},{"size":968,"mtime":1741828700162,"results":"68","hashOfConfig":"49"},{"size":6048,"mtime":1741837915598,"results":"69","hashOfConfig":"49"},{"size":5706,"mtime":1741945309290,"results":"70","hashOfConfig":"49"},{"size":3103,"mtime":1741924661765,"results":"71","hashOfConfig":"49"},{"size":3708,"mtime":1741867482437,"results":"72","hashOfConfig":"49"},{"size":6690,"mtime":1741868125801,"results":"73","hashOfConfig":"49"},{"size":240,"mtime":1742031445472,"results":"74","hashOfConfig":"75"},{"size":1231,"mtime":1742031445456,"results":"76","hashOfConfig":"75"},{"size":968,"mtime":1742031445472,"results":"77","hashOfConfig":"75"},{"size":1700,"mtime":1742031445473,"results":"78","hashOfConfig":"75"},{"size":7753,"mtime":1742031445473,"results":"79","hashOfConfig":"75"},{"size":6048,"mtime":1742031445473,"results":"80","hashOfConfig":"75"},{"size":10395,"mtime":1742043434451,"results":"81","hashOfConfig":"75"},{"size":59511,"mtime":1742043434452,"results":"82","hashOfConfig":"75"},{"size":6163,"mtime":1742043434451,"results":"83","hashOfConfig":"75"},{"size":3176,"mtime":1742043434454,"results":"84","hashOfConfig":"75"},{"size":1887,"mtime":1742043434453,"results":"85","hashOfConfig":"75"},{"size":24408,"mtime":1742043434453,"results":"86","hashOfConfig":"75"},{"size":1382,"mtime":1742043434452,"results":"87","hashOfConfig":"75"},{"size":35172,"mtime":1742044297036,"results":"88","hashOfConfig":"75"},{"size":8484,"mtime":1742044488507,"results":"89","hashOfConfig":"75"},{"size":3739,"mtime":1742043434454,"results":"90","hashOfConfig":"75"},{"size":338,"mtime":1742031445469,"results":"91","hashOfConfig":"75"},{"size":7684,"mtime":1742043434455,"results":"92","hashOfConfig":"75"},{"size":2089,"mtime":1742031445465,"results":"93","hashOfConfig":"75"},{"size":1893,"mtime":1742031445465,"results":"94","hashOfConfig":"75"},{"size":1934,"mtime":1742031445471,"results":"95","hashOfConfig":"75"},{"size":2192,"mtime":1742031445467,"results":"96","hashOfConfig":"75"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"yzk4fv",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lpraqb",{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\index.js",[],[],["240","241"],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\App.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\AddUser.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\UserList.js",["242"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport EmployePDF from \"../Printing/EmployeePDF\";\r\nimport ConfirmBox from \"../UI/Modal/ConfirmBox\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [deleteData, setDeleteData] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [positions, setPositions] = useState({});\r\n  const [editRow, setEditRow] = useState(null);\r\n  const [editedData, setEditedData] = useState({});\r\n  const [loadingPositions, setLoadingPositions] = useState({});\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [newEmployee, setNewEmployee] = useState({\r\n    full_name: \"\",\r\n    gender: \"\",\r\n    email: \"\",\r\n    job_id: \"\",\r\n    salary_id: \"\",\r\n  });\r\n  const [addErrors, setAddErrors] = useState({\r\n    full_name: false,\r\n    gender: false,\r\n    email: false,\r\n    job_id: false,\r\n    salary_id: false,\r\n  });\r\n  const [editErrors, setEditErrors] = useState({\r\n    full_name: false,\r\n    gender: false,\r\n    email: false,\r\n    job_id: false,\r\n    salary_id: false,\r\n  });\r\n\r\n  // Pagination States\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n\r\n  // Email Validation Function\r\n  const isValidEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    fetchDepartments();\r\n    const handleResize = () => setIsMobile(window.innerWidth < 768);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/job\");\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error fetching departments:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const fetchPositionsForJob = async (jobId) => {\r\n    if (!jobId) return [];\r\n    setLoadingPositions((prev) => ({ ...prev, [jobId]: true }));\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/salary/getPosition/${jobId}`\r\n      );\r\n      setPositions((prev) => ({ ...prev, [jobId]: response.data }));\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching positions for job ${jobId}:`, error);\r\n      return [];\r\n    } finally {\r\n      setLoadingPositions((prev) => ({ ...prev, [jobId]: false }));\r\n    }\r\n  };\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/users\");\r\n      setUsers(response.data);\r\n      const uniqueJobIds = [\r\n        ...new Set(response.data.map((user) => user.job_id).filter(Boolean)),\r\n      ];\r\n      await Promise.all(\r\n        uniqueJobIds.map((jobId) => fetchPositionsForJob(jobId))\r\n      );\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error fetching users:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (user) => {\r\n    if (!user?.id) return;\r\n    setEditRow(user.id);\r\n    setEditErrors({\r\n      full_name: false,\r\n      gender: false,\r\n      email: false,\r\n      job_id: false,\r\n      salary_id: false,\r\n    });\r\n\r\n    const matchedJob =\r\n      departments.find((dep) => dep.Job_Title === user.Job_Title) || {};\r\n    const jobId = matchedJob.id ?? user.job_id ?? \"\";\r\n    let updatedPositions = positions[jobId] || [];\r\n    if (jobId && !updatedPositions.length && !loadingPositions[jobId]) {\r\n      updatedPositions = await fetchPositionsForJob(jobId);\r\n    }\r\n\r\n    const matchedPosition =\r\n      updatedPositions.find((pos) => pos?.position === user.position) || {};\r\n    setEditedData({\r\n      full_name: String(user.full_name ?? \"\"),\r\n      gender: String(user.gender ?? \"\"),\r\n      email: String(user.email ?? \"\"),\r\n      job_id: String(jobId),\r\n      job_title: String(user.Job_Title ?? \"\"),\r\n      salary_id: String(matchedPosition.id ?? \"\"),\r\n      salary: String(matchedPosition.salary ?? user.salary ?? \"\"),\r\n    });\r\n  };\r\n\r\n  const handleEditChange = (e, field) => {\r\n    const value = e.target.value;\r\n    setEditedData((prev) => {\r\n      const newData = { ...prev, [field]: value };\r\n      if (field === \"job_id\") {\r\n        fetchPositionsForJob(value).then(() => {\r\n          setEditedData((prevUpdated) => ({\r\n            ...prevUpdated,\r\n            salary_id: \"\",\r\n            salary: \"\",\r\n          }));\r\n        });\r\n      }\r\n      if (field === \"salary_id\") {\r\n        const selectedPosition = positions[prev.job_id]?.find(\r\n          (pos) => pos.id.toString() === value\r\n        );\r\n        newData.salary = selectedPosition\r\n          ? selectedPosition.salary.toString()\r\n          : \"\";\r\n      }\r\n      return newData;\r\n    });\r\n    setEditErrors((prev) => ({\r\n      ...prev,\r\n      [field]:\r\n        field === \"email\"\r\n          ? !isValidEmail(value)\r\n          : !value || value.trim() === \"\",\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (id) => {\r\n    const newEditErrors = {\r\n      full_name: !editedData.full_name || editedData.full_name.trim() === \"\",\r\n      gender: !editedData.gender || editedData.gender.trim() === \"\",\r\n      email: !editedData.email || !isValidEmail(editedData.email),\r\n      job_id: !editedData.job_id || editedData.job_id.trim() === \"\",\r\n      salary_id: !editedData.salary_id || editedData.salary_id.trim() === \"\",\r\n    };\r\n\r\n    if (Object.values(newEditErrors).some((error) => error)) {\r\n      setEditErrors(newEditErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const updateData = {\r\n        name: editedData.full_name,\r\n        gender: editedData.gender,\r\n        email: editedData.email,\r\n        position_id: parseInt(editedData.salary_id) || null,\r\n        job_id: parseInt(editedData.job_id) || null,\r\n      };\r\n      await axios.patch(`http://localhost:5000/users/${id}`, updateData);\r\n      setEditRow(null);\r\n      setEditErrors({\r\n        full_name: false,\r\n        gender: false,\r\n        email: false,\r\n        job_id: false,\r\n        salary_id: false,\r\n      });\r\n      await getUsers();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error updating user:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const startAdding = () => {\r\n    setIsAdding(true);\r\n    setNewEmployee({\r\n      full_name: \"\",\r\n      gender: \"\",\r\n      email: \"\",\r\n      job_id: \"\",\r\n      salary_id: \"\",\r\n    });\r\n    setAddErrors({\r\n      full_name: false,\r\n      gender: false,\r\n      email: false,\r\n      job_id: false,\r\n      salary_id: false,\r\n    });\r\n  };\r\n\r\n  const cancelAdding = () => {\r\n    setIsAdding(false);\r\n    setNewEmployee({\r\n      full_name: \"\",\r\n      gender: \"\",\r\n      email: \"\",\r\n      job_id: \"\",\r\n      salary_id: \"\",\r\n    });\r\n    setAddErrors({\r\n      full_name: false,\r\n      gender: false,\r\n      email: false,\r\n      job_id: false,\r\n      salary_id: false,\r\n    });\r\n  };\r\n\r\n  const handleNewChange = (e, field) => {\r\n    const value = e.target.value;\r\n    setNewEmployee((prev) => {\r\n      const newData = { ...prev, [field]: value };\r\n      if (field === \"job_id\") {\r\n        fetchPositionsForJob(value);\r\n        newData.salary_id = \"\";\r\n      }\r\n      return newData;\r\n    });\r\n    setAddErrors((prev) => ({\r\n      ...prev,\r\n      [field]:\r\n        field === \"email\"\r\n          ? !isValidEmail(value)\r\n          : !value || value.trim() === \"\",\r\n    }));\r\n  };\r\n\r\n  const saveNewEmployee = async () => {\r\n    const newAddErrors = {\r\n      full_name: !newEmployee.full_name || newEmployee.full_name.trim() === \"\",\r\n      gender: !newEmployee.gender || newEmployee.gender.trim() === \"\",\r\n      email: !newEmployee.email || !isValidEmail(newEmployee.email),\r\n      job_id: !newEmployee.job_id || newEmployee.job_id.trim() === \"\",\r\n      salary_id: !newEmployee.salary_id || newEmployee.salary_id.trim() === \"\",\r\n    };\r\n\r\n    if (Object.values(newAddErrors).some((error) => error)) {\r\n      setAddErrors(newAddErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        name: newEmployee.full_name,\r\n        gender: newEmployee.gender,\r\n        email: newEmployee.email,\r\n        position_id: parseInt(newEmployee.salary_id),\r\n        job_id: parseInt(newEmployee.job_id),\r\n      };\r\n      await axios.post(\"http://localhost:5000/users\", payload);\r\n      setIsAdding(false);\r\n      setNewEmployee({\r\n        full_name: \"\",\r\n        gender: \"\",\r\n        email: \"\",\r\n        job_id: \"\",\r\n        salary_id: \"\",\r\n      });\r\n      setAddErrors({\r\n        full_name: false,\r\n        gender: false,\r\n        email: false,\r\n        job_id: false,\r\n        salary_id: false,\r\n      });\r\n      await getUsers();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error adding employee:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  // Filtering and Pagination Logic\r\n  const filteredUsers = users.filter((user) =>\r\n    `${user.full_name} ${user.email} ${user.Job_Title || \"\"} ${\r\n      user.position || \"\"\r\n    } ${user.id}`\r\n      .toLowerCase()\r\n      .includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const totalItems = filteredUsers.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = Math.min(startIndex + itemsPerPage, totalItems);\r\n  const displayedUsers = filteredUsers.slice(startIndex, endIndex);\r\n\r\n  // Pagination Handlers\r\n  const goToPage = (page) => {\r\n    setCurrentPage(Math.max(1, Math.min(page, totalPages)));\r\n  };\r\n\r\n  const handleItemsPerPageChange = (e) => {\r\n    const newItemsPerPage = Number(e.target.value);\r\n    setItemsPerPage(newItemsPerPage);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const openDelete = (user) => {\r\n    setDeleteData(user);\r\n    setOpen(true);\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    if (!deleteData) return;\r\n    try {\r\n      await axios.delete(`http://localhost:5000/users/${deleteData.id}`);\r\n      setDeleteData(null);\r\n      setOpen(false);\r\n      await getUsers();\r\n    } catch (error) {\r\n      console.error(\r\n        \"Error deleting user:\",\r\n        error.response?.data || error.message\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleViewPDF = async () => {\r\n    const blob = await pdf(<EmployePDF users={users} />).toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          backgroundImage: \"url('/loginBanner.jpg')\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundAttachment: \"fixed\",\r\n          zIndex: -2,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          background: \"rgba(0, 0, 0, 0.5)\",\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      <div\r\n        className=\"column container mt-5\"\r\n        style={{ position: \"relative\", zIndex: 1 }}\r\n      >\r\n        <div className=\"is-flex is-justify-content-space-between mb-4 is-flex-wrap-wrap\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input mt-2\"\r\n            style={{ maxWidth: isMobile ? \"50%\" : \"300px\", width: \"100%\" }}\r\n            placeholder=\"Search by Full Name, Job Title or Position...\"\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value);\r\n              setCurrentPage(1);\r\n            }}\r\n          />\r\n          <div className=\"mt-2 is-flex is-flex-wrap-wrap\">\r\n            {!isMobile && !isAdding && (\r\n              <button\r\n                className=\"button is-success ml-3 mb-2\"\r\n                onClick={startAdding}\r\n              >\r\n                Add Employee\r\n              </button>\r\n            )}\r\n            {isMobile ? (\r\n              <Link\r\n                to=\"/home/AddEmployee\"\r\n                className=\"button is-success ml-3 mb-2\"\r\n              >\r\n                Add Employee\r\n              </Link>\r\n            ) : null}\r\n            <button\r\n              onClick={handleViewPDF}\r\n              className=\"button is-info ml-3 mb-2\"\r\n            >\r\n              View PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Modern Table Design */}\r\n        {!isMobile ? (\r\n          <div\r\n            className=\"table-container box\"\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n            }}\r\n          >\r\n            <table className=\"table is-fullwidth is-hoverable\">\r\n              <thead>\r\n                <tr style={{ backgroundColor: \"#f5f5f5\" }}>\r\n                  <th className=\"has-text-weight-semibold\">Employee ID</th>\r\n                  <th className=\"has-text-weight-semibold\">Full Name</th>\r\n                  <th className=\"has-text-weight-semibold\">Gender</th>\r\n                  <th className=\"has-text-weight-semibold\">Email</th>\r\n                  <th className=\"has-text-weight-semibold\">Job Title</th>\r\n                  <th className=\"has-text-weight-semibold\">Position</th>\r\n                  <th className=\"has-text-weight-semibold\">Salary</th>\r\n                  <th className=\"has-text-weight-semibold\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {isAdding && (\r\n                  <tr>\r\n                    <td className=\"has-text-grey\">New</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={`input ${\r\n                          addErrors.full_name ? \"is-danger\" : \"\"\r\n                        }`}\r\n                        value={newEmployee.full_name}\r\n                        onChange={(e) => handleNewChange(e, \"full_name\")}\r\n                        placeholder=\"Full Name\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={newEmployee.gender}\r\n                          onChange={(e) => handleNewChange(e, \"gender\")}\r\n                          className={addErrors.gender ? \"is-danger\" : \"\"}\r\n                        >\r\n                          <option value=\"\">Select Gender</option>\r\n                          <option value=\"Male\">Male</option>\r\n                          <option value=\"Female\">Female</option>\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"email\"\r\n                        className={`input ${\r\n                          addErrors.email ? \"is-danger\" : \"\"\r\n                        }`}\r\n                        value={newEmployee.email}\r\n                        onChange={(e) => handleNewChange(e, \"email\")}\r\n                        placeholder=\"Email\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={newEmployee.job_id}\r\n                          onChange={(e) => handleNewChange(e, \"job_id\")}\r\n                          className={addErrors.job_id ? \"is-danger\" : \"\"}\r\n                        >\r\n                          <option value=\"\">Select Job Title</option>\r\n                          {departments.map((dep) => (\r\n                            <option key={dep.id} value={dep.id.toString()}>\r\n                              {dep.Job_Title}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={newEmployee.salary_id}\r\n                          onChange={(e) => handleNewChange(e, \"salary_id\")}\r\n                          disabled={\r\n                            !newEmployee.job_id ||\r\n                            loadingPositions[newEmployee.job_id] ||\r\n                            !positions[newEmployee.job_id]?.length\r\n                          }\r\n                          className={addErrors.salary_id ? \"is-danger\" : \"\"}\r\n                        >\r\n                          <option value=\"\">Select Position</option>\r\n                          {loadingPositions[newEmployee.job_id] ? (\r\n                            <option disabled>Loading positions...</option>\r\n                          ) : positions[newEmployee.job_id]?.length ? (\r\n                            positions[newEmployee.job_id].map((pos) => (\r\n                              <option key={pos.id} value={pos.id.toString()}>\r\n                                {pos.position}\r\n                              </option>\r\n                            ))\r\n                          ) : (\r\n                            <option disabled>No positions available</option>\r\n                          )}\r\n                        </select>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"input\"\r\n                        value={\r\n                          newEmployee.salary_id && positions[newEmployee.job_id]\r\n                            ? `₱${positions[newEmployee.job_id]\r\n                                .find(\r\n                                  (pos) =>\r\n                                    pos.id.toString() === newEmployee.salary_id\r\n                                )\r\n                                ?.salary.toLocaleString(\"en-PH\", {\r\n                                  minimumFractionDigits: 2,\r\n                                })}`\r\n                            : \"\"\r\n                        }\r\n                        disabled\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          gap: \"0.5rem\",\r\n                        }}\r\n                      >\r\n                        <button\r\n                          className=\"button is-small is-success\"\r\n                          onClick={saveNewEmployee}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                        <button\r\n                          className=\"button is-small is-danger is-outlined\"\r\n                          onClick={cancelAdding}\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n                {displayedUsers.length > 0 ? (\r\n                  displayedUsers.map((user) => (\r\n                    <tr key={user.id}>\r\n                      <td>{user.id}</td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <input\r\n                            type=\"text\"\r\n                            className={`input ${\r\n                              editErrors.full_name ? \"is-danger\" : \"\"\r\n                            }`}\r\n                            value={editedData.full_name || \"\"}\r\n                            onChange={(e) => handleEditChange(e, \"full_name\")}\r\n                          />\r\n                        ) : (\r\n                          user.full_name\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div className=\"select is-fullwidth\">\r\n                            <select\r\n                              value={editedData.gender || \"\"}\r\n                              onChange={(e) => handleEditChange(e, \"gender\")}\r\n                              className={editErrors.gender ? \"is-danger\" : \"\"}\r\n                            >\r\n                              <option value=\"\">Select Gender</option>\r\n                              <option value=\"Male\">Male</option>\r\n                              <option value=\"Female\">Female</option>\r\n                            </select>\r\n                          </div>\r\n                        ) : (\r\n                          user.gender\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <input\r\n                            type=\"email\"\r\n                            className={`input ${\r\n                              editErrors.email ? \"is-danger\" : \"\"\r\n                            }`}\r\n                            value={editedData.email || \"\"}\r\n                            onChange={(e) => handleEditChange(e, \"email\")}\r\n                          />\r\n                        ) : (\r\n                          user.email\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div className=\"select is-fullwidth\">\r\n                            <select\r\n                              value={editedData.job_id || \"\"}\r\n                              onChange={(e) => handleEditChange(e, \"job_id\")}\r\n                              className={editErrors.job_id ? \"is-danger\" : \"\"}\r\n                            >\r\n                              <option value=\"\">Select Job Title</option>\r\n                              {departments.map((dep) => (\r\n                                <option key={dep.id} value={dep.id.toString()}>\r\n                                  {dep.Job_Title}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                        ) : (\r\n                          user.Job_Title || \"-\"\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div className=\"select is-fullwidth\">\r\n                            <select\r\n                              value={editedData.salary_id || \"\"}\r\n                              onChange={(e) => handleEditChange(e, \"salary_id\")}\r\n                              disabled={\r\n                                !editedData.job_id ||\r\n                                loadingPositions[editedData.job_id] ||\r\n                                !positions[editedData.job_id]?.length\r\n                              }\r\n                              className={\r\n                                editErrors.salary_id ? \"is-danger\" : \"\"\r\n                              }\r\n                            >\r\n                              <option value=\"\">Select Position</option>\r\n                              {loadingPositions[editedData.job_id] ? (\r\n                                <option disabled>Loading positions...</option>\r\n                              ) : positions[editedData.job_id]?.length ? (\r\n                                positions[editedData.job_id].map((pos) => (\r\n                                  <option\r\n                                    key={pos.id}\r\n                                    value={pos.id.toString()}\r\n                                  >\r\n                                    {pos.position}\r\n                                  </option>\r\n                                ))\r\n                              ) : (\r\n                                <option disabled>No positions available</option>\r\n                              )}\r\n                            </select>\r\n                          </div>\r\n                        ) : (\r\n                          user.position || \"-\"\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"input\"\r\n                            value={\r\n                              editedData.salary\r\n                                ? `₱${Number(editedData.salary).toLocaleString(\r\n                                    \"en-PH\",\r\n                                    {\r\n                                      minimumFractionDigits: 2,\r\n                                    }\r\n                                  )}`\r\n                                : \"\"\r\n                            }\r\n                            disabled\r\n                          />\r\n                        ) : (\r\n                          `₱${user.salary?.toLocaleString(\"en-PH\") || \"-\"}`\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {editRow === user.id ? (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              gap: \"0.5rem\",\r\n                            }}\r\n                          >\r\n                            <button\r\n                              className=\"button is-small is-success\"\r\n                              onClick={() => handleSave(user.id)}\r\n                            >\r\n                              Save\r\n                            </button>\r\n                            <button\r\n                              className=\"button is-small is-danger is-outlined\"\r\n                              onClick={() => setEditRow(null)}\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                          </div>\r\n                        ) : (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              gap: \"0.5rem\",\r\n                            }}\r\n                          >\r\n                            <button\r\n                              onClick={() => handleEdit(user)}\r\n                              className=\"button is-small is-info is-outlined\"\r\n                            >\r\n                              Edit\r\n                            </button>\r\n                            <button\r\n                              onClick={() => openDelete(user)}\r\n                              className=\"button is-small is-danger is-outlined\"\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"8\" className=\"has-text-centered\">\r\n                      No users found.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : (\r\n          <div className=\"columns is-multiline m-1\">\r\n            {displayedUsers.map((user) => (\r\n              <div key={user.id} className=\"column is-12\">\r\n                <div\r\n                  className=\"card\"\r\n                  style={{\r\n                    borderRadius: \"8px\",\r\n                    boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                  }}\r\n                >\r\n                  <header\r\n                    className=\"card-header\"\r\n                    style={{ backgroundColor: \"#f5f5f5\" }}\r\n                  >\r\n                    <p className=\"card-header-title\">\r\n                      {user.full_name} - {user.gender}\r\n                    </p>\r\n                  </header>\r\n                  <div className=\"card-content\">\r\n                    <p>\r\n                      <strong>Employee ID:</strong> {user.id}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Email:</strong> {user.email}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Job Title:</strong> {user.Job_Title || \"-\"}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Position:</strong> {user.position || \"-\"}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Salary:</strong> ₱\r\n                      {user.salary?.toLocaleString(\"en-PH\") || \"-\"}\r\n                    </p>\r\n                  </div>\r\n                  <footer className=\"card-footer\">\r\n                    <Link\r\n                      to={`/home/edit/${user.id}`}\r\n                      className=\"card-footer-item button is-small is-info is-outlined\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                    <button\r\n                      onClick={() => openDelete(user)}\r\n                      className=\"card-footer-item button is-small is-danger is-outlined\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </footer>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination Controls */}\r\n        <nav\r\n          className=\"pagination is-centered mt-4\"\r\n          role=\"navigation\"\r\n          aria-label=\"pagination\"\r\n        >\r\n          <div className=\"is-flex is-align-items-center is-flex-wrap-wrap is-justify-content-center\">\r\n            <div className=\"is-flex is-align-items-center mb-2 mr-4\">\r\n              <label className=\"has-text-white mr-2\">Items per page:</label>\r\n              <div className=\"select\">\r\n                <select\r\n                  value={itemsPerPage}\r\n                  onChange={handleItemsPerPageChange}\r\n                >\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"50\">50</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"is-flex is-align-items-center\">\r\n              <button\r\n                className=\"button is-small is-light mr-2\"\r\n                onClick={() => goToPage(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n              >\r\n                Previous\r\n              </button>\r\n              <span className=\"has-text-white mx-2\">\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n              <button\r\n                className=\"button is-small is-light ml-2\"\r\n                onClick={() => goToPage(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"has-text-white mt-2\">\r\n            Showing {startIndex + 1} to {endIndex} of {totalItems} entries\r\n          </p>\r\n        </nav>\r\n\r\n        <ConfirmBox\r\n          open={open}\r\n          closeDialog={() => setOpen(false)}\r\n          title={deleteData?.full_name}\r\n          empID={deleteData?.id}\r\n          deleteFunction={deleteUser}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n// import EmployePDF from \"../Printing/EmployeePDF\"; // ✅ Import the PDF component\r\n\r\n// const UserList = () => {\r\n//   const [users, setUser] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [entriesToShow, setEntriesToShow] = useState(10);\r\n\r\n//   useEffect(() => {\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getUsers = async () => {\r\n//     try {\r\n//       const response = await axios.get(\"http://localhost:5000/users\");\r\n//       setUser(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching users:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteUser = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/users/${id}`);\r\n//       getUsers();\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Filter users based on search term\r\n//   const filteredUsers = users.filter((user) =>\r\n//     `${user.full_name} ${user.email} ${user.Job_Title} ${user.position} ${user.id}`\r\n//       .toLowerCase()\r\n//       .includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   // Limit displayed entries based on selection\r\n//   const displayedUsers = filteredUsers.slice(0, entriesToShow);\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       {/* Search Bar and Action Buttons */}\r\n//       <div className=\"is-flex is-justify-content-space-between mb-3\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input\"\r\n//           style={{ maxWidth: \"300px\" }}\r\n//           placeholder=\"Search by Employee ID, Name, Email, Job Title, or Position...\"\r\n//           value={searchTerm}\r\n//           onChange={(e) => setSearchTerm(e.target.value)}\r\n//         />\r\n//         <div>\r\n//           <Link to=\"AddEmployee\" className=\"button is-success mr-2\">\r\n//             Add Employee\r\n//           </Link>\r\n\r\n//           <PDFDownloadLink\r\n//             document={<EmployePDF users={users} />}\r\n//             fileName=\"Employee_Report.pdf\"\r\n//             className=\"button is-info mr-3\"\r\n//           >\r\n//             {({ loading }) => (loading ? \"Generating PDF...\" : \"Export PDF\")}\r\n//           </PDFDownloadLink>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Employee Table */}\r\n//       <table className=\"table is-striped is-fullwidth\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Employee ID</th>\r\n//             <th>Full Name</th>\r\n//             <th>Email</th>\r\n//             <th>Gender</th>\r\n//             <th>Job Title</th>\r\n//             <th>Position / Level</th>\r\n//             <th>Salary</th>\r\n//             <th>Annual Salary</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {displayedUsers.length > 0 ? (\r\n//             displayedUsers.map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.id}</td>\r\n//                 <td>{user.full_name}</td>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.gender}</td>\r\n//                 <td>{user.Job_Title}</td>\r\n//                 <td>{user.position}</td>\r\n//                 <td>\r\n//                   {user.salary\r\n//                     ? `₱${parseFloat(user.salary).toLocaleString(\"en-PH\", {\r\n//                         minimumFractionDigits: 2,\r\n//                       })}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   {user.anual_salary\r\n//                     ? `₱${parseFloat(user.anual_salary).toLocaleString(\r\n//                         \"en-PH\",\r\n//                         {\r\n//                           minimumFractionDigits: 2,\r\n//                         }\r\n//                       )}`\r\n//                     : \"\"}\r\n//                 </td>\r\n//                 <td>\r\n//                   <Link\r\n//                     to={`edit/${user.id}`}\r\n//                     className=\"button is-small is-info mr-2\"\r\n//                   >\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button\r\n//                     onClick={() => deleteUser(user.id)}\r\n//                     className=\"button is-small is-danger\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"9\" className=\"has-text-centered\">\r\n//                 No users found.\r\n//               </td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Footer with Entry Filter */}\r\n//       <div className=\"is-flex is-align-items-center is-justify-content-space-between mt-3\">\r\n//         <div>\r\n//           <label className=\"mr-2\">Show entries:</label>\r\n//           <div className=\"select\">\r\n//             <select\r\n//               value={entriesToShow}\r\n//               onChange={(e) => setEntriesToShow(Number(e.target.value))}\r\n//             >\r\n//               <option value=\"5\">5</option>\r\n//               <option value=\"10\">10</option>\r\n//               <option value=\"20\">20</option>\r\n//               <option value={filteredUsers.length}>All</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <p>\r\n//           Showing {displayedUsers.length} of {filteredUsers.length} entries\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n","C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Employee\\EditUser.js",["243"],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\JobList.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\AddJob.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\JobTitle\\EditJob.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\AddSalary.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\SalaryList.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Salary\\EditSalary.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Printing\\SalaryPDF.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Printing\\EmployeePDF.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\Printing\\styles.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Navbar.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\ConfirmBox.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Footer.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\page\\LoginPage.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\page\\HomePage.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\context\\authContext.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\page\\RegisterPage.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Resume.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\AddDeptModal.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\AddSalaryModel.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\MERN\\frontend\\src\\components\\UI\\Modal\\AddEmployee.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\index.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\App.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\context\\authContext.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\page\\HomePage.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\page\\LoginPage.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\page\\RegisterPage.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Employee\\EditUser.js",["244"],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Employee\\UserList.js",["245"],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Employee\\AddUser.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Salary\\AddSalary.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\JobTitle\\EditJob.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\JobTitle\\JobList.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\JobTitle\\AddJob.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Salary\\SalaryList.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Resume.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Salary\\EditSalary.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Footer.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Navbar.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Printing\\EmployeePDF.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Printing\\SalaryPDF.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\UI\\Modal\\ConfirmBox.js",[],[],"C:\\Users\\PC\\Documents\\PROGRAMMING\\New folder\\MERN-BF\\frontend\\src\\components\\Printing\\styles.js",[],[],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":58,"column":6,"nodeType":"252","endLine":58,"endColumn":8,"suggestions":"253"},{"ruleId":"250","severity":1,"message":"254","line":125,"column":6,"nodeType":"252","endLine":125,"endColumn":23,"suggestions":"255"},{"ruleId":"250","severity":1,"message":"254","line":125,"column":6,"nodeType":"252","endLine":125,"endColumn":23,"suggestions":"256"},{"ruleId":"250","severity":1,"message":"251","line":68,"column":6,"nodeType":"252","endLine":68,"endColumn":8,"suggestions":"257"},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["260"],"React Hook useEffect has a missing dependency: 'position_id'. Either include it or remove the dependency array.",["261"],["262"],["263"],"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"266","fix":"268"},{"desc":"264","fix":"269"},"Update the dependencies array to be: [getUsers]",{"range":"270","text":"271"},"Update the dependencies array to be: [dep_id, loading, position_id]",{"range":"272","text":"273"},{"range":"274","text":"273"},{"range":"275","text":"271"},[1925,1927],"[getUsers]",[4223,4240],"[dep_id, loading, position_id]",[4223,4240],[2301,2303]]